%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Vector Running Human.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Алексей Егоров
%%CreationDate: 3/1/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Microvector</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-01-16T15:04:33+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-01-16T15:04:33+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-01-16T15:04:33+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVpkUYqsNwo7Yqpm9Ufs/jiqw6kg/Y/HFWMed&#xA;Pza8l+TLVbjzDfR2hkBMFvUyTyU/kiQM5HblSg7nFXl8n/Oa35bJchF0jV5LcfamWO3B/wBijTCv&#xA;0kYq9H/L/wDO/wDLjz3ILbQ9TC6kQWOmXSmC5oNzxVvhkoNz6bNTvirPMVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqm7YqoO2KqLtiqg7Yqw78z/Plr5I8m3/mCZRL&#xA;NCojsrcmgluJDxjQ07V+Jv8AJBxV8C+YPMOs+YdXuNX1i6e81C6YtLM5+5VHRVXoqjYDFUuxVVtr&#xA;m5tbiK5tZXguYHWSGeJijo6mqsrLQqQdwRir7z/5xt/Nyf8AMHydJDqjBvMWiFLfUHG3rRuD6NxT&#xA;+ZwjB/8AKBO1aYq9cxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuPTFV&#xA;F8VUHxVQfFVB8VfOX/OZV1cL5d8uWq1+rS3k0snhzjiCpX3pI2KvlPFXYq7FX0J/zhRcTL+ZesWw&#xA;ciCTRpZHTsXjurdVP0CRvvxV9oYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYqpOMVUHGKqDjFVBxiryn/nIvyHdebvy7uFsIzLqekyC/tIUFWkCKyyxqB1JjYkDuQBir4c&#xA;IIND1xVrFXYq+v8A/nDL8vbzTdH1LzpfxGJtXVbTSwwoTbRtylkp/K8gUL/q/LFX0rirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdiqxnpiqi8reOKqLzyfzH78VUHuZv52+84qwX82PzasPy98&#xA;uHUrtmuL64Ji02wVyrTSgVJJ/ZRKgu38SMVfInmD/nIr84NavHnbzFcafEWrHa2DG3jQfygr8bD/&#xA;AF2OKpdD+eH5vRElfN2pknY87hpP+J8sVVf+V7/nB/1Nd/8A8GP6YqiP+hhvzmpT/FFx9Mdv/wBU&#xA;8VVYP+cj/wA6oQQnmV25dfUtrOT7ucLUxVkfk7/nK78xNN1IP5lePX9NkIEsRihtpkH80TwJGtfZ&#xA;1NfbrirL9Q/Kb8tfzlWbzB+XWqRaVrz1l1HRrgBRzY7s8IPKOrHd4+SH51xVhk3/ADiJ+c0dx6S2&#xA;llLHv/pCXaBNvZgr/wDC4q9K/Lb/AJwzis76HUfPeoRXqREONHsefpORvSadhGxXxVFH+tTFX09B&#xA;BBbwR29vGsMEKiOKKMBURFFFVVFAAAKADFV+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVa&#xA;7YqoO2KqDtiqg7Yqleu63puiaTd6tqc629hZRtNcTN0VVHh1JPQAdTtir4G/NP8AMbUvP3my41m6&#xA;5RWa/udMsydobdT8I2/bb7Tnx9qYqxBVZmCqCWJoANyScVaxV2KuxV2KuxVFabqeo6XfQ3+m3Utn&#xA;fW7B4LmB2jkRh3VlIIxV9hf840f85B6z5zv5fKfmt4pNXit/W06/VfTe5Ef96kqj4DIqkMCoFQDU&#xA;bYq+iMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVaY0xVRdsVUHbFVB2xVQdsVfH/APzk&#xA;1+cH+IdWbyhos9dE0yT/AHITIfhubpP2ajrHCdh4tU9lOKvB8VfSX/OKn5OfX7pfP2uQf6HauV0G&#xA;BxtJMpo1yQf2Yzsn+VU/s7qvpTWfJ3lLWAw1bR7K/wCQoTc28Up8erqTirBdY/5xy/J7UeTHQVtJ&#xA;T/uy0mmhpXwRX9P/AIXFXyR+cHl7yh5c883uh+Vpbiaz08LDdSXMiS/6SN5EQokfwpUKa1PIHFWF&#xA;Yq7FXYqm/lHzNqHlfzNpvmHTjS80y4S4jU7Bwp+KNv8AJdaqfY4q/Sryz5h03zJ5f0/XtMf1LHUo&#xA;EuIDtUBxUq1OjKfhYdiMVTPFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpucVUHOKqDk4qo&#xA;OcVYF+dutapov5W+YtR0tmS+jtwkcibMgmkSJ5FPYojlq9qYq+AiSTU9cVZ7+S/5W3v5h+cIdNAe&#xA;PR7XjPrF2v8AuuCv2FPT1JSOKfSeinFX33Y2Fjpthb6fYQpbWVpGsNtbxiipGg4qoHsBiq52xVhf&#xA;5seeYvJXkbUtdqDdono6fG2/O6l+GLY9Qp+Nh/KDir8/J55rieS4ndpZ5maSWRjVmdjVmJPUk4qp&#xA;4q7FXYq7FX1l/wA4YfmKJbTUPIV9N8cBa/0cMf8AdbGlxEv+q5EgH+UxxV9RYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FWmWuKqbQE98VUmtGPcYqptp8h/aX8cVQWp+XLfUrC50++SOeyu4ng&#xA;uYHrxeORSrKfmDir5x1f/nCe3k1RpNL8zG10x2qIJ7b15Y1J+yHWSIP7VAxV7d+W/wCWvl38vfLi&#xA;6Noys5dvVvb2WnrTykU5NQAAAbKo6D3qSqyVziqg5xV8d/8AOVf5hfpvzdF5Xs5eWnaDX6zxPwve&#xA;yD4/n6S0T2PLFXhmKuxV2Ksys/yq813f5dXfnyOD/cTazLGEIPqSRAlZZ0HdI5OKn6f5TirDcVTr&#xA;yZ5q1Hyn5p0zzFpzUutNnWZVrQOnSSNiP2ZEJU+xxV+jejeY7TWtHstX0+b1bK/hjuLdweqSKGFf&#xA;Aiu47HFXajrtrp1pJeX94lpaQjlLcTyLHGoHdmYgDFXh3n7/AJy68s6QJbTyskmu361UXLFobNW8&#xA;eR/eSUPZQAezYq8S/wCho/zsGpfXRrwCV/3j+rWxg41rx4mMt9PLl74q+ufyN/NqD8yvKH6TkhS1&#xA;1eyk+raraxklBJx5LJHWp4SLuK9CCN6VKr0TFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVN2x&#xA;VQdsVUHbFVB2xVhv5p+ebfyV5J1LXpCpuIk9Kwib/dl1J8MS07gH4m/yQcVfn3dXVxd3M11cyNLc&#xA;Tu0s0rGrM7nkzE+JJriqlirsVZp+Uv5b3/5gecLbRoeUVhH+/wBUu1H91bKRyoTtzf7Ke58AcVfe&#xA;ltoOkWeixaJb2saaTDALRLMisfoBeHAg1qCuxr1xV8K/nR+Wlx5B85T2CKzaPeVuNInbflCTvGT3&#xA;eInifoPfFWA4q9c8gf8AORvmfyX5HfyzZWcN3LHK76fe3LMVt45fiaP0l48/jLMvxDc98VYF5t8+&#xA;+b/N139a8w6pNfMGLRQs3GGMnb93CtI0+gYqkGKuxV9p/wDOHHkzWdE8l6prWpQtbJr08T2MMgKu&#xA;0ECMFmof2ZGlPHxAr0IxV9A4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWmO2KqLtiqHdsVUHbFV&#xA;Bzir47/5yr/ML9N+bovK9lLy07Qa/WeJ+F72QfH8/SWiex5Yq8MxV2KuxV9W/wDOJXnX8vbXRJPL&#xA;Cn6h5su5mmuHuGFL2lRGsD7bxpt6R36sK1NFX0c64q8+/Ob8tLbz75NuNNCqurW1bjSLhtuM6j7B&#xA;P8kg+FvoPYYq+Cru1ubS6mtLmNobm3dop4XFGR0JVlYeIIpiqlirYBJoOuKvW/y6/wCcY/zK84+j&#xA;d3Ft+gdGkofr1+pWRk8YrfaR6g1Bbip/mxV9Rfl1/wA41/lp5M9O5Nn+m9XWh/SGoqsgVh3ihp6a&#xA;b9DQsP5sVerYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpu2KqDnFVB2xVQdsVYb+afniDyV5&#xA;J1LXnobiFPSsIm/buZfhiWngD8Tf5IOKvz7urq4u7ma6uZGluJ3aWaVjVmdzyZifEk1xVSxV2Kux&#xA;Vcjujq6MVdSGVlNCCNwQRir6V/Jf/nKSSD0PL/n6UywbR2uvmpdOwW6AFWH/ABYNx+1X7QVfUkMJ&#xA;ureO5tWSe3mUSQzRuro6MKqysCQQR0IxV8+/nz/zjNr3mfWX8z+UY4TqFwoGo6bI6Q+s67CaNyQn&#xA;MigYMRWla1xV515O/wCcQfzQ1XUhH5ijh8u6chrLcPLDdysPCKO3kcE/67L9PTFX01+XX5Bflv5E&#xA;4XGnaf8AXtWX/pa3/GacHxjFAkX+wUHxJxV6NirsVdirsVdirsVdirsVdirsVdiqxnp0xVSadx0O&#xA;KqTXUo6N+AxVSa9uB0b8BirFPzH/ADLtfI3lS78wX7eoIaR21qvFWnnfZI1JHzLHsoJptir5dP8A&#xA;zmN+bH6T+siPTvqfOosDbkpw/lMgcSVp3r1+7FXs3kD/AJy18geYhHa+YA3lvU2opadvUs2Y7fDc&#xA;ADh4/vFUD+Y4q9mhu7a6gS4tpUnt5RyimjYOjKe6stQRiqx2xVQdsVfIH/OV/wCYX6Y80weU7KXl&#xA;YaH8d5xPwveyLuPf0ozx+bMMVeD4q7FWb6T+TX5g6t5Mfzdp2mtcaYrsqQpU3MiJ9qaKKlXRWHHb&#xA;evQYqwkggkEUI2IOKtYq7FXrH5Mf85CeZ/y6uEsJy+qeVnas2mO3xQ8j8T2rN9g9yn2W9ieWKvt7&#xA;yX558sedNEi1ny9epeWklBIo2lhkpUxzR/aRx4H5ioocVT7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;49MVUXxVQeuKqD4qoPir53/5zF03U5vK2h30KM9hZ3ci3hWpCvMgETMPD4WWviad8VfJ2KuxVlXk&#xA;r8z/AD15LnEnl7VprWEmslkx9W2fx5QvySp/mA5eBxV9E+RP+cvtBvxHaecrE6VcnY6haBprU+7R&#xA;/FLH9HPFXpnnT80/Lmjfl7f+btNvrfUYI4+Fg0EiyJLdSfDFGSp/mNXHUAHwxV8DXl5dXt5PeXcj&#xA;TXVzI81xM27PJIxZ2PuSa4qo4q9I/I78pbz8xPNSwTK8fl/TysusXS1HwE/DAh/nlpT2FT2oVX3b&#xA;a6daWNnBZWcKwWltGsNvBGAqJGihVVQOgAFMVeUfmx/zjv5W87CXUbELo/mJvi+uxL+6mbwuIxSp&#xA;P84+Lxr0xV8h+dvy/wDNXkrVDp3mCya3dq+hcL8UEyj9qKQbMPbqO4GKsdxV2Ksk8ifmD5q8ja2m&#xA;r+XbxracUFxAfihnjBr6c0fRlP3jqCDvir9EvIfm2083+TtJ8yWi8ItTt1maKtfTk+zLHXvwkVl+&#xA;jFU+xV2KuxV2KuxV2KuxV2KuxV2KuxV2KtFQcVUnixVQeLFVB4sVQOo6XZahZzWV9bx3VncKY57e&#xA;ZQ8bqeqsrVBGKvnD8zv+cTLeb1dS8hyiCXdm0W5cmNj4QTNun+rJUf5QGKvmvWtC1nQ9Rl03WLKa&#xA;wvof7y3nQowHYivVT2I2OKoDFXYquEkgjMYY+mxDMlTxLAEAkeIqcVW4qmvlbyzrHmfzBY6Do8Bu&#xA;NRv5BFCg6DuzseyooLMewGKv0N/Lb8udI8heUrTy/pwDtGPUvbulGuLhgPUlb50oo7KAMVZG8eKq&#xA;Dx4qk3mTyvoXmLS5dL1uyivrCYfHDKK0PZlI+JWHZlIIxV8k/nN/zjdqPlG3ufMHl6Y33lyH47iG&#xA;VgLi1UmlSdhKgJ6j4h3HfFXiGKuxV92f84i3M0v5M2cchJS3vbuOEHspk9Tb/ZO2KvaMVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdiq1kBxVReLFVB4sVUHixVjHnX8vfKnnHTvqPmDT47tFr6M32Zoie&#xA;8Uq/Ev6j3xV8q/md/wA4v+avLfq6h5aL69oyAs0SqPrsKj+aNdpR/lR7/wCSMVeKMrIxRwVZSQyk&#xA;UII6gjFVuKuxV9wf84v/AJLDyd5f/wATa1Bx8zazECsUgo1paN8SxUO4eTZpPDZexqq9wfFVB8VU&#xA;HxVQfFXn/wCen/kpfNH/ADBN/wASXFXwJirsVffH/OKdmLf8kNDkoAbqW8mbah2u5YxXx2jGKvXM&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVcQDiqm0VcVUXgPhiqi9u/wDKfuxVRe1l/kb7jirz&#xA;L8zP+cfPJ/nkSXUlq2ma4241W1SjM3/F8eyyj50bwYYq+Y/M3/OM35u6NqDW9to0mr2tf3N7ZUZW&#xA;H+UjFZEPzFPAnFXpv5C/84t69b6/beZvPtqlra2LCWy0V2SWSWZaFHnCFkWNTvwJqSNwB1VfWWKq&#xA;b4qoPiqg+KqD4q8//PT/AMlL5o/5gm/4kuKvgTFXYq/RP/nH20Np+TPlOIgjlZCahIP99I0vb/Xx&#xA;V6DirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVU3xVQfFVB8VUHx&#xA;V5/+en/kpfNH/ME3/ElxV8CYq7FX6XflfaC0/LXynbAAGHR7BWoONWFsnI09zvirJsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqm+KqD4qoPiqg+KvP/z0/wDJS+aP&#xA;+YJv+JLir4ExV2Kv1J0ez+paRY2RHH6tbxQ0rWnpoF6/RiqLxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kqb4qoPiqg+KqD4qwb86LVrn8qvNUa1qunTy7b7RL6h/BM&#xA;Vfn7iqP0Gz+u65p1nTl9ZuoYeJHKvqSBace/Xpir9RcVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVWuMVUHU4qoOpxVQdTiqB1Kwt7+xubG5TnbXUTwTp0qkilWH3&#xA;HFX5/wDnv8rfN/k7W7nT7/T55LaNyLXUI4naCeOvwOrgFakdVrUYqz78gfyH84+YfN2ma5qVjPpX&#xA;l3S7iK8kurlGiadoXEiRQI4DPyZfiYDiBXetBir7nxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:9ce5ca4f-0605-ab4e-ad09-ebfb211089c3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:9ce5ca4f-0605-ab4e-ad09-ebfb211089c3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:94ad77fe-f9c8-4553-a2c9-fe8522a6de87</stRef:instanceID>
            <stRef:documentID>xmp.did:c7e7b661-c327-9e43-a071-77b99f8f7842</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9ce5ca4f-0605-ab4e-ad09-ebfb211089c3</stEvt:instanceID>
                  <stEvt:when>2014-01-16T15:04:33+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=183 B=200</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>182</xmpG:red>
                           <xmpG:green>182</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=170 B=212</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>170</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
209.255 378.937 mo
207.09 378.937 204.892 378.488 202.793 377.538 cv
194.892 373.964 194.959 356.762 194.959 356.762 cv
194.71 292.655 li
194.358 292.419 li
194.434 292.314 194.509 292.21 194.585 292.106 cv
195.403 292.655 li
195.652 356.762 li
195.652 356.762 195.585 373.964 203.486 377.538 cv
205.473 378.437 207.549 378.887 209.601 378.933 cv
209.486 378.935 209.37 378.937 209.255 378.937 cv
96.2124 320.743 mo
93.5893 320.743 90.9369 320.065 88.5258 318.651 cv
27.797 283.037 li
22.0879 279.689 20.1734 272.347 23.5204 266.637 cv
25.3394 263.534 li
27.5613 259.744 31.5609 257.608 35.6877 257.608 cv
35.8032 257.608 35.9186 257.61 36.0342 257.613 cv
32.031 257.729 28.1923 259.85 26.0326 263.534 cv
24.2135 266.637 li
20.8665 272.347 22.7811 279.689 28.4901 283.037 cv
89.2189 318.651 li
91.5238 320.003 94.0495 320.682 96.559 320.739 cv
96.4437 320.742 96.3279 320.743 96.2124 320.743 cv
105.341 257.613 mo
105.225 257.61 105.11 257.608 104.995 257.608 cv
104.994 257.608 li
131.984 204.2 li
131.986 204.2 131.987 204.2 131.989 204.2 cv
132.104 204.204 132.22 204.205 132.335 204.205 cv
132.449 204.205 132.563 204.204 132.677 204.2 cv
105.687 257.608 li
105.572 257.608 105.456 257.61 105.341 257.613 cv
79.6617 204.205 mo
77.2355 204.205 74.7862 203.471 72.6661 201.943 cv
72.4688 201.801 li
67.0883 197.925 65.8785 190.416 69.7688 185.046 cv
94.1214 151.429 li
97.9442 146.152 104.059 143.044 110.547 143.044 cv
110.663 143.044 110.779 143.045 110.894 143.047 cv
104.535 143.156 98.5692 146.246 94.8145 151.429 cv
70.4618 185.046 li
66.5716 190.416 67.7815 197.925 73.1618 201.801 cv
73.3592 201.943 li
75.3784 203.398 77.6962 204.134 80.0084 204.2 cv
79.8928 204.204 79.7775 204.205 79.6617 204.205 cv
187.251 143.187 mo
186.541 143.171 li
180.593 137.925 176.841 130.247 176.841 121.693 cv
176.841 105.881 189.659 93.0631 205.47 93.0631 cv
205.586 93.0631 205.701 93.0638 205.817 93.0652 cv
190.165 93.2511 177.534 105.997 177.534 121.693 cv
177.534 130.256 181.293 137.94 187.251 143.187 cv
f
209.948 378.937 mo
209.832 378.937 209.717 378.935 209.601 378.933 cv
207.549 378.887 205.473 378.437 203.486 377.538 cv
195.585 373.964 195.652 356.762 195.652 356.762 cv
195.403 292.655 li
194.585 292.106 li
194.66 292.001 194.735 291.897 194.811 291.793 cv
196.096 292.655 li
196.345 356.762 li
196.345 356.762 196.278 373.964 204.179 377.538 cv
206.166 378.437 208.242 378.887 210.294 378.933 cv
210.179 378.935 210.063 378.937 209.948 378.937 cv
96.9055 320.743 mo
96.79 320.743 96.6746 320.742 96.559 320.739 cv
94.0495 320.682 91.5238 320.003 89.2189 318.651 cv
28.4901 283.037 li
22.7811 279.689 20.8665 272.347 24.2135 266.637 cv
26.0326 263.534 li
28.1923 259.85 32.031 257.729 36.0342 257.613 cv
36.1494 257.61 36.2653 257.608 36.3808 257.608 cv
36.4963 257.608 36.6116 257.61 36.7273 257.613 cv
32.7241 257.729 28.8854 259.85 26.7256 263.534 cv
24.9065 266.637 li
21.5595 272.347 23.4741 279.689 29.183 283.037 cv
89.9119 318.651 li
92.2169 320.003 94.7425 320.682 97.2521 320.739 cv
97.1367 320.742 97.021 320.743 96.9055 320.743 cv
106.37 257.628 mo
106.143 257.615 105.915 257.608 105.688 257.608 cv
105.687 257.608 105.688 257.608 105.687 257.608 cv
132.677 204.2 li
132.679 204.2 132.68 204.2 132.682 204.2 cv
132.797 204.204 132.913 204.205 133.028 204.205 cv
133.142 204.205 133.256 204.204 133.37 204.2 cv
106.37 257.628 li
80.3548 204.205 mo
80.2395 204.205 80.1238 204.204 80.0084 204.2 cv
77.6962 204.134 75.3784 203.398 73.3592 201.943 cv
73.1618 201.801 li
67.7815 197.925 66.5716 190.416 70.4618 185.046 cv
94.8145 151.429 li
98.5692 146.246 104.535 143.156 110.894 143.047 cv
111.009 143.045 111.125 143.044 111.241 143.044 cv
111.356 143.044 111.472 143.045 111.587 143.047 cv
105.228 143.156 99.2623 146.246 95.5075 151.429 cv
71.1549 185.046 li
67.2646 190.416 68.4745 197.925 73.8548 201.801 cv
74.0522 201.943 li
76.0714 203.398 78.3893 204.134 80.7014 204.2 cv
80.5858 204.204 80.4706 204.205 80.3548 204.205 cv
187.962 143.202 mo
187.251 143.187 li
181.293 137.94 177.534 130.256 177.534 121.693 cv
177.534 105.997 190.165 93.2511 205.817 93.0652 cv
205.932 93.0638 206.048 93.0631 206.164 93.0631 cv
206.279 93.0631 206.395 93.0638 206.51 93.0652 cv
190.858 93.2511 178.227 105.997 178.227 121.693 cv
178.227 130.263 181.994 137.955 187.962 143.202 cv
f
210.641 378.937 mo
210.525 378.937 210.41 378.935 210.294 378.933 cv
208.242 378.887 206.166 378.437 204.179 377.538 cv
196.278 373.964 196.345 356.762 196.345 356.762 cv
196.096 292.655 li
194.811 291.793 li
194.886 291.689 194.962 291.584 195.037 291.48 cv
196.789 292.655 li
197.038 356.762 li
197.038 356.762 196.971 373.964 204.872 377.538 cv
206.859 378.437 208.935 378.887 210.987 378.933 cv
210.872 378.935 210.756 378.937 210.641 378.937 cv
97.5985 320.743 mo
97.483 320.743 97.3676 320.742 97.2521 320.739 cv
94.7425 320.682 92.2169 320.003 89.9119 318.651 cv
29.183 283.037 li
23.4741 279.689 21.5595 272.347 24.9065 266.637 cv
26.7256 263.534 li
28.8854 259.85 32.7241 257.729 36.7273 257.613 cv
36.8425 257.61 36.9584 257.608 37.0738 257.608 cv
37.1893 257.608 37.3047 257.61 37.4203 257.613 cv
33.4172 257.729 29.5784 259.85 27.4187 263.534 cv
25.5996 266.637 li
22.2526 272.347 24.1672 279.689 29.8762 283.037 cv
90.605 318.651 li
92.9099 320.003 95.4356 320.682 97.9451 320.739 cv
97.8297 320.742 97.714 320.743 97.5985 320.743 cv
107.035 257.685 mo
106.814 257.66 106.592 257.641 106.37 257.628 cv
133.37 204.2 li
133.372 204.2 133.373 204.2 133.375 204.2 cv
133.49 204.204 133.606 204.205 133.721 204.205 cv
133.835 204.205 133.949 204.204 134.063 204.2 cv
107.035 257.685 li
81.0478 204.205 mo
80.9324 204.205 80.8169 204.204 80.7014 204.2 cv
78.3893 204.134 76.0714 203.398 74.0522 201.943 cv
73.8548 201.801 li
68.4745 197.925 67.2646 190.416 71.1549 185.046 cv
95.5075 151.429 li
99.2623 146.246 105.228 143.156 111.587 143.047 cv
111.702 143.045 111.818 143.044 111.934 143.044 cv
112.049 143.044 112.165 143.045 112.28 143.047 cv
105.921 143.156 99.9553 146.246 96.2006 151.429 cv
71.848 185.046 li
67.9577 190.416 69.1676 197.925 74.5479 201.801 cv
74.7452 201.943 li
76.7645 203.398 79.0823 204.134 81.3945 204.2 cv
81.2789 204.204 81.1636 204.205 81.0478 204.205 cv
188.673 143.217 mo
187.962 143.202 li
181.994 137.955 178.227 130.263 178.227 121.693 cv
178.227 105.997 190.858 93.2511 206.51 93.0652 cv
206.625 93.0638 206.741 93.0631 206.856 93.0631 cv
206.972 93.0631 207.088 93.0638 207.203 93.0652 cv
191.551 93.2511 178.92 105.997 178.92 121.693 cv
178.92 130.272 182.694 137.97 188.673 143.217 cv
.996078 .996078 .996078 rgb
f
211.334 378.937 mo
211.218 378.937 211.103 378.935 210.987 378.933 cv
208.935 378.887 206.859 378.437 204.872 377.538 cv
196.971 373.964 197.038 356.762 197.038 356.762 cv
196.789 292.655 li
195.037 291.48 li
195.113 291.376 195.188 291.271 195.264 291.167 cv
197.482 292.655 li
197.731 356.762 li
197.731 356.762 197.664 373.964 205.565 377.538 cv
207.553 378.437 209.628 378.887 211.68 378.933 cv
211.565 378.935 211.449 378.937 211.334 378.937 cv
98.2916 320.743 mo
98.1761 320.743 98.0607 320.742 97.9451 320.739 cv
95.4356 320.682 92.9099 320.003 90.605 318.651 cv
29.8762 283.037 li
24.1672 279.689 22.2526 272.347 25.5996 266.637 cv
27.4187 263.534 li
29.5784 259.85 33.4172 257.729 37.4203 257.613 cv
37.5355 257.61 37.6514 257.608 37.7669 257.608 cv
37.8824 257.608 37.9978 257.61 38.1134 257.613 cv
34.1106 257.729 30.2714 259.85 28.1118 263.534 cv
26.2927 266.637 li
22.9457 272.347 24.8603 279.689 30.5694 283.037 cv
91.2981 318.651 li
93.603 320.003 96.1287 320.682 98.6382 320.739 cv
98.5228 320.742 98.4071 320.743 98.2916 320.743 cv
107.682 257.776 mo
107.466 257.74 107.251 257.709 107.035 257.685 cv
134.063 204.2 li
134.065 204.2 134.066 204.2 134.068 204.2 cv
134.183 204.204 134.299 204.205 134.414 204.205 cv
134.528 204.205 134.642 204.204 134.756 204.2 cv
107.682 257.776 li
81.7409 204.205 mo
81.6256 204.205 81.5099 204.204 81.3945 204.2 cv
79.0823 204.134 76.7645 203.398 74.7452 201.943 cv
74.5479 201.801 li
69.1676 197.925 67.9577 190.416 71.848 185.046 cv
96.2006 151.429 li
99.9553 146.246 105.921 143.156 112.28 143.047 cv
112.396 143.045 112.511 143.044 112.627 143.044 cv
112.742 143.044 112.858 143.045 112.973 143.047 cv
106.614 143.156 100.648 146.246 96.8937 151.429 cv
72.5411 185.046 li
68.6508 190.416 69.8607 197.925 75.241 201.801 cv
75.4384 201.943 li
77.4576 203.398 79.7754 204.134 82.0876 204.2 cv
81.972 204.204 81.8567 204.205 81.7409 204.205 cv
189.383 143.233 mo
188.673 143.217 li
182.694 137.97 178.92 130.272 178.92 121.693 cv
178.92 105.997 191.551 93.2511 207.203 93.0652 cv
207.318 93.0638 207.434 93.0631 207.55 93.0631 cv
207.665 93.0631 207.781 93.0638 207.896 93.0652 cv
192.244 93.2511 179.613 105.997 179.613 121.693 cv
179.613 130.281 183.394 137.985 189.383 143.233 cv
f
212.027 378.937 mo
211.911 378.937 211.796 378.935 211.68 378.933 cv
209.628 378.887 207.553 378.437 205.565 377.538 cv
197.664 373.964 197.731 356.762 197.731 356.762 cv
197.482 292.655 li
195.264 291.167 li
195.339 291.063 195.415 290.958 195.49 290.854 cv
198.175 292.655 li
198.424 356.762 li
198.424 356.762 198.357 373.964 206.258 377.538 cv
208.246 378.437 210.321 378.887 212.373 378.933 cv
212.258 378.935 212.143 378.937 212.027 378.937 cv
98.9847 320.743 mo
98.8692 320.743 98.7538 320.742 98.6382 320.739 cv
96.1287 320.682 93.603 320.003 91.2981 318.651 cv
30.5694 283.037 li
24.8603 279.689 22.9457 272.347 26.2927 266.637 cv
28.1118 263.534 li
30.2714 259.85 34.1106 257.729 38.1134 257.613 cv
38.229 257.61 38.3442 257.608 38.46 257.608 cv
38.5755 257.608 38.6908 257.61 38.8065 257.613 cv
34.8033 257.729 30.9645 259.85 28.8048 263.534 cv
26.9858 266.637 li
23.6387 272.347 25.5533 279.689 31.2623 283.037 cv
91.9911 318.651 li
94.2961 320.003 96.8217 320.682 99.3313 320.739 cv
99.2159 320.742 99.1002 320.743 98.9847 320.743 cv
108.312 257.901 mo
108.102 257.853 107.892 257.812 107.682 257.776 cv
134.756 204.2 li
134.758 204.2 134.759 204.2 134.761 204.2 cv
134.876 204.204 134.992 204.205 135.107 204.205 cv
135.221 204.205 135.335 204.204 135.449 204.2 cv
108.312 257.901 li
82.434 204.205 mo
82.3186 204.205 82.203 204.204 82.0876 204.2 cv
79.7754 204.134 77.4576 203.398 75.4384 201.943 cv
75.241 201.801 li
69.8607 197.925 68.6508 190.416 72.5411 185.046 cv
96.8937 151.429 li
100.648 146.246 106.614 143.156 112.973 143.047 cv
113.089 143.045 113.204 143.044 113.32 143.044 cv
113.435 143.044 113.551 143.045 113.666 143.047 cv
107.307 143.156 101.341 146.246 97.5867 151.429 cv
73.2341 185.046 li
69.3438 190.416 70.5537 197.925 75.934 201.801 cv
76.1314 201.943 li
78.1507 203.398 80.4685 204.134 82.7806 204.2 cv
82.665 204.204 82.5498 204.205 82.434 204.205 cv
190.094 143.248 mo
189.383 143.233 li
183.394 137.985 179.613 130.281 179.613 121.693 cv
179.613 105.997 192.244 93.2511 207.896 93.0652 cv
208.012 93.0638 208.127 93.0631 208.243 93.0631 cv
208.358 93.0631 208.474 93.0638 208.589 93.0652 cv
192.937 93.2511 180.306 105.997 180.306 121.693 cv
180.306 130.289 184.095 138 190.094 143.248 cv
f
212.72 378.937 mo
212.604 378.937 212.489 378.935 212.373 378.933 cv
210.321 378.887 208.246 378.437 206.258 377.538 cv
198.357 373.964 198.424 356.762 198.424 356.762 cv
198.175 292.655 li
195.49 290.854 li
195.566 290.75 195.642 290.645 195.717 290.541 cv
198.868 292.655 li
199.117 356.762 li
199.117 356.762 199.051 373.964 206.951 377.538 cv
208.939 378.437 211.014 378.887 213.066 378.933 cv
212.951 378.935 212.836 378.937 212.72 378.937 cv
99.6777 320.743 mo
99.5622 320.743 99.4469 320.742 99.3313 320.739 cv
96.8217 320.682 94.2961 320.003 91.9911 318.651 cv
31.2623 283.037 li
25.5533 279.689 23.6387 272.347 26.9858 266.637 cv
28.8048 263.534 li
30.9645 259.85 34.8033 257.729 38.8065 257.613 cv
38.9217 257.61 39.0375 257.608 39.153 257.608 cv
39.2685 257.608 39.3839 257.61 39.4995 257.613 cv
35.4964 257.729 31.6576 259.85 29.4979 263.534 cv
27.6788 266.637 li
24.3318 272.347 26.2464 279.689 31.9554 283.037 cv
92.6842 318.651 li
94.9892 320.003 97.5148 320.682 100.024 320.739 cv
99.909 320.742 99.7932 320.743 99.6777 320.743 cv
108.926 258.057 mo
108.722 257.999 108.517 257.947 108.312 257.901 cv
135.449 204.2 li
135.451 204.2 135.452 204.2 135.454 204.2 cv
135.569 204.204 135.685 204.205 135.8 204.205 cv
135.914 204.205 136.029 204.204 136.142 204.2 cv
108.926 258.057 li
83.1271 204.205 mo
83.0117 204.205 82.8961 204.204 82.7806 204.2 cv
80.4685 204.134 78.1507 203.398 76.1314 201.943 cv
75.934 201.801 li
70.5537 197.925 69.3438 190.416 73.2341 185.046 cv
97.5867 151.429 li
101.341 146.246 107.307 143.156 113.666 143.047 cv
113.782 143.045 113.897 143.044 114.013 143.044 cv
114.128 143.044 114.244 143.045 114.359 143.047 cv
108 143.156 102.035 146.246 98.2798 151.429 cv
73.9272 185.046 li
70.0369 190.416 71.2468 197.925 76.6271 201.801 cv
76.8245 201.943 li
78.8437 203.398 81.1616 204.134 83.4737 204.2 cv
83.3581 204.204 83.2428 204.205 83.1271 204.205 cv
190.804 143.264 mo
190.094 143.248 li
184.095 138 180.306 130.289 180.306 121.693 cv
180.306 105.997 192.937 93.2511 208.589 93.0652 cv
208.705 93.0638 208.82 93.0631 208.936 93.0631 cv
209.051 93.0631 209.167 93.0638 209.282 93.0652 cv
193.631 93.2511 180.999 105.997 180.999 121.693 cv
180.999 130.297 184.796 138.015 190.804 143.264 cv
f
213.413 378.937 mo
213.297 378.937 213.182 378.935 213.066 378.933 cv
211.014 378.887 208.939 378.437 206.951 377.538 cv
199.051 373.964 199.117 356.762 199.117 356.762 cv
198.868 292.655 li
195.717 290.541 li
195.792 290.438 195.868 290.333 195.943 290.229 cv
199.561 292.655 li
199.81 356.762 li
199.81 356.762 199.744 373.964 207.644 377.538 cv
209.632 378.437 211.707 378.887 213.759 378.933 cv
213.644 378.935 213.529 378.937 213.413 378.937 cv
100.371 320.743 mo
100.255 320.743 100.14 320.742 100.024 320.739 cv
97.5148 320.682 94.9892 320.003 92.6842 318.651 cv
31.9554 283.037 li
26.2464 279.689 24.3318 272.347 27.6788 266.637 cv
29.4979 263.534 li
31.6576 259.85 35.4964 257.729 39.4995 257.613 cv
39.6147 257.61 39.7306 257.608 39.8461 257.608 cv
39.9616 257.608 40.077 257.61 40.1926 257.613 cv
36.1895 257.729 32.3507 259.85 30.191 263.534 cv
28.3719 266.637 li
25.0249 272.347 26.9395 279.689 32.6485 283.037 cv
93.3773 318.651 li
95.6823 320.003 98.2079 320.682 100.717 320.739 cv
100.602 320.742 100.486 320.743 100.371 320.743 cv
109.525 258.243 mo
109.326 258.175 109.127 258.113 108.926 258.057 cv
136.142 204.2 li
136.144 204.2 136.145 204.2 136.147 204.2 cv
136.262 204.204 136.378 204.205 136.493 204.205 cv
136.607 204.205 136.722 204.204 136.835 204.2 cv
109.525 258.243 li
83.8201 204.205 mo
83.7048 204.205 83.5891 204.204 83.4737 204.2 cv
81.1616 204.134 78.8437 203.398 76.8245 201.943 cv
76.6271 201.801 li
71.2468 197.925 70.0369 190.416 73.9272 185.046 cv
98.2798 151.429 li
102.035 146.246 108 143.156 114.359 143.047 cv
114.475 143.045 114.59 143.044 114.706 143.044 cv
114.821 143.044 114.937 143.045 115.052 143.047 cv
108.693 143.156 102.728 146.246 98.9729 151.429 cv
74.6203 185.046 li
70.73 190.416 71.9398 197.925 77.3201 201.801 cv
77.5176 201.943 li
79.5368 203.398 81.8546 204.134 84.1668 204.2 cv
84.0512 204.204 83.9359 204.205 83.8201 204.205 cv
191.515 143.279 mo
190.804 143.264 li
184.796 138.015 180.999 130.297 180.999 121.693 cv
180.999 105.997 193.631 93.2511 209.282 93.0652 cv
209.398 93.0638 209.513 93.0631 209.629 93.0631 cv
209.745 93.0631 209.86 93.0638 209.975 93.0652 cv
194.324 93.2511 181.693 105.997 181.693 121.693 cv
181.693 130.306 185.496 138.031 191.515 143.279 cv
.992157 .992157 .992157 rgb
f
214.106 378.937 mo
213.991 378.937 213.875 378.935 213.759 378.933 cv
211.707 378.887 209.632 378.437 207.644 377.538 cv
199.744 373.964 199.81 356.762 199.81 356.762 cv
199.561 292.655 li
195.943 290.229 li
196.02 290.123 196.094 290.021 196.17 289.916 cv
200.254 292.655 li
200.503 356.762 li
200.503 356.762 200.437 373.964 208.337 377.538 cv
210.325 378.437 212.4 378.887 214.452 378.933 cv
214.337 378.935 214.222 378.937 214.106 378.937 cv
101.064 320.743 mo
100.948 320.743 100.833 320.742 100.717 320.739 cv
98.2079 320.682 95.6823 320.003 93.3773 318.651 cv
32.6485 283.037 li
26.9395 279.689 25.0249 272.347 28.3719 266.637 cv
30.191 263.534 li
32.3507 259.85 36.1895 257.729 40.1926 257.613 cv
40.3078 257.61 40.4237 257.608 40.5392 257.608 cv
40.6547 257.608 40.7701 257.61 40.8857 257.613 cv
36.8825 257.729 33.0438 259.85 30.8841 263.534 cv
29.065 266.637 li
25.718 272.347 27.6326 279.689 33.3416 283.037 cv
94.0704 318.651 li
96.3754 320.003 98.901 320.682 101.411 320.739 cv
101.295 320.742 101.179 320.743 101.064 320.743 cv
110.109 258.458 mo
109.915 258.381 109.721 258.309 109.525 258.243 cv
136.835 204.2 li
136.837 204.2 136.838 204.2 136.84 204.2 cv
136.955 204.204 137.071 204.205 137.186 204.205 cv
137.301 204.205 137.414 204.204 137.528 204.2 cv
110.109 258.458 li
84.5132 204.205 mo
84.3979 204.205 84.2822 204.204 84.1668 204.2 cv
81.8546 204.134 79.5368 203.398 77.5176 201.943 cv
77.3201 201.801 li
71.9398 197.925 70.73 190.416 74.6203 185.046 cv
98.9729 151.429 li
102.728 146.246 108.693 143.156 115.052 143.047 cv
115.168 143.045 115.283 143.044 115.399 143.044 cv
115.514 143.044 115.63 143.045 115.746 143.047 cv
109.386 143.156 103.421 146.246 99.666 151.429 cv
75.3134 185.046 li
71.4231 190.416 72.633 197.925 78.0133 201.801 cv
78.2107 201.943 li
80.2299 203.398 82.5477 204.134 84.8599 204.2 cv
84.7443 204.204 84.629 204.205 84.5132 204.205 cv
192.226 143.294 mo
191.515 143.279 li
185.496 138.031 181.693 130.306 181.693 121.693 cv
181.693 105.997 194.324 93.2511 209.975 93.0652 cv
210.091 93.0638 210.206 93.0631 210.322 93.0631 cv
210.438 93.0631 210.553 93.0638 210.668 93.0652 cv
195.017 93.2511 182.386 105.997 182.386 121.693 cv
182.386 130.314 186.196 138.046 192.226 143.294 cv
f
214.799 378.937 mo
214.684 378.937 214.568 378.935 214.452 378.933 cv
212.4 378.887 210.325 378.437 208.337 377.538 cv
200.437 373.964 200.503 356.762 200.503 356.762 cv
200.254 292.655 li
196.17 289.916 li
196.245 289.812 196.322 289.707 196.397 289.603 cv
200.947 292.655 li
201.196 356.762 li
201.196 356.762 201.13 373.964 209.03 377.538 cv
211.018 378.437 213.093 378.887 215.145 378.933 cv
215.03 378.935 214.915 378.937 214.799 378.937 cv
101.757 320.743 mo
101.642 320.743 101.526 320.742 101.411 320.739 cv
98.901 320.682 96.3754 320.003 94.0704 318.651 cv
33.3416 283.037 li
27.6326 279.689 25.718 272.347 29.065 266.637 cv
30.8841 263.534 li
33.0438 259.85 36.8825 257.729 40.8857 257.613 cv
41.0009 257.61 41.1168 257.608 41.2323 257.608 cv
41.3478 257.608 41.4631 257.61 41.5788 257.613 cv
37.5756 257.729 33.7369 259.85 31.5771 263.534 cv
29.758 266.637 li
26.411 272.347 28.3256 279.689 34.0345 283.037 cv
94.7634 318.651 li
97.0684 320.003 99.594 320.682 102.104 320.739 cv
101.988 320.742 101.873 320.743 101.757 320.743 cv
110.679 258.703 mo
110.49 258.616 110.3 258.535 110.109 258.458 cv
137.528 204.2 li
137.53 204.2 137.532 204.2 137.533 204.2 cv
137.649 204.204 137.764 204.205 137.88 204.205 cv
137.993 204.205 138.108 204.204 138.221 204.2 cv
110.679 258.703 li
85.2063 204.205 mo
85.091 204.205 84.9753 204.204 84.8599 204.2 cv
82.5477 204.134 80.2299 203.398 78.2107 201.943 cv
78.0133 201.801 li
72.633 197.925 71.4231 190.416 75.3134 185.046 cv
99.666 151.429 li
103.421 146.246 109.386 143.156 115.746 143.047 cv
115.861 143.045 115.976 143.044 116.092 143.044 cv
116.207 143.044 116.323 143.045 116.439 143.047 cv
110.079 143.156 104.114 146.246 100.359 151.429 cv
76.0064 185.046 li
72.1161 190.416 73.326 197.925 78.7063 201.801 cv
78.9037 201.943 li
80.9229 203.398 83.2408 204.134 85.5529 204.2 cv
85.4373 204.204 85.3221 204.205 85.2063 204.205 cv
192.937 143.31 mo
192.226 143.294 li
186.196 138.046 182.386 130.314 182.386 121.693 cv
182.386 105.997 195.017 93.2511 210.668 93.0652 cv
210.784 93.0638 210.899 93.0631 211.015 93.0631 cv
211.131 93.0631 211.246 93.0638 211.361 93.0652 cv
195.71 93.2511 183.079 105.997 183.079 121.693 cv
183.079 130.323 186.896 138.061 192.937 143.31 cv
f
215.492 378.937 mo
215.377 378.937 215.261 378.935 215.145 378.933 cv
213.093 378.887 211.018 378.437 209.03 377.538 cv
201.13 373.964 201.196 356.762 201.196 356.762 cv
200.947 292.655 li
196.397 289.603 li
196.472 289.5 196.548 289.394 196.623 289.291 cv
201.641 292.655 li
201.889 356.762 li
201.889 356.762 201.823 373.964 209.723 377.538 cv
211.711 378.437 213.787 378.887 215.839 378.933 cv
215.723 378.935 215.608 378.937 215.492 378.937 cv
102.45 320.743 mo
102.335 320.743 102.219 320.742 102.104 320.739 cv
99.594 320.682 97.0684 320.003 94.7634 318.651 cv
34.0345 283.037 li
28.3256 279.689 26.411 272.347 29.758 266.637 cv
31.5771 263.534 li
33.7369 259.85 37.5756 257.729 41.5788 257.613 cv
41.694 257.61 41.8099 257.608 41.9253 257.608 cv
42.0408 257.608 42.1562 257.61 42.2718 257.613 cv
38.2687 257.729 34.4299 259.85 32.2702 263.534 cv
30.4511 266.637 li
27.1042 272.347 29.0187 279.689 34.7277 283.037 cv
95.4565 318.651 li
97.7614 320.003 100.287 320.682 102.797 320.739 cv
102.681 320.742 102.566 320.743 102.45 320.743 cv
111.234 258.975 mo
111.141 258.927 li
110.988 258.849 110.834 258.774 110.679 258.703 cv
138.221 204.2 li
138.223 204.2 138.224 204.2 138.226 204.2 cv
138.342 204.204 138.457 204.205 138.573 204.205 cv
138.686 204.205 138.801 204.204 138.915 204.2 cv
111.234 258.975 li
85.8993 204.205 mo
85.784 204.205 85.6684 204.204 85.5529 204.2 cv
83.2408 204.134 80.9229 203.398 78.9037 201.943 cv
78.7063 201.801 li
73.326 197.925 72.1161 190.416 76.0064 185.046 cv
100.359 151.429 li
104.114 146.246 110.079 143.156 116.439 143.047 cv
116.554 143.045 116.669 143.044 116.785 143.044 cv
116.9 143.044 117.016 143.045 117.132 143.047 cv
110.773 143.156 104.807 146.246 101.052 151.429 cv
76.6995 185.046 li
72.8092 190.416 74.0191 197.925 79.3994 201.801 cv
79.5967 201.943 li
81.616 203.398 83.9338 204.134 86.246 204.2 cv
86.1304 204.204 86.0151 204.205 85.8993 204.205 cv
193.648 143.325 mo
192.937 143.31 li
186.896 138.061 183.079 130.323 183.079 121.693 cv
183.079 105.997 195.71 93.2511 211.361 93.0652 cv
211.477 93.0638 211.592 93.0631 211.708 93.0631 cv
211.824 93.0631 211.939 93.0638 212.055 93.0652 cv
196.403 93.2511 183.772 105.997 183.772 121.693 cv
183.772 130.331 187.598 138.076 193.648 143.325 cv
f
216.185 378.937 mo
216.07 378.937 215.954 378.935 215.839 378.933 cv
213.787 378.887 211.711 378.437 209.723 377.538 cv
201.823 373.964 201.889 356.762 201.889 356.762 cv
201.641 292.655 li
196.623 289.291 li
196.7 289.186 196.774 289.083 196.85 288.978 cv
202.334 292.655 li
202.583 356.762 li
202.583 356.762 202.516 373.964 210.416 377.538 cv
212.404 378.437 214.48 378.887 216.532 378.933 cv
216.416 378.935 216.301 378.937 216.185 378.937 cv
103.143 320.743 mo
103.028 320.743 102.912 320.742 102.797 320.739 cv
100.287 320.682 97.7614 320.003 95.4565 318.651 cv
34.7277 283.037 li
29.0187 279.689 27.1042 272.347 30.4511 266.637 cv
32.2702 263.534 li
34.4299 259.85 38.2687 257.729 42.2718 257.613 cv
42.387 257.61 42.5029 257.608 42.6184 257.608 cv
42.7339 257.608 42.8493 257.61 42.9649 257.613 cv
38.9621 257.729 35.1229 259.85 32.9633 263.534 cv
31.1442 266.637 li
27.7972 272.347 29.7118 279.689 35.4207 283.037 cv
96.1496 318.651 li
98.4546 320.003 100.98 320.682 103.49 320.739 cv
103.374 320.742 103.259 320.743 103.143 320.743 cv
111.785 259.257 mo
111.234 258.975 li
138.915 204.2 li
138.916 204.2 138.917 204.2 138.919 204.2 cv
139.035 204.204 139.15 204.205 139.266 204.205 cv
139.38 204.205 139.494 204.204 139.608 204.2 cv
111.785 259.257 li
86.5924 204.205 mo
86.4771 204.205 86.3614 204.204 86.246 204.2 cv
83.9338 204.134 81.616 203.398 79.5967 201.943 cv
79.3994 201.801 li
74.0191 197.925 72.8092 190.416 76.6995 185.046 cv
101.052 151.429 li
104.807 146.246 110.773 143.156 117.132 143.047 cv
117.247 143.045 117.362 143.044 117.478 143.044 cv
117.593 143.044 117.709 143.045 117.825 143.047 cv
111.466 143.156 105.5 146.246 101.745 151.429 cv
77.3926 185.046 li
73.5023 190.416 74.7122 197.925 80.0925 201.801 cv
80.2899 201.943 li
82.3091 203.398 84.6269 204.134 86.9391 204.2 cv
86.8235 204.204 86.7082 204.205 86.5924 204.205 cv
194.358 143.341 mo
193.648 143.325 li
187.598 138.076 183.772 130.331 183.772 121.693 cv
183.772 105.997 196.403 93.2511 212.055 93.0652 cv
212.17 93.0638 212.285 93.0631 212.401 93.0631 cv
212.517 93.0631 212.632 93.0638 212.748 93.0652 cv
197.096 93.2511 184.465 105.997 184.465 121.693 cv
184.465 130.34 188.298 138.091 194.358 143.341 cv
.988235 .988235 .988235 rgb
f
216.878 378.937 mo
216.763 378.937 216.647 378.935 216.532 378.933 cv
214.48 378.887 212.404 378.437 210.416 377.538 cv
202.516 373.964 202.583 356.762 202.583 356.762 cv
202.334 292.655 li
196.85 288.978 li
196.926 288.873 197.001 288.77 197.077 288.665 cv
203.027 292.655 li
203.276 356.762 li
203.276 356.762 203.209 373.964 211.109 377.538 cv
213.097 378.437 215.173 378.887 217.225 378.933 cv
217.109 378.935 216.994 378.937 216.878 378.937 cv
103.836 320.743 mo
103.721 320.743 103.605 320.742 103.49 320.739 cv
100.98 320.682 98.4546 320.003 96.1496 318.651 cv
35.4207 283.037 li
29.7118 279.689 27.7972 272.347 31.1442 266.637 cv
32.9633 263.534 li
35.1229 259.85 38.9621 257.729 42.9649 257.613 cv
43.0805 257.61 43.1957 257.608 43.3115 257.608 cv
43.427 257.608 43.5423 257.61 43.658 257.613 cv
39.6548 257.729 35.816 259.85 33.6563 263.534 cv
31.8371 266.637 li
28.4902 272.347 30.4048 279.689 36.1138 283.037 cv
96.8425 318.651 li
99.1475 320.003 101.673 320.682 104.183 320.739 cv
104.067 320.742 103.952 320.743 103.836 320.743 cv
112.335 259.539 mo
111.785 259.257 li
139.608 204.2 li
139.61 204.2 139.61 204.2 139.612 204.2 cv
139.728 204.204 139.843 204.205 139.959 204.205 cv
140.073 204.205 140.187 204.204 140.301 204.2 cv
112.335 259.539 li
87.2855 204.205 mo
87.1701 204.205 87.0545 204.204 86.9391 204.2 cv
84.6269 204.134 82.3091 203.398 80.2899 201.943 cv
80.0925 201.801 li
74.7122 197.925 73.5023 190.416 77.3926 185.046 cv
101.745 151.429 li
105.5 146.246 111.466 143.156 117.825 143.047 cv
117.94 143.045 118.056 143.044 118.171 143.044 cv
118.286 143.044 118.402 143.045 118.518 143.047 cv
112.159 143.156 106.193 146.246 102.438 151.429 cv
78.0856 185.046 li
74.1953 190.416 75.4052 197.925 80.7855 201.801 cv
80.9829 201.943 li
83.0022 203.398 85.32 204.134 87.6321 204.2 cv
87.5165 204.204 87.4013 204.205 87.2855 204.205 cv
195.069 143.356 mo
194.358 143.341 li
188.298 138.091 184.465 130.34 184.465 121.693 cv
184.465 105.997 197.096 93.2511 212.748 93.0652 cv
212.863 93.0638 212.978 93.0631 213.094 93.0631 cv
213.21 93.0631 213.325 93.0638 213.441 93.0652 cv
197.789 93.2511 185.158 105.997 185.158 121.693 cv
185.158 130.348 188.999 138.106 195.069 143.356 cv
f
217.571 378.937 mo
217.456 378.937 217.34 378.935 217.225 378.933 cv
215.173 378.887 213.097 378.437 211.109 377.538 cv
203.209 373.964 203.276 356.762 203.276 356.762 cv
203.027 292.655 li
197.077 288.665 li
197.152 288.562 197.229 288.456 197.304 288.353 cv
203.72 292.655 li
203.969 356.762 li
203.969 356.762 203.902 373.964 211.802 377.538 cv
213.79 378.437 215.866 378.887 217.918 378.933 cv
217.802 378.935 217.687 378.937 217.571 378.937 cv
104.529 320.743 mo
104.414 320.743 104.298 320.742 104.183 320.739 cv
101.673 320.682 99.1475 320.003 96.8425 318.651 cv
36.1138 283.037 li
30.4048 279.689 28.4902 272.347 31.8371 266.637 cv
33.6563 263.534 li
35.816 259.85 39.6548 257.729 43.658 257.613 cv
43.7732 257.61 43.889 257.608 44.0045 257.608 cv
44.12 257.608 44.2354 257.61 44.351 257.613 cv
40.3479 257.729 36.5091 259.85 34.3494 263.534 cv
32.5303 266.637 li
29.1833 272.347 31.0979 279.689 36.8069 283.037 cv
97.5357 318.651 li
99.8407 320.003 102.366 320.682 104.876 320.739 cv
104.76 320.742 104.645 320.743 104.529 320.743 cv
112.886 259.821 mo
112.335 259.539 li
140.301 204.2 li
140.303 204.2 140.303 204.2 140.305 204.2 cv
140.421 204.204 140.536 204.205 140.652 204.205 cv
140.766 204.205 140.88 204.204 140.994 204.2 cv
112.886 259.821 li
87.9785 204.205 mo
87.8632 204.205 87.7476 204.204 87.6321 204.2 cv
85.32 204.134 83.0022 203.398 80.9829 201.943 cv
80.7855 201.801 li
75.4052 197.925 74.1953 190.416 78.0856 185.046 cv
102.438 151.429 li
106.193 146.246 112.159 143.156 118.518 143.047 cv
118.633 143.045 118.749 143.044 118.864 143.044 cv
118.979 143.044 119.095 143.045 119.211 143.047 cv
112.852 143.156 106.886 146.246 103.131 151.429 cv
78.7787 185.046 li
74.8884 190.416 76.0983 197.925 81.4786 201.801 cv
81.676 201.943 li
83.6952 203.398 86.013 204.134 88.3252 204.2 cv
88.2096 204.204 88.0943 204.205 87.9785 204.205 cv
195.78 143.371 mo
195.069 143.356 li
188.999 138.106 185.158 130.348 185.158 121.693 cv
185.158 105.997 197.789 93.2511 213.441 93.0652 cv
213.556 93.0638 213.671 93.0631 213.787 93.0631 cv
213.903 93.0631 214.018 93.0638 214.134 93.0652 cv
198.482 93.2511 185.851 105.997 185.851 121.693 cv
185.851 130.357 189.699 138.121 195.78 143.371 cv
f
218.264 378.937 mo
218.149 378.937 218.033 378.935 217.918 378.933 cv
215.866 378.887 213.79 378.437 211.802 377.538 cv
203.902 373.964 203.969 356.762 203.969 356.762 cv
203.72 292.655 li
197.304 288.353 li
197.38 288.248 197.455 288.145 197.531 288.04 cv
204.413 292.655 li
204.662 356.762 li
204.662 356.762 204.595 373.964 212.496 377.538 cv
214.483 378.437 216.559 378.887 218.611 378.933 cv
218.495 378.935 218.38 378.937 218.264 378.937 cv
105.222 320.743 mo
105.107 320.743 104.991 320.742 104.876 320.739 cv
102.366 320.682 99.8407 320.003 97.5357 318.651 cv
36.8069 283.037 li
31.0979 279.689 29.1833 272.347 32.5303 266.637 cv
34.3494 263.534 li
36.5091 259.85 40.3479 257.729 44.351 257.613 cv
44.4662 257.61 44.5821 257.608 44.6976 257.608 cv
44.8131 257.608 44.9285 257.61 45.0441 257.613 cv
41.041 257.729 37.2022 259.85 35.0425 263.534 cv
33.2234 266.637 li
29.8764 272.347 31.791 279.689 37.5 283.037 cv
98.2288 318.651 li
100.534 320.003 103.059 320.682 105.569 320.739 cv
105.454 320.742 105.338 320.743 105.222 320.743 cv
113.437 260.103 mo
112.886 259.821 li
140.994 204.2 li
140.996 204.2 140.997 204.2 140.998 204.2 cv
141.114 204.204 141.23 204.205 141.345 204.205 cv
141.459 204.205 141.573 204.204 141.687 204.2 cv
113.437 260.103 li
88.6716 204.205 mo
88.5562 204.205 88.4406 204.204 88.3252 204.2 cv
86.013 204.134 83.6952 203.398 81.676 201.943 cv
81.4786 201.801 li
76.0983 197.925 74.8884 190.416 78.7787 185.046 cv
103.131 151.429 li
106.886 146.246 112.852 143.156 119.211 143.047 cv
119.326 143.045 119.442 143.044 119.557 143.044 cv
119.673 143.044 119.788 143.045 119.904 143.047 cv
113.545 143.156 107.579 146.246 103.824 151.429 cv
79.4718 185.046 li
75.5815 190.416 76.7914 197.925 82.1717 201.801 cv
82.3691 201.943 li
84.3884 203.398 86.7061 204.134 89.0183 204.2 cv
88.9027 204.204 88.7873 204.205 88.6716 204.205 cv
196.491 143.387 mo
195.78 143.371 li
189.699 138.121 185.851 130.357 185.851 121.693 cv
185.851 105.997 198.482 93.2511 214.134 93.0652 cv
214.249 93.0638 214.365 93.0631 214.48 93.0631 cv
214.596 93.0631 214.711 93.0638 214.827 93.0652 cv
199.175 93.2511 186.544 105.997 186.544 121.693 cv
186.544 130.365 190.4 138.137 196.491 143.387 cv
f
218.958 378.937 mo
218.842 378.937 218.727 378.935 218.611 378.933 cv
216.559 378.887 214.483 378.437 212.496 377.538 cv
204.595 373.964 204.662 356.762 204.662 356.762 cv
204.413 292.655 li
197.531 288.04 li
197.607 287.936 197.682 287.832 197.758 287.728 cv
205.106 292.655 li
205.355 356.762 li
205.355 356.762 205.288 373.964 213.189 377.538 cv
215.176 378.437 217.252 378.887 219.304 378.933 cv
219.189 378.935 219.073 378.937 218.958 378.937 cv
105.915 320.743 mo
105.8 320.743 105.685 320.742 105.569 320.739 cv
103.059 320.682 100.534 320.003 98.2288 318.651 cv
37.5 283.037 li
31.791 279.689 29.8764 272.347 33.2234 266.637 cv
35.0425 263.534 li
37.2022 259.85 41.041 257.729 45.0441 257.613 cv
45.1593 257.61 45.2752 257.608 45.3907 257.608 cv
45.5062 257.608 45.6215 257.61 45.7371 257.613 cv
41.734 257.729 37.8952 259.85 35.7355 263.534 cv
33.9164 266.637 li
30.5694 272.347 32.484 279.689 38.193 283.037 cv
98.9218 318.651 li
101.227 320.003 103.752 320.682 106.262 320.739 cv
106.147 320.742 106.031 320.743 105.915 320.743 cv
113.987 260.384 mo
113.437 260.103 li
141.687 204.2 li
141.689 204.2 141.69 204.2 141.692 204.2 cv
141.807 204.204 141.923 204.205 142.038 204.205 cv
142.152 204.205 142.266 204.204 142.38 204.2 cv
113.987 260.384 li
89.3647 204.205 mo
89.2494 204.205 89.1337 204.204 89.0183 204.2 cv
86.7061 204.134 84.3884 203.398 82.3691 201.943 cv
82.1717 201.801 li
76.7914 197.925 75.5815 190.416 79.4718 185.046 cv
103.824 151.429 li
107.579 146.246 113.545 143.156 119.904 143.047 cv
120.019 143.045 120.135 143.044 120.25 143.044 cv
120.366 143.044 120.481 143.045 120.597 143.047 cv
114.238 143.156 108.272 146.246 104.517 151.429 cv
80.1647 185.046 li
76.2745 190.416 77.4844 197.925 82.8647 201.801 cv
83.0621 201.943 li
85.0813 203.398 87.3992 204.134 89.7114 204.2 cv
89.5958 204.204 89.4805 204.205 89.3647 204.205 cv
197.202 143.402 mo
196.491 143.387 li
190.4 138.137 186.544 130.365 186.544 121.693 cv
186.544 105.997 199.175 93.2511 214.827 93.0652 cv
214.942 93.0638 215.058 93.0631 215.173 93.0631 cv
215.289 93.0631 215.404 93.0638 215.52 93.0652 cv
199.868 93.2511 187.237 105.997 187.237 121.693 cv
187.237 130.373 191.101 138.152 197.202 143.402 cv
.984314 .984314 .984314 rgb
f
219.651 378.937 mo
219.535 378.937 219.42 378.935 219.304 378.933 cv
217.252 378.887 215.176 378.437 213.189 377.538 cv
205.288 373.964 205.355 356.762 205.355 356.762 cv
205.106 292.655 li
197.758 287.728 li
197.834 287.623 197.909 287.519 197.985 287.415 cv
205.799 292.655 li
206.048 356.762 li
206.048 356.762 205.981 373.964 213.882 377.538 cv
215.869 378.437 217.945 378.887 219.997 378.933 cv
219.882 378.935 219.766 378.937 219.651 378.937 cv
106.608 320.743 mo
106.493 320.743 106.378 320.742 106.262 320.739 cv
103.752 320.682 101.227 320.003 98.9218 318.651 cv
38.193 283.037 li
32.484 279.689 30.5694 272.347 33.9164 266.637 cv
35.7355 263.534 li
37.8952 259.85 41.734 257.729 45.7371 257.613 cv
45.8524 257.61 45.9682 257.608 46.0837 257.608 cv
46.1992 257.608 46.3146 257.61 46.4302 257.613 cv
42.427 257.729 38.5883 259.85 36.4286 263.534 cv
34.6095 266.637 li
31.2625 272.347 33.1772 279.689 38.8861 283.037 cv
99.6149 318.651 li
101.92 320.003 104.445 320.682 106.955 320.739 cv
106.84 320.742 106.724 320.743 106.608 320.743 cv
114.538 260.666 mo
113.987 260.384 li
142.38 204.2 li
142.382 204.2 142.383 204.2 142.385 204.2 cv
142.5 204.204 142.616 204.205 142.731 204.205 cv
142.845 204.205 142.959 204.204 143.073 204.2 cv
114.538 260.666 li
90.0578 204.205 mo
89.9424 204.205 89.8268 204.204 89.7114 204.2 cv
87.3992 204.134 85.0813 203.398 83.0621 201.943 cv
82.8647 201.801 li
77.4844 197.925 76.2745 190.416 80.1647 185.046 cv
104.517 151.429 li
108.272 146.246 114.238 143.156 120.597 143.047 cv
120.712 143.045 120.828 143.044 120.943 143.044 cv
121.059 143.044 121.175 143.045 121.29 143.047 cv
114.931 143.156 108.965 146.246 105.211 151.429 cv
80.8579 185.046 li
76.9675 190.416 78.1776 197.925 83.5578 201.801 cv
83.7552 201.943 li
85.7744 203.398 88.0922 204.134 90.4044 204.2 cv
90.2888 204.204 90.1735 204.205 90.0578 204.205 cv
197.913 143.418 mo
197.202 143.402 li
191.101 138.152 187.237 130.373 187.237 121.693 cv
187.237 105.997 199.868 93.2511 215.52 93.0652 cv
215.635 93.0638 215.751 93.0631 215.866 93.0631 cv
215.982 93.0631 216.097 93.0638 216.213 93.0652 cv
200.561 93.2511 187.93 105.997 187.93 121.693 cv
187.93 130.382 191.801 138.167 197.913 143.418 cv
f
220.344 378.937 mo
220.228 378.937 220.113 378.935 219.997 378.933 cv
217.945 378.887 215.869 378.437 213.882 377.538 cv
205.981 373.964 206.048 356.762 206.048 356.762 cv
205.799 292.655 li
197.985 287.415 li
198.061 287.311 198.136 287.207 198.212 287.103 cv
206.492 292.655 li
206.741 356.762 li
206.741 356.762 206.674 373.964 214.575 377.538 cv
216.562 378.437 218.638 378.887 220.69 378.933 cv
220.575 378.935 220.459 378.937 220.344 378.937 cv
107.302 320.743 mo
107.186 320.743 107.071 320.742 106.955 320.739 cv
104.445 320.682 101.92 320.003 99.6149 318.651 cv
38.8861 283.037 li
33.1772 279.689 31.2625 272.347 34.6095 266.637 cv
36.4286 263.534 li
38.5883 259.85 42.427 257.729 46.4302 257.613 cv
46.5454 257.61 46.6613 257.608 46.7768 257.608 cv
46.8923 257.608 47.0076 257.61 47.1233 257.613 cv
43.1201 257.729 39.2814 259.85 37.1217 263.534 cv
35.3026 266.637 li
31.9557 272.347 33.8702 279.689 39.5792 283.037 cv
100.308 318.651 li
102.613 320.003 105.139 320.682 107.648 320.739 cv
107.533 320.742 107.417 320.743 107.302 320.743 cv
115.088 260.948 mo
114.538 260.666 li
143.073 204.2 li
143.075 204.2 143.076 204.2 143.078 204.2 cv
143.193 204.204 143.309 204.205 143.424 204.205 cv
143.538 204.205 143.652 204.204 143.766 204.2 cv
115.088 260.948 li
90.7508 204.205 mo
90.6355 204.205 90.5198 204.204 90.4044 204.2 cv
88.0922 204.134 85.7744 203.398 83.7552 201.943 cv
83.5578 201.801 li
78.1776 197.925 76.9675 190.416 80.8579 185.046 cv
105.211 151.429 li
108.965 146.246 114.931 143.156 121.29 143.047 cv
121.405 143.045 121.521 143.044 121.637 143.044 cv
121.752 143.044 121.868 143.045 121.983 143.047 cv
115.624 143.156 109.658 146.246 105.904 151.429 cv
81.5509 185.046 li
77.6607 190.416 78.8706 197.925 84.2509 201.801 cv
84.4483 201.943 li
86.4675 203.398 88.7853 204.134 91.0975 204.2 cv
90.9819 204.204 90.8666 204.205 90.7508 204.205 cv
198.624 143.433 mo
197.913 143.418 li
191.801 138.167 187.93 130.382 187.93 121.693 cv
187.93 105.997 200.561 93.2511 216.213 93.0652 cv
216.328 93.0638 216.444 93.0631 216.559 93.0631 cv
216.675 93.0631 216.791 93.0638 216.906 93.0652 cv
201.254 93.2511 188.623 105.997 188.623 121.693 cv
188.623 130.391 192.502 138.182 198.624 143.433 cv
f
221.037 378.937 mo
220.921 378.937 220.806 378.935 220.69 378.933 cv
218.638 378.887 216.562 378.437 214.575 377.538 cv
206.674 373.964 206.741 356.762 206.741 356.762 cv
206.492 292.655 li
198.212 287.103 li
198.288 286.999 198.364 286.894 198.439 286.79 cv
207.185 292.655 li
207.434 356.762 li
207.434 356.762 207.367 373.964 215.268 377.538 cv
217.255 378.437 219.331 378.887 221.383 378.933 cv
221.268 378.935 221.152 378.937 221.037 378.937 cv
107.995 320.743 mo
107.879 320.743 107.764 320.742 107.648 320.739 cv
105.139 320.682 102.613 320.003 100.308 318.651 cv
39.5792 283.037 li
33.8702 279.689 31.9557 272.347 35.3026 266.637 cv
37.1217 263.534 li
39.2814 259.85 43.1201 257.729 47.1233 257.613 cv
47.2385 257.61 47.3544 257.608 47.4699 257.608 cv
47.5854 257.608 47.7007 257.61 47.8164 257.613 cv
43.8132 257.729 39.9745 259.85 37.8147 263.534 cv
35.9956 266.637 li
32.6486 272.347 34.5632 279.689 40.2722 283.037 cv
101.001 318.651 li
103.306 320.003 105.832 320.682 108.341 320.739 cv
108.226 320.742 108.11 320.743 107.995 320.743 cv
115.639 261.23 mo
115.088 260.948 li
143.766 204.2 li
143.768 204.2 143.769 204.2 143.771 204.2 cv
143.886 204.204 144.002 204.205 144.117 204.205 cv
144.231 204.205 144.345 204.204 144.459 204.2 cv
115.639 261.23 li
91.4439 204.205 mo
91.3286 204.205 91.2129 204.204 91.0975 204.2 cv
88.7853 204.134 86.4675 203.398 84.4483 201.943 cv
84.2509 201.801 li
78.8706 197.925 77.6607 190.416 81.5509 185.046 cv
105.904 151.429 li
109.658 146.246 115.624 143.156 121.983 143.047 cv
122.099 143.045 122.214 143.044 122.33 143.044 cv
122.445 143.044 122.561 143.045 122.676 143.047 cv
116.317 143.156 110.351 146.246 106.597 151.429 cv
82.244 185.046 li
78.3537 190.416 79.5636 197.925 84.9439 201.801 cv
85.1413 201.943 li
87.1605 203.398 89.4784 204.134 91.7905 204.2 cv
91.6749 204.204 91.5597 204.205 91.4439 204.205 cv
199.335 143.448 mo
198.624 143.433 li
192.502 138.182 188.623 130.391 188.623 121.693 cv
188.623 105.997 201.254 93.2511 216.906 93.0652 cv
217.022 93.0638 217.137 93.0631 217.253 93.0631 cv
217.368 93.0631 217.484 93.0638 217.599 93.0652 cv
201.947 93.2511 189.316 105.997 189.316 121.693 cv
189.316 130.399 193.202 138.198 199.335 143.448 cv
f
221.73 378.937 mo
221.614 378.937 221.499 378.935 221.383 378.933 cv
219.331 378.887 217.255 378.437 215.268 377.538 cv
207.367 373.964 207.434 356.762 207.434 356.762 cv
207.185 292.655 li
198.439 286.79 li
198.514 286.687 198.591 286.582 198.666 286.478 cv
207.878 292.655 li
208.127 356.762 li
208.127 356.762 208.06 373.964 215.961 377.538 cv
217.948 378.437 220.024 378.887 222.076 378.933 cv
221.961 378.935 221.845 378.937 221.73 378.937 cv
108.688 320.743 mo
108.572 320.743 108.457 320.742 108.341 320.739 cv
105.832 320.682 103.306 320.003 101.001 318.651 cv
40.2722 283.037 li
34.5632 279.689 32.6486 272.347 35.9956 266.637 cv
37.8147 263.534 li
39.9745 259.85 43.8132 257.729 47.8164 257.613 cv
47.9316 257.61 48.0475 257.608 48.1629 257.608 cv
48.2784 257.608 48.3938 257.61 48.5094 257.613 cv
44.5062 257.729 40.6675 259.85 38.5078 263.534 cv
36.6886 266.637 li
33.3417 272.347 35.2563 279.689 40.9653 283.037 cv
101.694 318.651 li
103.999 320.003 106.525 320.682 109.034 320.739 cv
108.919 320.742 108.803 320.743 108.688 320.743 cv
116.19 261.512 mo
115.639 261.23 li
144.459 204.2 li
144.461 204.2 144.462 204.2 144.464 204.2 cv
144.579 204.204 144.695 204.205 144.81 204.205 cv
144.924 204.205 145.038 204.204 145.152 204.2 cv
116.19 261.512 li
92.1369 204.205 mo
92.0215 204.205 91.906 204.204 91.7905 204.2 cv
89.4784 204.134 87.1605 203.398 85.1413 201.943 cv
84.9439 201.801 li
79.5636 197.925 78.3537 190.416 82.244 185.046 cv
106.597 151.429 li
110.351 146.246 116.317 143.156 122.676 143.047 cv
122.792 143.045 122.907 143.044 123.023 143.044 cv
123.138 143.044 123.254 143.045 123.369 143.047 cv
117.01 143.156 111.044 146.246 107.29 151.429 cv
82.9371 185.046 li
79.0468 190.416 80.2567 197.925 85.637 201.801 cv
85.8344 201.943 li
87.8537 203.398 90.1714 204.134 92.4836 204.2 cv
92.368 204.204 92.2527 204.205 92.1369 204.205 cv
200.046 143.464 mo
199.335 143.448 li
193.202 138.198 189.316 130.399 189.316 121.693 cv
189.316 105.997 201.947 93.2511 217.599 93.0652 cv
217.715 93.0638 217.83 93.0631 217.946 93.0631 cv
218.061 93.0631 218.177 93.0638 218.292 93.0652 cv
202.64 93.2511 190.009 105.997 190.009 121.693 cv
190.009 130.407 193.904 138.213 200.046 143.464 cv
.980392 .980392 .980392 rgb
f
222.423 378.937 mo
222.307 378.937 222.192 378.935 222.076 378.933 cv
220.024 378.887 217.948 378.437 215.961 377.538 cv
208.06 373.964 208.127 356.762 208.127 356.762 cv
207.878 292.655 li
198.666 286.478 li
198.743 286.373 198.817 286.27 198.894 286.166 cv
208.571 292.655 li
208.82 356.762 li
208.82 356.762 208.754 373.964 216.654 377.538 cv
218.642 378.437 220.717 378.887 222.769 378.933 cv
222.654 378.935 222.539 378.937 222.423 378.937 cv
109.381 320.743 mo
109.265 320.743 109.15 320.742 109.034 320.739 cv
106.525 320.682 103.999 320.003 101.694 318.651 cv
40.9653 283.037 li
35.2563 279.689 33.3417 272.347 36.6886 266.637 cv
38.5078 263.534 li
40.6675 259.85 44.5062 257.729 48.5094 257.613 cv
48.6246 257.61 48.7405 257.608 48.856 257.608 cv
48.9714 257.608 49.0869 257.61 49.2025 257.613 cv
45.1997 257.729 41.3605 259.85 39.2009 263.534 cv
37.3818 266.637 li
34.0348 272.347 35.9494 279.689 41.6584 283.037 cv
102.387 318.651 li
104.692 320.003 107.218 320.682 109.727 320.739 cv
109.612 320.742 109.496 320.743 109.381 320.743 cv
116.74 261.794 mo
116.19 261.512 li
145.152 204.2 li
145.154 204.2 145.155 204.2 145.157 204.2 cv
145.272 204.204 145.388 204.205 145.503 204.205 cv
145.617 204.205 145.732 204.204 145.845 204.2 cv
116.74 261.794 li
92.8301 204.205 mo
92.7147 204.205 92.599 204.204 92.4836 204.2 cv
90.1714 204.134 87.8537 203.398 85.8344 201.943 cv
85.637 201.801 li
80.2567 197.925 79.0468 190.416 82.9371 185.046 cv
107.29 151.429 li
111.044 146.246 117.01 143.156 123.369 143.047 cv
123.485 143.045 123.6 143.044 123.716 143.044 cv
123.831 143.044 123.947 143.045 124.062 143.047 cv
117.703 143.156 111.738 146.246 107.983 151.429 cv
83.6302 185.046 li
79.7399 190.416 80.9498 197.925 86.3301 201.801 cv
86.5275 201.943 li
88.5467 203.398 90.8645 204.134 93.1767 204.2 cv
93.0611 204.204 92.9458 204.205 92.8301 204.205 cv
200.757 143.479 mo
200.046 143.464 li
193.904 138.213 190.009 130.407 190.009 121.693 cv
190.009 105.997 202.64 93.2511 218.292 93.0652 cv
218.408 93.0638 218.523 93.0631 218.639 93.0631 cv
218.755 93.0631 218.87 93.0638 218.985 93.0652 cv
203.334 93.2511 190.702 105.997 190.702 121.693 cv
190.702 130.416 194.604 138.228 200.757 143.479 cv
f
223.116 378.937 mo
223.001 378.937 222.885 378.935 222.769 378.933 cv
220.717 378.887 218.642 378.437 216.654 377.538 cv
208.754 373.964 208.82 356.762 208.82 356.762 cv
208.571 292.655 li
198.894 286.166 li
198.97 286.061 199.045 285.958 199.121 285.853 cv
209.264 292.655 li
209.513 356.762 li
209.513 356.762 209.447 373.964 217.347 377.538 cv
219.335 378.437 221.41 378.887 223.462 378.933 cv
223.347 378.935 223.232 378.937 223.116 378.937 cv
110.074 320.743 mo
109.958 320.743 109.843 320.742 109.727 320.739 cv
107.218 320.682 104.692 320.003 102.387 318.651 cv
41.6584 283.037 li
35.9494 279.689 34.0348 272.347 37.3818 266.637 cv
39.2009 263.534 li
41.3605 259.85 45.1997 257.729 49.2025 257.613 cv
49.3181 257.61 49.4333 257.608 49.5491 257.608 cv
49.6646 257.608 49.78 257.61 49.8956 257.613 cv
45.8925 257.729 42.0537 259.85 39.894 263.534 cv
38.0748 266.637 li
34.7279 272.347 36.6425 279.689 42.3515 283.037 cv
103.08 318.651 li
105.385 320.003 107.911 320.682 110.42 320.739 cv
110.305 320.742 110.189 320.743 110.074 320.743 cv
117.291 262.076 mo
116.74 261.794 li
145.845 204.2 li
145.847 204.2 145.848 204.2 145.85 204.2 cv
145.965 204.204 146.081 204.205 146.196 204.205 cv
146.311 204.205 146.424 204.204 146.538 204.2 cv
117.291 262.076 li
93.5231 204.205 mo
93.4077 204.205 93.2921 204.204 93.1767 204.2 cv
90.8645 204.134 88.5467 203.398 86.5275 201.943 cv
86.3301 201.801 li
80.9498 197.925 79.7399 190.416 83.6302 185.046 cv
107.983 151.429 li
111.738 146.246 117.703 143.156 124.062 143.047 cv
124.178 143.045 124.293 143.044 124.409 143.044 cv
124.524 143.044 124.64 143.045 124.755 143.047 cv
118.396 143.156 112.431 146.246 108.676 151.429 cv
84.3233 185.046 li
80.433 190.416 81.6429 197.925 87.0232 201.801 cv
87.2206 201.943 li
89.2399 203.398 91.5576 204.134 93.8698 204.2 cv
93.7542 204.204 93.6388 204.205 93.5231 204.205 cv
201.468 143.495 mo
200.757 143.479 li
194.604 138.228 190.702 130.416 190.702 121.693 cv
190.702 105.997 203.334 93.2511 218.985 93.0652 cv
219.101 93.0638 219.216 93.0631 219.332 93.0631 cv
219.448 93.0631 219.563 93.0638 219.678 93.0652 cv
204.027 93.2511 191.396 105.997 191.396 121.693 cv
191.396 130.424 195.305 138.243 201.468 143.495 cv
f
223.809 378.937 mo
223.694 378.937 223.578 378.935 223.462 378.933 cv
221.41 378.887 219.335 378.437 217.347 377.538 cv
209.447 373.964 209.513 356.762 209.513 356.762 cv
209.264 292.655 li
199.121 285.853 li
199.196 285.75 199.273 285.644 199.348 285.541 cv
209.957 292.655 li
210.206 356.762 li
210.206 356.762 210.14 373.964 218.04 377.538 cv
220.028 378.437 222.103 378.887 224.155 378.933 cv
224.04 378.935 223.925 378.937 223.809 378.937 cv
110.767 320.743 mo
110.651 320.743 110.536 320.742 110.42 320.739 cv
107.911 320.682 105.385 320.003 103.08 318.651 cv
42.3515 283.037 li
36.6425 279.689 34.7279 272.347 38.0748 266.637 cv
39.894 263.534 li
42.0537 259.85 45.8925 257.729 49.8956 257.613 cv
50.0108 257.61 50.1267 257.608 50.2422 257.608 cv
50.3577 257.608 50.473 257.61 50.5886 257.613 cv
46.5855 257.729 42.7467 259.85 40.587 263.534 cv
38.7679 266.637 li
35.4209 272.347 37.3355 279.689 43.0445 283.037 cv
103.773 318.651 li
106.078 320.003 108.604 320.682 111.113 320.739 cv
110.998 320.742 110.882 320.743 110.767 320.743 cv
117.841 262.358 mo
117.291 262.076 li
146.538 204.2 li
146.54 204.2 146.541 204.2 146.543 204.2 cv
146.658 204.204 146.774 204.205 146.889 204.205 cv
147.003 204.205 147.118 204.204 147.231 204.2 cv
117.841 262.358 li
94.2163 204.205 mo
94.1009 204.205 93.9852 204.204 93.8698 204.2 cv
91.5576 204.134 89.2399 203.398 87.2206 201.943 cv
87.0232 201.801 li
81.6429 197.925 80.433 190.416 84.3233 185.046 cv
108.676 151.429 li
112.431 146.246 118.396 143.156 124.755 143.047 cv
124.871 143.045 124.986 143.044 125.102 143.044 cv
125.217 143.044 125.333 143.045 125.448 143.047 cv
119.089 143.156 113.124 146.246 109.369 151.429 cv
85.0163 185.046 li
81.126 190.416 82.3359 197.925 87.7162 201.801 cv
87.9136 201.943 li
89.9328 203.398 92.2507 204.134 94.5629 204.2 cv
94.4472 204.204 94.332 204.205 94.2163 204.205 cv
202.18 143.51 mo
201.468 143.495 li
195.305 138.243 191.396 130.424 191.396 121.693 cv
191.396 105.997 204.027 93.2511 219.678 93.0652 cv
219.794 93.0638 219.909 93.0631 220.025 93.0631 cv
220.141 93.0631 220.256 93.0638 220.371 93.0652 cv
204.72 93.2511 192.088 105.997 192.088 121.693 cv
192.088 130.433 196.005 138.259 202.18 143.51 cv
f
224.502 378.937 mo
224.387 378.937 224.271 378.935 224.155 378.933 cv
222.103 378.887 220.028 378.437 218.04 377.538 cv
210.14 373.964 210.206 356.762 210.206 356.762 cv
209.957 292.655 li
199.348 285.541 li
199.424 285.437 199.5 285.333 199.576 285.229 cv
210.65 292.655 li
210.899 356.762 li
210.899 356.762 210.833 373.964 218.733 377.538 cv
220.721 378.437 222.796 378.887 224.848 378.933 cv
224.733 378.935 224.618 378.937 224.502 378.937 cv
111.46 320.743 mo
111.344 320.743 111.229 320.742 111.113 320.739 cv
108.604 320.682 106.078 320.003 103.773 318.651 cv
43.0445 283.037 li
37.3355 279.689 35.4209 272.347 38.7679 266.637 cv
40.587 263.534 li
42.7467 259.85 46.5855 257.729 50.5886 257.613 cv
50.7039 257.61 50.8197 257.608 50.9352 257.608 cv
51.0507 257.608 51.1661 257.61 51.2817 257.613 cv
47.2785 257.729 43.4398 259.85 41.28 263.534 cv
39.461 266.637 li
36.114 272.347 38.0285 279.689 43.7376 283.037 cv
104.466 318.651 li
106.771 320.003 109.297 320.682 111.807 320.739 cv
111.691 320.742 111.575 320.743 111.46 320.743 cv
118.392 262.64 mo
117.841 262.358 li
147.231 204.2 li
147.233 204.2 147.234 204.2 147.236 204.2 cv
147.352 204.204 147.467 204.205 147.583 204.205 cv
147.696 204.205 147.811 204.204 147.924 204.2 cv
118.392 262.64 li
94.9092 204.205 mo
94.7939 204.205 94.6783 204.204 94.5629 204.2 cv
92.2507 204.134 89.9328 203.398 87.9136 201.943 cv
87.7162 201.801 li
82.3359 197.925 81.126 190.416 85.0163 185.046 cv
109.369 151.429 li
113.124 146.246 119.089 143.156 125.448 143.047 cv
125.564 143.045 125.679 143.044 125.795 143.044 cv
125.91 143.044 126.026 143.045 126.142 143.047 cv
119.782 143.156 113.817 146.246 110.062 151.429 cv
85.7094 185.046 li
81.8191 190.416 83.0289 197.925 88.4094 201.801 cv
88.6067 201.943 li
90.6259 203.398 92.9437 204.134 95.2559 204.2 cv
95.1403 204.204 95.025 204.205 94.9092 204.205 cv
202.891 143.525 mo
202.18 143.51 li
196.005 138.259 192.088 130.433 192.088 121.693 cv
192.088 105.997 204.72 93.2511 220.371 93.0652 cv
220.487 93.0638 220.602 93.0631 220.718 93.0631 cv
220.834 93.0631 220.949 93.0638 221.064 93.0652 cv
205.413 93.2511 192.782 105.997 192.782 121.693 cv
192.782 130.442 196.706 138.274 202.891 143.525 cv
.976471 .976471 .976471 rgb
f
225.195 378.937 mo
225.08 378.937 224.964 378.935 224.848 378.933 cv
222.796 378.887 220.721 378.437 218.733 377.538 cv
210.833 373.964 210.899 356.762 210.899 356.762 cv
210.65 292.655 li
199.576 285.229 li
199.651 285.125 199.727 285.02 199.803 284.917 cv
211.344 292.655 li
211.592 356.762 li
211.592 356.762 211.526 373.964 219.426 377.538 cv
221.414 378.437 223.49 378.887 225.542 378.933 cv
225.426 378.935 225.311 378.937 225.195 378.937 cv
112.153 320.743 mo
112.038 320.743 111.922 320.742 111.807 320.739 cv
109.297 320.682 106.771 320.003 104.466 318.651 cv
43.7376 283.037 li
38.0285 279.689 36.114 272.347 39.461 266.637 cv
41.28 263.534 li
43.4398 259.85 47.2785 257.729 51.2817 257.613 cv
51.3969 257.61 51.5128 257.608 51.6283 257.608 cv
51.7438 257.608 51.8592 257.61 51.9748 257.613 cv
47.9716 257.729 44.1329 259.85 41.9732 263.534 cv
40.1541 266.637 li
36.807 272.347 38.7217 279.689 44.4307 283.037 cv
105.159 318.651 li
107.464 320.003 109.99 320.682 112.5 320.739 cv
112.384 320.742 112.269 320.743 112.153 320.743 cv
118.943 262.922 mo
118.392 262.64 li
147.924 204.2 li
147.926 204.2 147.927 204.2 147.929 204.2 cv
148.045 204.204 148.16 204.205 148.276 204.205 cv
148.389 204.205 148.504 204.204 148.618 204.2 cv
118.943 262.922 li
95.6023 204.205 mo
95.487 204.205 95.3713 204.204 95.2559 204.2 cv
92.9437 204.134 90.6259 203.398 88.6067 201.943 cv
88.4094 201.801 li
83.0289 197.925 81.8191 190.416 85.7094 185.046 cv
110.062 151.429 li
113.817 146.246 119.782 143.156 126.142 143.047 cv
126.257 143.045 126.372 143.044 126.488 143.044 cv
126.603 143.044 126.719 143.045 126.835 143.047 cv
120.476 143.156 114.51 146.246 110.755 151.429 cv
86.4024 185.046 li
82.5122 190.416 83.7221 197.925 89.1024 201.801 cv
89.2998 201.943 li
91.319 203.398 93.6368 204.134 95.949 204.2 cv
95.8334 204.204 95.7181 204.205 95.6023 204.205 cv
203.602 143.541 mo
202.891 143.525 li
196.706 138.274 192.782 130.442 192.782 121.693 cv
192.782 105.997 205.413 93.2511 221.064 93.0652 cv
221.18 93.0638 221.295 93.0631 221.411 93.0631 cv
221.527 93.0631 221.642 93.0638 221.758 93.0652 cv
206.106 93.2511 193.475 105.997 193.475 121.693 cv
193.475 130.451 197.407 138.289 203.602 143.541 cv
f
225.888 378.937 mo
225.773 378.937 225.657 378.935 225.542 378.933 cv
223.49 378.887 221.414 378.437 219.426 377.538 cv
211.526 373.964 211.592 356.762 211.592 356.762 cv
211.344 292.655 li
199.803 284.917 li
199.88 284.812 199.954 284.71 200.031 284.605 cv
212.037 292.655 li
212.286 356.762 li
212.286 356.762 212.219 373.964 220.119 377.538 cv
222.107 378.437 224.183 378.887 226.235 378.933 cv
226.119 378.935 226.004 378.937 225.888 378.937 cv
112.846 320.743 mo
112.731 320.743 112.615 320.742 112.5 320.739 cv
109.99 320.682 107.464 320.003 105.159 318.651 cv
44.4307 283.037 li
38.7217 279.689 36.807 272.347 40.1541 266.637 cv
41.9732 263.534 li
44.1329 259.85 47.9716 257.729 51.9748 257.613 cv
52.09 257.61 52.2059 257.608 52.3214 257.608 cv
52.4369 257.608 52.5522 257.61 52.6679 257.613 cv
48.6647 257.729 44.826 259.85 42.6662 263.534 cv
40.8471 266.637 li
37.5001 272.347 39.4147 279.689 45.1236 283.037 cv
105.853 318.651 li
108.157 320.003 110.683 320.682 113.193 320.739 cv
113.077 320.742 112.962 320.743 112.846 320.743 cv
119.493 263.204 mo
118.943 262.922 li
148.618 204.2 li
148.619 204.2 148.62 204.2 148.622 204.2 cv
148.738 204.204 148.853 204.205 148.969 204.205 cv
149.083 204.205 149.197 204.204 149.311 204.2 cv
119.493 263.204 li
96.2955 204.205 mo
96.1801 204.205 96.0644 204.204 95.949 204.2 cv
93.6368 204.134 91.319 203.398 89.2998 201.943 cv
89.1024 201.801 li
83.7221 197.925 82.5122 190.416 86.4024 185.046 cv
110.755 151.429 li
114.51 146.246 120.476 143.156 126.835 143.047 cv
126.95 143.045 127.065 143.044 127.181 143.044 cv
127.296 143.044 127.412 143.045 127.528 143.047 cv
121.169 143.156 115.203 146.246 111.448 151.429 cv
87.0955 185.046 li
83.2052 190.416 84.4151 197.925 89.7954 201.801 cv
89.9928 201.943 li
92.012 203.398 94.3299 204.134 96.642 204.2 cv
96.5264 204.204 96.4112 204.205 96.2955 204.205 cv
204.313 143.556 mo
203.602 143.541 li
197.407 138.289 193.475 130.451 193.475 121.693 cv
193.475 105.997 206.106 93.2511 221.758 93.0652 cv
221.873 93.0638 221.988 93.0631 222.104 93.0631 cv
222.22 93.0631 222.335 93.0638 222.451 93.0652 cv
206.799 93.2511 194.168 105.997 194.168 121.693 cv
194.168 130.459 198.107 138.305 204.313 143.556 cv
f
226.581 378.937 mo
226.466 378.937 226.35 378.935 226.235 378.933 cv
224.183 378.887 222.107 378.437 220.119 377.538 cv
212.219 373.964 212.286 356.762 212.286 356.762 cv
212.037 292.655 li
200.031 284.605 li
200.106 284.501 200.183 284.396 200.258 284.292 cv
212.73 292.655 li
212.979 356.762 li
212.979 356.762 212.912 373.964 220.812 377.538 cv
222.8 378.437 224.876 378.887 226.928 378.933 cv
226.812 378.935 226.697 378.937 226.581 378.937 cv
113.539 320.743 mo
113.424 320.743 113.308 320.742 113.193 320.739 cv
110.683 320.682 108.157 320.003 105.853 318.651 cv
45.1236 283.037 li
39.4147 279.689 37.5001 272.347 40.8471 266.637 cv
42.6662 263.534 li
44.826 259.85 48.6647 257.729 52.6679 257.613 cv
52.7831 257.61 52.899 257.608 53.0144 257.608 cv
53.1299 257.608 53.2453 257.61 53.3609 257.613 cv
49.3577 257.729 45.519 259.85 43.3593 263.534 cv
41.5402 266.637 li
38.1932 272.347 40.1078 279.689 45.8168 283.037 cv
106.546 318.651 li
108.851 320.003 111.376 320.682 113.886 320.739 cv
113.77 320.742 113.655 320.743 113.539 320.743 cv
120.044 263.486 mo
119.493 263.204 li
149.311 204.2 li
149.312 204.2 149.313 204.2 149.315 204.2 cv
149.431 204.204 149.546 204.205 149.662 204.205 cv
149.776 204.205 149.89 204.204 150.004 204.2 cv
120.044 263.486 li
96.9884 204.205 mo
96.873 204.205 96.7575 204.204 96.642 204.2 cv
94.3299 204.134 92.012 203.398 89.9928 201.943 cv
89.7954 201.801 li
84.4151 197.925 83.2052 190.416 87.0955 185.046 cv
111.448 151.429 li
115.203 146.246 121.169 143.156 127.528 143.047 cv
127.643 143.045 127.759 143.044 127.874 143.044 cv
127.989 143.044 128.105 143.045 128.221 143.047 cv
121.862 143.156 115.896 146.246 112.141 151.429 cv
87.7886 185.046 li
83.8983 190.416 85.1082 197.925 90.4885 201.801 cv
90.6858 201.943 li
92.7051 203.398 95.0229 204.134 97.3351 204.2 cv
97.2195 204.204 97.1042 204.205 96.9884 204.205 cv
205.025 143.572 mo
204.313 143.556 li
198.107 138.305 194.168 130.459 194.168 121.693 cv
194.168 105.997 206.799 93.2511 222.451 93.0652 cv
222.566 93.0638 222.681 93.0631 222.797 93.0631 cv
222.913 93.0631 223.028 93.0638 223.144 93.0652 cv
207.492 93.2511 194.861 105.997 194.861 121.693 cv
194.861 130.467 198.809 138.32 205.025 143.572 cv
f
227.274 378.937 mo
227.159 378.937 227.043 378.935 226.928 378.933 cv
224.876 378.887 222.8 378.437 220.812 377.538 cv
212.912 373.964 212.979 356.762 212.979 356.762 cv
212.73 292.655 li
200.258 284.292 li
200.334 284.188 200.41 284.085 200.486 283.98 cv
213.423 292.655 li
213.672 356.762 li
213.672 356.762 213.605 373.964 221.505 377.538 cv
223.493 378.437 225.569 378.887 227.621 378.933 cv
227.505 378.935 227.39 378.937 227.274 378.937 cv
114.232 320.743 mo
114.117 320.743 114.001 320.742 113.886 320.739 cv
111.376 320.682 108.851 320.003 106.546 318.651 cv
45.8168 283.037 li
40.1078 279.689 38.1932 272.347 41.5402 266.637 cv
43.3593 263.534 li
45.519 259.85 49.3577 257.729 53.3609 257.613 cv
53.4761 257.61 53.592 257.608 53.7075 257.608 cv
53.8229 257.608 53.9384 257.61 54.054 257.613 cv
50.0512 257.729 46.212 259.85 44.0524 263.534 cv
42.2333 266.637 li
38.8863 272.347 40.8009 279.689 46.5099 283.037 cv
107.239 318.651 li
109.544 320.003 112.069 320.682 114.579 320.739 cv
114.463 320.742 114.348 320.743 114.232 320.743 cv
120.595 263.768 mo
120.044 263.486 li
150.004 204.2 li
150.242 204.194 150.48 204.18 150.718 204.159 cv
120.595 263.768 li
97.6815 204.205 mo
97.5662 204.205 97.4505 204.204 97.3351 204.2 cv
95.0229 204.134 92.7051 203.398 90.6858 201.943 cv
90.4885 201.801 li
85.1082 197.925 83.8983 190.416 87.7886 185.046 cv
112.141 151.429 li
115.896 146.246 121.862 143.156 128.221 143.047 cv
128.336 143.045 128.452 143.044 128.567 143.044 cv
128.682 143.044 128.798 143.045 128.914 143.047 cv
122.555 143.156 116.589 146.246 112.834 151.429 cv
88.4817 185.046 li
84.5914 190.416 85.8013 197.925 91.1816 201.801 cv
91.379 201.943 li
93.3982 203.398 95.716 204.134 98.0282 204.2 cv
97.9126 204.204 97.7973 204.205 97.6815 204.205 cv
292.695 200.282 mo
292.685 200.262 li
292.706 200.262 292.726 200.262 292.747 200.262 cv
292.863 200.262 292.978 200.263 293.094 200.266 cv
292.961 200.27 292.828 200.275 292.695 200.282 cv
205.736 143.587 mo
205.025 143.572 li
198.809 138.32 194.861 130.467 194.861 121.693 cv
194.861 105.997 207.492 93.2511 223.144 93.0652 cv
223.259 93.0638 223.374 93.0631 223.49 93.0631 cv
223.606 93.0631 223.721 93.0638 223.837 93.0652 cv
208.185 93.2511 195.554 105.997 195.554 121.693 cv
195.554 130.476 199.51 138.335 205.736 143.587 cv
.972549 .972549 .972549 rgb
f
227.967 378.937 mo
227.852 378.937 227.736 378.935 227.621 378.933 cv
225.569 378.887 223.493 378.437 221.505 377.538 cv
213.605 373.964 213.672 356.762 213.672 356.762 cv
213.423 292.655 li
200.486 283.98 li
200.562 283.876 200.638 283.772 200.713 283.668 cv
214.116 292.655 li
214.365 356.762 li
214.365 356.762 214.298 373.964 222.199 377.538 cv
224.186 378.437 226.262 378.887 228.314 378.933 cv
228.198 378.935 228.083 378.937 227.967 378.937 cv
114.925 320.743 mo
114.81 320.743 114.694 320.742 114.579 320.739 cv
112.069 320.682 109.544 320.003 107.239 318.651 cv
46.5099 283.037 li
40.8009 279.689 38.8863 272.347 42.2333 266.637 cv
44.0524 263.534 li
46.212 259.85 50.0512 257.729 54.054 257.613 cv
54.1696 257.61 54.2848 257.608 54.4006 257.608 cv
54.5161 257.608 54.6314 257.61 54.7471 257.613 cv
50.7439 257.729 46.9051 259.85 44.7454 263.534 cv
42.9263 266.637 li
39.5793 272.347 41.4939 279.689 47.2029 283.037 cv
107.932 318.651 li
110.237 320.003 112.762 320.682 115.272 320.739 cv
115.157 320.742 115.041 320.743 114.925 320.743 cv
121.145 264.049 mo
120.595 263.768 li
150.718 204.159 li
150.964 204.137 151.211 204.108 151.455 204.071 cv
121.145 264.049 li
98.3746 204.205 mo
98.2592 204.205 98.1436 204.204 98.0282 204.2 cv
95.716 204.134 93.3982 203.398 91.379 201.943 cv
91.1816 201.801 li
85.8013 197.925 84.5914 190.416 88.4817 185.046 cv
112.834 151.429 li
116.589 146.246 122.555 143.156 128.914 143.047 cv
129.029 143.045 129.145 143.044 129.26 143.044 cv
129.376 143.044 129.491 143.045 129.607 143.047 cv
123.248 143.156 117.282 146.246 113.527 151.429 cv
89.1747 185.046 li
85.2844 190.416 86.4943 197.925 91.8745 201.801 cv
92.072 201.943 li
94.0912 203.398 96.4091 204.134 98.7212 204.2 cv
98.6056 204.204 98.4904 204.205 98.3746 204.205 cv
292.721 200.336 mo
292.695 200.282 li
292.828 200.275 292.961 200.27 293.094 200.266 cv
293.209 200.263 293.325 200.262 293.44 200.262 cv
293.556 200.262 293.671 200.263 293.787 200.266 cv
293.431 200.275 293.076 200.299 292.721 200.336 cv
206.447 143.603 mo
205.736 143.587 li
199.51 138.335 195.554 130.476 195.554 121.693 cv
195.554 105.997 208.185 93.2511 223.837 93.0652 cv
223.952 93.0638 224.067 93.0631 224.183 93.0631 cv
224.299 93.0631 224.414 93.0638 224.53 93.0652 cv
208.878 93.2511 196.247 105.997 196.247 121.693 cv
196.247 130.484 200.21 138.351 206.447 143.603 cv
f
228.661 378.937 mo
228.545 378.937 228.429 378.935 228.314 378.933 cv
226.262 378.887 224.186 378.437 222.199 377.538 cv
214.298 373.964 214.365 356.762 214.365 356.762 cv
214.116 292.655 li
200.713 283.668 li
200.789 283.564 200.866 283.46 200.941 283.356 cv
214.809 292.655 li
215.058 356.762 li
215.058 356.762 214.991 373.964 222.892 377.538 cv
224.879 378.437 226.955 378.887 229.007 378.933 cv
228.891 378.935 228.776 378.937 228.661 378.937 cv
115.618 320.743 mo
115.503 320.743 115.387 320.742 115.272 320.739 cv
112.762 320.682 110.237 320.003 107.932 318.651 cv
47.2029 283.037 li
41.4939 279.689 39.5793 272.347 42.9263 266.637 cv
44.7454 263.534 li
46.9051 259.85 50.7439 257.729 54.7471 257.613 cv
54.8623 257.61 54.9781 257.608 55.0936 257.608 cv
55.2091 257.608 55.3245 257.61 55.4401 257.613 cv
51.437 257.729 47.5982 259.85 45.4385 263.534 cv
43.6194 266.637 li
40.2724 272.347 42.187 279.689 47.896 283.037 cv
108.625 318.651 li
110.93 320.003 113.455 320.682 115.965 320.739 cv
115.85 320.742 115.734 320.743 115.618 320.743 cv
121.696 264.331 mo
121.145 264.049 li
151.455 204.071 li
151.711 204.032 151.966 203.986 152.219 203.931 cv
121.696 264.331 li
99.0676 204.205 mo
98.9523 204.205 98.8367 204.204 98.7212 204.2 cv
96.4091 204.134 94.0912 203.398 92.072 201.943 cv
91.8745 201.801 li
86.4943 197.925 85.2844 190.416 89.1747 185.046 cv
113.527 151.429 li
117.282 146.246 123.248 143.156 129.607 143.047 cv
129.722 143.045 129.838 143.044 129.953 143.044 cv
130.069 143.044 130.184 143.045 130.3 143.047 cv
123.941 143.156 117.975 146.246 114.22 151.429 cv
89.8678 185.046 li
85.9775 190.416 87.1874 197.925 92.5677 201.801 cv
92.7651 201.943 li
94.7843 203.398 97.1021 204.134 99.4143 204.2 cv
99.2987 204.204 99.1834 204.205 99.0676 204.205 cv
292.762 200.421 mo
292.721 200.336 li
293.076 200.299 293.431 200.275 293.787 200.266 cv
293.902 200.263 294.018 200.262 294.133 200.262 cv
294.249 200.262 294.364 200.263 294.48 200.266 cv
293.906 200.281 293.332 200.333 292.762 200.421 cv
207.159 143.618 mo
206.447 143.603 li
200.21 138.351 196.247 130.484 196.247 121.693 cv
196.247 105.997 208.878 93.2511 224.53 93.0652 cv
224.645 93.0638 224.76 93.0631 224.876 93.0631 cv
224.992 93.0631 225.107 93.0638 225.223 93.0652 cv
209.571 93.2511 196.94 105.997 196.94 121.693 cv
196.94 130.493 200.911 138.366 207.159 143.618 cv
f
229.354 378.937 mo
229.238 378.937 229.123 378.935 229.007 378.933 cv
226.955 378.887 224.879 378.437 222.892 377.538 cv
214.991 373.964 215.058 356.762 215.058 356.762 cv
214.809 292.655 li
200.941 283.356 li
201.017 283.253 201.094 283.148 201.169 283.045 cv
215.502 292.655 li
215.751 356.762 li
215.751 356.762 215.684 373.964 223.585 377.538 cv
225.572 378.437 227.648 378.887 229.7 378.933 cv
229.585 378.935 229.469 378.937 229.354 378.937 cv
116.311 320.743 mo
116.196 320.743 116.081 320.742 115.965 320.739 cv
113.455 320.682 110.93 320.003 108.625 318.651 cv
47.896 283.037 li
42.187 279.689 40.2724 272.347 43.6194 266.637 cv
45.4385 263.534 li
47.5982 259.85 51.437 257.729 55.4401 257.613 cv
55.5553 257.61 55.6712 257.608 55.7867 257.608 cv
55.9022 257.608 56.0176 257.61 56.1332 257.613 cv
52.13 257.729 48.2913 259.85 46.1315 263.534 cv
44.3125 266.637 li
40.9655 272.347 42.88 279.689 48.5891 283.037 cv
109.318 318.651 li
111.623 320.003 114.148 320.682 116.658 320.739 cv
116.543 320.742 116.427 320.743 116.311 320.743 cv
122.246 264.613 mo
121.696 264.331 li
152.219 203.931 li
152.486 203.873 152.751 203.806 153.014 203.73 cv
122.246 264.613 li
99.7607 204.205 mo
99.6454 204.205 99.5297 204.204 99.4143 204.2 cv
97.1021 204.134 94.7843 203.398 92.7651 201.943 cv
92.5677 201.801 li
87.1874 197.925 85.9775 190.416 89.8678 185.046 cv
114.22 151.429 li
117.975 146.246 123.941 143.156 130.3 143.047 cv
130.415 143.045 130.531 143.044 130.646 143.044 cv
130.762 143.044 130.878 143.045 130.993 143.047 cv
124.634 143.156 118.668 146.246 114.914 151.429 cv
90.5609 185.046 li
86.6706 190.416 87.8804 197.925 93.2607 201.801 cv
93.4582 201.943 li
95.4774 203.398 97.7952 204.134 100.107 204.2 cv
99.9918 204.204 99.8765 204.205 99.7607 204.205 cv
292.819 200.536 mo
292.762 200.421 li
293.332 200.333 293.906 200.281 294.48 200.266 cv
294.595 200.263 294.711 200.262 294.826 200.262 cv
294.942 200.262 295.057 200.263 295.173 200.266 cv
294.385 200.286 293.597 200.376 292.819 200.536 cv
207.87 143.633 mo
207.159 143.618 li
200.911 138.366 196.94 130.493 196.94 121.693 cv
196.94 105.997 209.571 93.2511 225.223 93.0652 cv
225.338 93.0638 225.454 93.0631 225.569 93.0631 cv
225.685 93.0631 225.8 93.0638 225.916 93.0652 cv
210.264 93.2511 197.633 105.997 197.633 121.693 cv
197.633 130.502 201.612 138.382 207.87 143.633 cv
.968627 .968627 .968627 rgb
f
230.047 378.937 mo
229.931 378.937 229.816 378.935 229.7 378.933 cv
227.648 378.887 225.572 378.437 223.585 377.538 cv
215.684 373.964 215.751 356.762 215.751 356.762 cv
215.502 292.655 li
201.169 283.045 li
201.246 282.94 201.321 282.837 201.397 282.733 cv
216.195 292.655 li
216.444 356.762 li
216.444 356.762 216.377 373.964 224.278 377.538 cv
226.265 378.437 228.341 378.887 230.393 378.933 cv
230.278 378.935 230.162 378.937 230.047 378.937 cv
117.005 320.743 mo
116.889 320.743 116.774 320.742 116.658 320.739 cv
114.148 320.682 111.623 320.003 109.318 318.651 cv
48.5891 283.037 li
42.88 279.689 40.9655 272.347 44.3125 266.637 cv
46.1315 263.534 li
48.2913 259.85 52.13 257.729 56.1332 257.613 cv
56.2484 257.61 56.3643 257.608 56.4798 257.608 cv
56.5953 257.608 56.7106 257.61 56.8262 257.613 cv
52.8231 257.729 48.9843 259.85 46.8246 263.534 cv
45.0055 266.637 li
41.6586 272.347 43.5731 279.689 49.2821 283.037 cv
110.011 318.651 li
112.316 320.003 114.842 320.682 117.351 320.739 cv
117.236 320.742 117.12 320.743 117.005 320.743 cv
122.797 264.895 mo
122.246 264.613 li
153.014 203.73 li
153.294 203.648 153.571 203.557 153.845 203.456 cv
122.797 264.895 li
100.454 204.205 mo
100.338 204.205 100.223 204.204 100.107 204.2 cv
97.7952 204.134 95.4774 203.398 93.4582 201.943 cv
93.2607 201.801 li
87.8804 197.925 86.6706 190.416 90.5609 185.046 cv
114.914 151.429 li
118.668 146.246 124.634 143.156 130.993 143.047 cv
131.108 143.045 131.224 143.044 131.339 143.044 cv
131.455 143.044 131.571 143.045 131.686 143.047 cv
125.327 143.156 119.361 146.246 115.606 151.429 cv
91.2539 185.046 li
87.3636 190.416 88.5735 197.925 93.9538 201.801 cv
94.1512 201.943 li
96.1704 203.398 98.4883 204.134 100.8 204.2 cv
100.685 204.204 100.57 204.205 100.454 204.205 cv
292.889 200.68 mo
292.819 200.536 li
293.597 200.376 294.385 200.286 295.173 200.266 cv
295.289 200.263 295.404 200.262 295.519 200.262 cv
295.635 200.262 295.75 200.263 295.866 200.266 cv
294.867 200.292 293.868 200.429 292.889 200.68 cv
208.582 143.649 mo
207.87 143.633 li
201.612 138.382 197.633 130.502 197.633 121.693 cv
197.633 105.997 210.264 93.2511 225.916 93.0652 cv
226.031 93.0638 226.147 93.0631 226.262 93.0631 cv
226.378 93.0631 226.493 93.0638 226.609 93.0652 cv
210.957 93.2511 198.326 105.997 198.326 121.693 cv
198.326 130.51 202.313 138.397 208.582 143.649 cv
f
230.74 378.937 mo
230.624 378.937 230.509 378.935 230.393 378.933 cv
228.341 378.887 226.265 378.437 224.278 377.538 cv
216.377 373.964 216.444 356.762 216.444 356.762 cv
216.195 292.655 li
201.397 282.733 li
201.472 282.63 201.55 282.524 201.625 282.421 cv
216.888 292.655 li
217.137 356.762 li
217.137 356.762 217.07 373.964 224.971 377.538 cv
226.958 378.437 229.034 378.887 231.086 378.933 cv
230.971 378.935 230.855 378.937 230.74 378.937 cv
117.698 320.743 mo
117.582 320.743 117.467 320.742 117.351 320.739 cv
114.842 320.682 112.316 320.003 110.011 318.651 cv
49.2821 283.037 li
43.5731 279.689 41.6586 272.347 45.0055 266.637 cv
46.8246 263.534 li
48.9843 259.85 52.8231 257.729 56.8262 257.613 cv
56.9415 257.61 57.0573 257.608 57.1728 257.608 cv
57.2883 257.608 57.4037 257.61 57.5193 257.613 cv
53.5166 257.729 49.6773 259.85 47.5177 263.534 cv
45.6986 266.637 li
42.3516 272.347 44.2662 279.689 49.9751 283.037 cv
110.704 318.651 li
113.009 320.003 115.535 320.682 118.044 320.739 cv
117.929 320.742 117.813 320.743 117.698 320.743 cv
123.347 265.177 mo
122.797 264.895 li
153.845 203.456 li
154.142 203.346 154.435 203.224 154.723 203.09 cv
123.347 265.177 li
101.147 204.205 mo
101.031 204.205 100.916 204.204 100.8 204.2 cv
98.4883 204.134 96.1704 203.398 94.1512 201.943 cv
93.9538 201.801 li
88.5735 197.925 87.3636 190.416 91.2539 185.046 cv
115.606 151.429 li
119.361 146.246 125.327 143.156 131.686 143.047 cv
131.801 143.045 131.917 143.044 132.033 143.044 cv
132.148 143.044 132.264 143.045 132.379 143.047 cv
126.02 143.156 120.054 146.246 116.3 151.429 cv
91.947 185.046 li
88.0567 190.416 89.2666 197.925 94.6469 201.801 cv
94.8443 201.943 li
96.8635 203.398 99.1813 204.134 101.493 204.2 cv
101.378 204.204 101.263 204.205 101.147 204.205 cv
292.972 200.852 mo
292.889 200.68 li
293.868 200.429 294.867 200.292 295.866 200.266 cv
295.982 200.263 296.097 200.262 296.212 200.262 cv
296.328 200.262 296.444 200.263 296.559 200.266 cv
295.352 200.297 294.144 200.491 292.972 200.852 cv
209.293 143.664 mo
208.582 143.649 li
202.313 138.397 198.326 130.51 198.326 121.693 cv
198.326 105.997 210.957 93.2511 226.609 93.0652 cv
226.724 93.0638 226.84 93.0631 226.956 93.0631 cv
227.071 93.0631 227.187 93.0638 227.302 93.0652 cv
211.65 93.2511 199.019 105.997 199.019 121.693 cv
199.019 130.519 203.013 138.413 209.293 143.664 cv
f
231.433 378.937 mo
231.317 378.937 231.202 378.935 231.086 378.933 cv
229.034 378.887 226.958 378.437 224.971 377.538 cv
217.07 373.964 217.137 356.762 217.137 356.762 cv
216.888 292.655 li
201.625 282.421 li
201.701 282.317 201.777 282.213 201.853 282.109 cv
217.581 292.655 li
217.83 356.762 li
217.83 356.762 217.763 373.964 225.664 377.538 cv
227.651 378.437 229.727 378.887 231.779 378.933 cv
231.664 378.935 231.548 378.937 231.433 378.937 cv
118.391 320.743 mo
118.275 320.743 118.16 320.742 118.044 320.739 cv
115.535 320.682 113.009 320.003 110.704 318.651 cv
49.9751 283.037 li
44.2662 279.689 42.3516 272.347 45.6986 266.637 cv
47.5177 263.534 li
49.6773 259.85 53.5166 257.729 57.5193 257.613 cv
57.6349 257.61 57.7501 257.608 57.8659 257.608 cv
57.9814 257.608 58.0968 257.61 58.2124 257.613 cv
54.2093 257.729 50.3705 259.85 48.2108 263.534 cv
46.3917 266.637 li
43.0447 272.347 44.9593 279.689 50.6683 283.037 cv
111.397 318.651 li
113.702 320.003 116.228 320.682 118.737 320.739 cv
118.622 320.742 118.506 320.743 118.391 320.743 cv
123.898 265.459 mo
123.347 265.177 li
154.723 203.09 li
155.042 202.942 155.355 202.78 155.662 202.604 cv
123.898 265.459 li
101.84 204.205 mo
101.725 204.205 101.609 204.204 101.493 204.2 cv
99.1813 204.134 96.8635 203.398 94.8443 201.943 cv
94.6469 201.801 li
89.2666 197.925 88.0567 190.416 91.947 185.046 cv
116.3 151.429 li
120.054 146.246 126.02 143.156 132.379 143.047 cv
132.495 143.045 132.61 143.044 132.726 143.044 cv
132.841 143.044 132.957 143.045 133.072 143.047 cv
126.713 143.156 120.747 146.246 116.993 151.429 cv
92.6401 185.046 li
88.7498 190.416 89.9597 197.925 95.34 201.801 cv
95.5373 201.943 li
97.5566 203.398 99.8744 204.134 102.187 204.2 cv
102.071 204.204 101.956 204.205 101.84 204.205 cv
293.069 201.05 mo
292.972 200.852 li
294.144 200.491 295.352 200.297 296.559 200.266 cv
296.675 200.263 296.79 200.262 296.906 200.262 cv
297.021 200.262 297.137 200.263 297.252 200.266 cv
295.839 200.303 294.426 200.562 293.069 201.05 cv
210.005 143.68 mo
209.293 143.664 li
203.013 138.413 199.019 130.519 199.019 121.693 cv
199.019 105.997 211.65 93.2511 227.302 93.0652 cv
227.418 93.0638 227.533 93.0631 227.649 93.0631 cv
227.764 93.0631 227.88 93.0638 227.995 93.0652 cv
212.343 93.2511 199.712 105.997 199.712 121.693 cv
199.712 130.528 203.714 138.428 210.005 143.68 cv
f
232.126 378.937 mo
232.01 378.937 231.895 378.935 231.779 378.933 cv
229.727 378.887 227.651 378.437 225.664 377.538 cv
217.763 373.964 217.83 356.762 217.83 356.762 cv
217.581 292.655 li
201.853 282.109 li
201.929 282.005 202.006 281.901 202.081 281.797 cv
218.274 292.655 li
218.523 356.762 li
218.523 356.762 218.457 373.964 226.357 377.538 cv
228.345 378.437 230.42 378.887 232.472 378.933 cv
232.357 378.935 232.242 378.937 232.126 378.937 cv
119.084 320.743 mo
118.968 320.743 118.853 320.742 118.737 320.739 cv
116.228 320.682 113.702 320.003 111.397 318.651 cv
50.6683 283.037 li
44.9593 279.689 43.0447 272.347 46.3917 266.637 cv
48.2108 263.534 li
50.3705 259.85 54.2093 257.729 58.2124 257.613 cv
58.3276 257.61 58.4435 257.608 58.559 257.608 cv
58.6745 257.608 58.7899 257.61 58.9055 257.613 cv
54.9027 257.729 51.0635 259.85 48.9039 263.534 cv
47.0848 266.637 li
43.7378 272.347 45.6524 279.689 51.3615 283.037 cv
112.09 318.651 li
114.395 320.003 116.921 320.682 119.43 320.739 cv
119.315 320.742 119.199 320.743 119.084 320.743 cv
124.449 265.741 mo
123.898 265.459 li
155.662 202.604 li
156.015 202.4 156.359 202.178 156.692 201.938 cv
124.449 265.741 li
102.533 204.205 mo
102.418 204.205 102.302 204.204 102.187 204.2 cv
99.8744 204.134 97.5566 203.398 95.5373 201.943 cv
95.34 201.801 li
89.9597 197.925 88.7498 190.416 92.6401 185.046 cv
116.993 151.429 li
120.747 146.246 126.713 143.156 133.072 143.047 cv
133.188 143.045 133.303 143.044 133.419 143.044 cv
133.534 143.044 133.65 143.045 133.765 143.047 cv
127.406 143.156 121.441 146.246 117.686 151.429 cv
93.3332 185.046 li
89.4429 190.416 90.6528 197.925 96.0331 201.801 cv
96.2305 201.943 li
98.2497 203.398 100.568 204.134 102.88 204.2 cv
102.764 204.204 102.649 204.205 102.533 204.205 cv
293.179 201.276 mo
293.069 201.05 li
294.426 200.562 295.839 200.303 297.252 200.266 cv
297.368 200.263 297.483 200.262 297.599 200.262 cv
297.714 200.262 297.83 200.263 297.945 200.266 cv
296.328 200.308 294.711 200.641 293.179 201.276 cv
210.716 143.695 mo
210.005 143.68 li
203.714 138.428 199.712 130.528 199.712 121.693 cv
199.712 105.997 212.343 93.2511 227.995 93.0652 cv
228.111 93.0638 228.226 93.0631 228.342 93.0631 cv
228.458 93.0631 228.573 93.0638 228.688 93.0652 cv
213.036 93.2511 200.405 105.997 200.405 121.693 cv
200.405 130.536 204.415 138.443 210.716 143.695 cv
.964706 .964706 .964706 rgb
f
232.819 378.937 mo
232.704 378.937 232.588 378.935 232.472 378.933 cv
230.42 378.887 228.345 378.437 226.357 377.538 cv
218.457 373.964 218.523 356.762 218.523 356.762 cv
218.274 292.655 li
202.081 281.797 li
202.158 281.693 202.233 281.59 202.309 281.486 cv
218.967 292.655 li
219.216 356.762 li
219.216 356.762 219.149 373.964 227.05 377.538 cv
229.038 378.437 231.113 378.887 233.165 378.933 cv
233.05 378.935 232.935 378.937 232.819 378.937 cv
119.777 320.743 mo
119.661 320.743 119.546 320.742 119.43 320.739 cv
116.921 320.682 114.395 320.003 112.09 318.651 cv
51.3615 283.037 li
45.6524 279.689 43.7378 272.347 47.0848 266.637 cv
48.9039 263.534 li
51.0635 259.85 54.9027 257.729 58.9055 257.613 cv
59.0211 257.61 59.1363 257.608 59.2521 257.608 cv
59.3676 257.608 59.4829 257.61 59.5986 257.613 cv
55.5954 257.729 51.7566 259.85 49.5969 263.534 cv
47.7779 266.637 li
44.4308 272.347 46.3454 279.689 52.0544 283.037 cv
112.783 318.651 li
115.088 320.003 117.614 320.682 120.123 320.739 cv
120.008 320.742 119.892 320.743 119.777 320.743 cv
124.999 266.023 mo
124.449 265.741 li
156.692 201.938 li
157.106 201.638 157.504 201.311 157.882 200.954 cv
124.999 266.023 li
103.226 204.205 mo
103.111 204.205 102.995 204.204 102.88 204.2 cv
100.568 204.134 98.2497 203.398 96.2305 201.943 cv
96.0331 201.801 li
90.6528 197.925 89.4429 190.416 93.3332 185.046 cv
117.686 151.429 li
121.441 146.246 127.406 143.156 133.765 143.047 cv
133.881 143.045 133.996 143.044 134.112 143.044 cv
134.227 143.044 134.343 143.045 134.458 143.047 cv
128.099 143.156 122.133 146.246 118.379 151.429 cv
94.0262 185.046 li
90.1359 190.416 91.3458 197.925 96.7261 201.801 cv
96.9235 201.943 li
98.9428 203.398 101.261 204.134 103.573 204.2 cv
103.457 204.204 103.342 204.205 103.226 204.205 cv
293.302 201.528 mo
293.179 201.276 li
294.711 200.641 296.328 200.308 297.945 200.266 cv
298.061 200.263 298.176 200.262 298.292 200.262 cv
298.407 200.262 298.523 200.263 298.638 200.266 cv
296.819 200.313 295 200.729 293.302 201.528 cv
211.428 143.71 mo
210.716 143.695 li
204.415 138.443 200.405 130.536 200.405 121.693 cv
200.405 105.997 213.036 93.2511 228.688 93.0652 cv
228.804 93.0638 228.919 93.0631 229.035 93.0631 cv
229.151 93.0631 229.266 93.0638 229.381 93.0652 cv
213.73 93.2511 201.098 105.997 201.098 121.693 cv
201.098 130.545 205.116 138.459 211.428 143.71 cv
f
233.512 378.937 mo
233.397 378.937 233.281 378.935 233.165 378.933 cv
231.113 378.887 229.038 378.437 227.05 377.538 cv
219.149 373.964 219.216 356.762 219.216 356.762 cv
218.967 292.655 li
202.309 281.486 li
202.386 281.381 202.461 281.278 202.538 281.174 cv
219.66 292.655 li
219.909 356.762 li
219.909 356.762 219.843 373.964 227.743 377.538 cv
229.731 378.437 231.806 378.887 233.858 378.933 cv
233.743 378.935 233.628 378.937 233.512 378.937 cv
120.47 320.743 mo
120.354 320.743 120.239 320.742 120.123 320.739 cv
117.614 320.682 115.088 320.003 112.783 318.651 cv
52.0544 283.037 li
46.3454 279.689 44.4308 272.347 47.7779 266.637 cv
49.5969 263.534 li
51.7566 259.85 55.5954 257.729 59.5986 257.613 cv
59.7138 257.61 59.8296 257.608 59.9451 257.608 cv
60.0606 257.608 60.176 257.61 60.2916 257.613 cv
56.2885 257.729 52.4497 259.85 50.29 263.534 cv
48.4709 266.637 li
45.1239 272.347 47.0385 279.689 52.7475 283.037 cv
113.476 318.651 li
115.781 320.003 118.307 320.682 120.816 320.739 cv
120.701 320.742 120.585 320.743 120.47 320.743 cv
125.55 266.305 mo
124.999 266.023 li
157.882 200.954 li
158.451 200.418 158.976 199.818 159.446 199.155 cv
159.577 198.971 li
125.55 266.305 li
103.919 204.205 mo
103.804 204.205 103.688 204.204 103.573 204.2 cv
101.261 204.134 98.9428 203.398 96.9235 201.943 cv
96.7261 201.801 li
91.3458 197.925 90.1359 190.416 94.0262 185.046 cv
118.379 151.429 li
122.133 146.246 128.099 143.156 134.458 143.047 cv
134.574 143.045 134.689 143.044 134.805 143.044 cv
134.92 143.044 135.036 143.045 135.151 143.047 cv
128.792 143.156 122.827 146.246 119.072 151.429 cv
94.7193 185.046 li
90.829 190.416 92.0389 197.925 97.4192 201.801 cv
97.6166 201.943 li
99.6358 203.398 101.954 204.134 104.266 204.2 cv
104.15 204.204 104.035 204.205 103.919 204.205 cv
293.438 201.806 mo
293.302 201.528 li
295 200.729 296.819 200.313 298.638 200.266 cv
298.754 200.263 298.869 200.262 298.985 200.262 cv
299.1 200.262 299.216 200.263 299.331 200.266 cv
297.312 200.318 295.292 200.826 293.438 201.806 cv
212.139 143.726 mo
211.428 143.71 li
205.116 138.459 201.098 130.545 201.098 121.693 cv
201.098 105.997 213.73 93.2511 229.381 93.0652 cv
229.497 93.0638 229.612 93.0631 229.728 93.0631 cv
229.844 93.0631 229.959 93.0638 230.074 93.0652 cv
214.423 93.2511 201.791 105.997 201.791 121.693 cv
201.791 130.554 205.817 138.474 212.139 143.726 cv
f
234.205 378.937 mo
234.09 378.937 233.974 378.935 233.858 378.933 cv
231.806 378.887 229.731 378.437 227.743 377.538 cv
219.843 373.964 219.909 356.762 219.909 356.762 cv
219.66 292.655 li
202.538 281.174 li
202.614 281.07 202.69 280.966 202.766 280.862 cv
220.353 292.655 li
220.602 356.762 li
220.602 356.762 220.536 373.964 228.436 377.538 cv
230.424 378.437 232.499 378.887 234.551 378.933 cv
234.436 378.935 234.321 378.937 234.205 378.937 cv
121.163 320.743 mo
121.047 320.743 120.932 320.742 120.816 320.739 cv
118.307 320.682 115.781 320.003 113.476 318.651 cv
52.7475 283.037 li
47.0385 279.689 45.1239 272.347 48.4709 266.637 cv
50.29 263.534 li
52.4497 259.85 56.2885 257.729 60.2916 257.613 cv
60.4068 257.61 60.5227 257.608 60.6382 257.608 cv
60.7537 257.608 60.8691 257.61 60.9847 257.613 cv
56.9816 257.729 53.1428 259.85 50.9831 263.534 cv
49.164 266.637 li
45.817 272.347 47.7316 279.689 53.4406 283.037 cv
114.169 318.651 li
116.474 320.003 119 320.682 121.51 320.739 cv
121.394 320.742 121.278 320.743 121.163 320.743 cv
126.101 266.587 mo
125.55 266.305 li
159.577 198.971 li
161.985 195.578 li
126.101 266.587 li
104.612 204.205 mo
104.497 204.205 104.381 204.204 104.266 204.2 cv
101.954 204.134 99.6358 203.398 97.6166 201.943 cv
97.4192 201.801 li
92.0389 197.925 90.829 190.416 94.7193 185.046 cv
119.072 151.429 li
122.827 146.246 128.792 143.156 135.151 143.047 cv
135.267 143.045 135.382 143.044 135.498 143.044 cv
135.613 143.044 135.729 143.045 135.845 143.047 cv
129.485 143.156 123.52 146.246 119.765 151.429 cv
95.4124 185.046 li
91.5221 190.416 92.7319 197.925 98.1123 201.801 cv
98.3097 201.943 li
100.329 203.398 102.647 204.134 104.959 204.2 cv
104.843 204.204 104.728 204.205 104.612 204.205 cv
293.586 202.111 mo
293.438 201.806 li
295.292 200.826 297.312 200.318 299.331 200.266 cv
299.447 200.263 299.562 200.262 299.678 200.262 cv
299.793 200.262 299.909 200.263 300.024 200.266 cv
297.806 200.323 295.586 200.931 293.586 202.111 cv
212.851 143.741 mo
212.139 143.726 li
205.817 138.474 201.791 130.554 201.791 121.693 cv
201.791 105.997 214.423 93.2511 230.074 93.0652 cv
230.19 93.0638 230.305 93.0631 230.421 93.0631 cv
230.537 93.0631 230.652 93.0638 230.767 93.0652 cv
215.116 93.2511 202.485 105.997 202.485 121.693 cv
202.485 130.562 206.518 138.49 212.851 143.741 cv
f
234.898 378.937 mo
234.783 378.937 234.667 378.935 234.551 378.933 cv
232.499 378.887 230.424 378.437 228.436 377.538 cv
220.536 373.964 220.602 356.762 220.602 356.762 cv
220.353 292.655 li
202.766 280.862 li
202.842 280.759 202.919 280.654 202.994 280.551 cv
221.047 292.655 li
221.295 356.762 li
221.295 356.762 221.229 373.964 229.129 377.538 cv
231.117 378.437 233.193 378.887 235.245 378.933 cv
235.129 378.935 235.014 378.937 234.898 378.937 cv
121.856 320.743 mo
121.741 320.743 121.625 320.742 121.51 320.739 cv
119 320.682 116.474 320.003 114.169 318.651 cv
53.4406 283.037 li
47.7316 279.689 45.817 272.347 49.164 266.637 cv
50.9831 263.534 li
53.1428 259.85 56.9816 257.729 60.9847 257.613 cv
61.0999 257.61 61.2158 257.608 61.3313 257.608 cv
61.4468 257.608 61.5621 257.61 61.6777 257.613 cv
57.6746 257.729 53.8358 259.85 51.6761 263.534 cv
49.857 266.637 li
46.5099 272.347 48.4246 279.689 54.1336 283.037 cv
114.862 318.651 li
117.167 320.003 119.693 320.682 122.203 320.739 cv
122.087 320.742 121.972 320.743 121.856 320.743 cv
126.651 266.869 mo
126.101 266.587 li
161.985 195.578 li
164.392 192.185 li
126.651 266.869 li
105.305 204.205 mo
105.19 204.205 105.074 204.204 104.959 204.2 cv
102.647 204.134 100.329 203.398 98.3097 201.943 cv
98.1123 201.801 li
92.7319 197.925 91.5221 190.416 95.4124 185.046 cv
119.765 151.429 li
123.52 146.246 129.485 143.156 135.845 143.047 cv
135.96 143.045 136.075 143.044 136.191 143.044 cv
136.306 143.044 136.422 143.045 136.538 143.047 cv
130.178 143.156 124.213 146.246 120.458 151.429 cv
96.1053 185.046 li
92.2151 190.416 93.425 197.925 98.8053 201.801 cv
99.0027 201.943 li
101.022 203.398 103.34 204.134 105.652 204.2 cv
105.536 204.204 105.421 204.205 105.305 204.205 cv
293.747 202.442 mo
293.586 202.111 li
295.586 200.931 297.806 200.323 300.024 200.266 cv
300.14 200.263 300.255 200.262 300.371 200.262 cv
300.487 200.262 300.602 200.263 300.717 200.266 cv
298.3 200.328 295.882 201.043 293.747 202.442 cv
213.563 143.757 mo
212.851 143.741 li
206.518 138.49 202.485 130.562 202.485 121.693 cv
202.485 105.997 215.116 93.2511 230.767 93.0652 cv
230.883 93.0638 230.998 93.0631 231.114 93.0631 cv
231.23 93.0631 231.345 93.0638 231.46 93.0652 cv
215.809 93.2511 203.178 105.997 203.178 121.693 cv
203.178 130.571 207.219 138.506 213.563 143.757 cv
.960784 .960784 .960784 rgb
f
235.591 378.937 mo
235.476 378.937 235.36 378.935 235.245 378.933 cv
233.193 378.887 231.117 378.437 229.129 377.538 cv
221.229 373.964 221.295 356.762 221.295 356.762 cv
221.047 292.655 li
202.994 280.551 li
203.071 280.446 203.147 280.343 203.223 280.239 cv
221.74 292.655 li
221.989 356.762 li
221.989 356.762 221.922 373.964 229.822 377.538 cv
231.81 378.437 233.886 378.887 235.938 378.933 cv
235.822 378.935 235.707 378.937 235.591 378.937 cv
122.549 320.743 mo
122.434 320.743 122.318 320.742 122.203 320.739 cv
119.693 320.682 117.167 320.003 114.862 318.651 cv
54.1336 283.037 li
48.4246 279.689 46.5099 272.347 49.857 266.637 cv
51.6761 263.534 li
53.8358 259.85 57.6746 257.729 61.6777 257.613 cv
61.793 257.61 61.9088 257.608 62.0243 257.608 cv
62.1398 257.608 62.2552 257.61 62.3708 257.613 cv
58.3681 257.729 54.5288 259.85 52.3692 263.534 cv
50.5501 266.637 li
47.2031 272.347 49.1177 279.689 54.8267 283.037 cv
115.556 318.651 li
117.86 320.003 120.386 320.682 122.896 320.739 cv
122.78 320.742 122.665 320.743 122.549 320.743 cv
127.202 267.151 mo
126.651 266.869 li
164.392 192.185 li
166.8 188.792 li
127.202 267.151 li
105.998 204.205 mo
105.883 204.205 105.767 204.204 105.652 204.2 cv
103.34 204.134 101.022 203.398 99.0027 201.943 cv
98.8053 201.801 li
93.425 197.925 92.2151 190.416 96.1053 185.046 cv
120.458 151.429 li
124.213 146.246 130.178 143.156 136.538 143.047 cv
136.653 143.045 136.768 143.044 136.884 143.044 cv
136.999 143.044 137.115 143.045 137.231 143.047 cv
130.872 143.156 124.906 146.246 121.151 151.429 cv
96.7985 185.046 li
92.9083 190.416 94.1181 197.925 99.4984 201.801 cv
99.6958 201.943 li
101.715 203.398 104.033 204.134 106.345 204.2 cv
106.229 204.204 106.114 204.205 105.998 204.205 cv
293.922 202.799 mo
293.747 202.442 li
295.882 201.043 298.3 200.328 300.717 200.266 cv
300.833 200.263 300.948 200.262 301.064 200.262 cv
301.18 200.262 301.295 200.263 301.411 200.266 cv
298.795 200.334 296.179 201.165 293.922 202.799 cv
214.274 143.772 mo
213.563 143.757 li
207.219 138.506 203.178 130.571 203.178 121.693 cv
203.178 105.997 215.809 93.2511 231.46 93.0652 cv
231.576 93.0638 231.691 93.0631 231.807 93.0631 cv
231.923 93.0631 232.038 93.0638 232.154 93.0652 cv
216.502 93.2511 203.871 105.997 203.871 121.693 cv
203.871 130.58 207.92 138.521 214.274 143.772 cv
f
236.284 378.937 mo
236.169 378.937 236.053 378.935 235.938 378.933 cv
233.886 378.887 231.81 378.437 229.822 377.538 cv
221.922 373.964 221.989 356.762 221.989 356.762 cv
221.74 292.655 li
203.223 280.239 li
203.299 280.135 203.375 280.031 203.451 279.928 cv
222.433 292.655 li
222.682 356.762 li
222.682 356.762 222.615 373.964 230.515 377.538 cv
232.503 378.437 234.579 378.887 236.631 378.933 cv
236.515 378.935 236.4 378.937 236.284 378.937 cv
123.242 320.743 mo
123.127 320.743 123.011 320.742 122.896 320.739 cv
120.386 320.682 117.86 320.003 115.556 318.651 cv
54.8267 283.037 li
49.1177 279.689 47.2031 272.347 50.5501 266.637 cv
52.3692 263.534 li
54.5288 259.85 58.3681 257.729 62.3708 257.613 cv
62.4864 257.61 62.6016 257.608 62.7174 257.608 cv
62.8329 257.608 62.9483 257.61 63.0639 257.613 cv
59.0608 257.729 55.222 259.85 53.0623 263.534 cv
51.2432 266.637 li
47.8963 272.347 49.8108 279.689 55.5198 283.037 cv
116.249 318.651 li
118.554 320.003 121.079 320.682 123.589 320.739 cv
123.473 320.742 123.358 320.743 123.242 320.743 cv
127.752 267.432 mo
127.202 267.151 li
166.8 188.792 li
169.208 185.399 li
127.752 267.432 li
106.691 204.205 mo
106.576 204.205 106.46 204.204 106.345 204.2 cv
104.033 204.134 101.715 203.398 99.6958 201.943 cv
99.4984 201.801 li
94.1181 197.925 92.9083 190.416 96.7985 185.046 cv
121.151 151.429 li
124.906 146.246 130.872 143.156 137.231 143.047 cv
137.346 143.045 137.462 143.044 137.577 143.044 cv
137.692 143.044 137.808 143.045 137.924 143.047 cv
131.565 143.156 125.599 146.246 121.844 151.429 cv
97.4916 185.046 li
93.6013 190.416 94.8112 197.925 100.191 201.801 cv
100.389 201.943 li
102.408 203.398 104.726 204.134 107.038 204.2 cv
106.922 204.204 106.807 204.205 106.691 204.205 cv
294.109 203.183 mo
293.922 202.799 li
296.179 201.165 298.795 200.334 301.411 200.266 cv
301.526 200.263 301.642 200.262 301.757 200.262 cv
301.873 200.262 301.988 200.263 302.104 200.266 cv
299.29 200.339 296.477 201.295 294.109 203.183 cv
214.986 143.788 mo
214.274 143.772 li
207.92 138.521 203.871 130.58 203.871 121.693 cv
203.871 105.997 216.502 93.2511 232.154 93.0652 cv
232.269 93.0638 232.384 93.0631 232.5 93.0631 cv
232.616 93.0631 232.731 93.0638 232.847 93.0652 cv
217.195 93.2511 204.564 105.997 204.564 121.693 cv
204.564 130.589 208.621 138.537 214.986 143.788 cv
f
236.977 378.937 mo
236.862 378.937 236.746 378.935 236.631 378.933 cv
234.579 378.887 232.503 378.437 230.515 377.538 cv
222.615 373.964 222.682 356.762 222.682 356.762 cv
222.433 292.655 li
203.451 279.928 li
203.528 279.824 203.604 279.72 203.68 279.617 cv
223.126 292.655 li
223.375 356.762 li
223.375 356.762 223.308 373.964 231.208 377.538 cv
233.196 378.437 235.272 378.887 237.324 378.933 cv
237.208 378.935 237.093 378.937 236.977 378.937 cv
123.935 320.743 mo
123.82 320.743 123.704 320.742 123.589 320.739 cv
121.079 320.682 118.554 320.003 116.249 318.651 cv
55.5198 283.037 li
49.8108 279.689 47.8963 272.347 51.2432 266.637 cv
53.0623 263.534 li
55.222 259.85 59.0608 257.729 63.0639 257.613 cv
63.1791 257.61 63.295 257.608 63.4105 257.608 cv
63.526 257.608 63.6413 257.61 63.757 257.613 cv
59.7538 257.729 55.9151 259.85 53.7553 263.534 cv
51.9362 266.637 li
48.5892 272.347 50.5038 279.689 56.2128 283.037 cv
116.942 318.651 li
119.247 320.003 121.772 320.682 124.282 320.739 cv
124.166 320.742 124.051 320.743 123.935 320.743 cv
128.303 267.714 mo
127.752 267.432 li
169.208 185.399 li
171.615 182.006 li
128.303 267.714 li
107.385 204.205 mo
107.269 204.205 107.154 204.204 107.038 204.2 cv
104.726 204.134 102.408 203.398 100.389 201.943 cv
100.191 201.801 li
94.8112 197.925 93.6013 190.416 97.4916 185.046 cv
121.844 151.429 li
125.599 146.246 131.565 143.156 137.924 143.047 cv
138.039 143.045 138.155 143.044 138.27 143.044 cv
138.385 143.044 138.501 143.045 138.617 143.047 cv
132.258 143.156 126.292 146.246 122.537 151.429 cv
98.1846 185.046 li
94.2943 190.416 95.5042 197.925 100.885 201.801 cv
101.082 201.943 li
103.101 203.398 105.419 204.134 107.731 204.2 cv
107.616 204.204 107.5 204.205 107.385 204.205 cv
294.242 203.456 mo
294.109 203.183 li
296.477 201.295 299.29 200.339 302.104 200.266 cv
302.219 200.263 302.335 200.262 302.45 200.262 cv
302.566 200.262 302.681 200.263 302.797 200.266 cv
299.965 200.339 297.133 201.308 294.755 203.221 cv
294.242 203.456 li
215.698 143.803 mo
214.986 143.788 li
208.621 138.537 204.564 130.589 204.564 121.693 cv
204.564 105.997 217.195 93.2511 232.847 93.0652 cv
232.962 93.0638 233.077 93.0631 233.193 93.0631 cv
233.309 93.0631 233.424 93.0638 233.54 93.0652 cv
217.888 93.2511 205.257 105.997 205.257 121.693 cv
205.257 130.597 209.322 138.552 215.698 143.803 cv
f
237.67 378.937 mo
237.555 378.937 237.439 378.935 237.324 378.933 cv
235.272 378.887 233.196 378.437 231.208 377.538 cv
223.308 373.964 223.375 356.762 223.375 356.762 cv
223.126 292.655 li
203.68 279.617 li
203.757 279.512 203.832 279.409 203.909 279.305 cv
223.819 292.655 li
224.068 356.762 li
224.068 356.762 224.001 373.964 231.902 377.538 cv
233.889 378.437 235.965 378.887 238.017 378.933 cv
237.901 378.935 237.786 378.937 237.67 378.937 cv
124.628 320.743 mo
124.513 320.743 124.397 320.742 124.282 320.739 cv
121.772 320.682 119.247 320.003 116.942 318.651 cv
56.2128 283.037 li
50.5038 279.689 48.5892 272.347 51.9362 266.637 cv
53.7553 263.534 li
55.9151 259.85 59.7538 257.729 63.757 257.613 cv
63.8722 257.61 63.9881 257.608 64.1035 257.608 cv
64.219 257.608 64.3344 257.61 64.45 257.613 cv
60.4469 257.729 56.6081 259.85 54.4484 263.534 cv
52.6292 266.637 li
49.2823 272.347 51.1969 279.689 56.9059 283.037 cv
117.635 318.651 li
119.94 320.003 122.465 320.682 124.975 320.739 cv
124.859 320.742 124.744 320.743 124.628 320.743 cv
128.854 267.996 mo
128.303 267.714 li
171.615 182.006 li
174.023 178.613 li
128.854 267.996 li
108.078 204.205 mo
107.962 204.205 107.847 204.204 107.731 204.2 cv
105.419 204.134 103.101 203.398 101.082 201.943 cv
100.885 201.801 li
95.5042 197.925 94.2943 190.416 98.1846 185.046 cv
122.537 151.429 li
126.292 146.246 132.258 143.156 138.617 143.047 cv
138.732 143.045 138.848 143.044 138.963 143.044 cv
139.078 143.044 139.194 143.045 139.31 143.047 cv
132.951 143.156 126.985 146.246 123.23 151.429 cv
98.8777 185.046 li
94.9874 190.416 96.1973 197.925 101.578 201.801 cv
101.775 201.943 li
103.794 203.398 106.112 204.134 108.424 204.2 cv
108.309 204.204 108.193 204.205 108.078 204.205 cv
294.368 203.715 mo
294.242 203.456 li
294.755 203.221 li
297.133 201.308 299.965 200.339 302.797 200.266 cv
302.912 200.263 303.028 200.262 303.143 200.262 cv
303.259 200.262 303.374 200.263 303.49 200.266 cv
300.658 200.339 297.826 201.308 295.448 203.221 cv
294.368 203.715 li
216.41 143.818 mo
215.698 143.803 li
209.322 138.552 205.257 130.597 205.257 121.693 cv
205.257 105.997 217.888 93.2511 233.54 93.0652 cv
233.655 93.0638 233.77 93.0631 233.886 93.0631 cv
234.002 93.0631 234.117 93.0638 234.233 93.0652 cv
218.581 93.2511 205.95 105.997 205.95 121.693 cv
205.95 130.606 210.023 138.568 216.41 143.818 cv
.956863 .956863 .956863 rgb
f
238.364 378.937 mo
238.248 378.937 238.132 378.935 238.017 378.933 cv
235.965 378.887 233.889 378.437 231.902 377.538 cv
224.001 373.964 224.068 356.762 224.068 356.762 cv
223.819 292.655 li
203.909 279.305 li
203.985 279.201 204.062 279.097 204.138 278.994 cv
224.512 292.655 li
224.761 356.762 li
224.761 356.762 224.694 373.964 232.595 377.538 cv
234.582 378.437 236.658 378.887 238.71 378.933 cv
238.594 378.935 238.479 378.937 238.364 378.937 cv
125.321 320.743 mo
125.206 320.743 125.09 320.742 124.975 320.739 cv
122.465 320.682 119.94 320.003 117.635 318.651 cv
56.9059 283.037 li
51.1969 279.689 49.2823 272.347 52.6292 266.637 cv
54.4484 263.534 li
56.6081 259.85 60.4469 257.729 64.45 257.613 cv
64.5653 257.61 64.6811 257.608 64.7966 257.608 cv
64.9121 257.608 65.0275 257.61 65.1431 257.613 cv
61.14 257.729 57.3012 259.85 55.1415 263.534 cv
53.3224 266.637 li
49.9754 272.347 51.89 279.689 57.599 283.037 cv
118.328 318.651 li
120.633 320.003 123.158 320.682 125.668 320.739 cv
125.553 320.742 125.437 320.743 125.321 320.743 cv
129.404 268.278 mo
128.854 267.996 li
174.023 178.613 li
176.431 175.22 li
129.404 268.278 li
108.771 204.205 mo
108.655 204.205 108.54 204.204 108.424 204.2 cv
106.112 204.134 103.794 203.398 101.775 201.943 cv
101.578 201.801 li
96.1973 197.925 94.9874 190.416 98.8777 185.046 cv
123.23 151.429 li
126.985 146.246 132.951 143.156 139.31 143.047 cv
139.425 143.045 139.541 143.044 139.656 143.044 cv
139.772 143.044 139.887 143.045 140.003 143.047 cv
133.644 143.156 127.678 146.246 123.923 151.429 cv
99.5708 185.046 li
95.6805 190.416 96.8904 197.925 102.271 201.801 cv
102.468 201.943 li
104.487 203.398 106.805 204.134 109.117 204.2 cv
109.002 204.204 108.886 204.205 108.771 204.205 cv
294.494 203.974 mo
294.368 203.715 li
295.448 203.221 li
297.826 201.308 300.658 200.339 303.49 200.266 cv
303.605 200.263 303.721 200.262 303.836 200.262 cv
303.952 200.262 304.067 200.263 304.183 200.266 cv
301.351 200.339 298.519 201.308 296.141 203.221 cv
294.494 203.974 li
217.122 143.834 mo
216.41 143.818 li
210.023 138.568 205.95 130.606 205.95 121.693 cv
205.95 105.997 218.581 93.2511 234.233 93.0652 cv
234.348 93.0638 234.463 93.0631 234.579 93.0631 cv
234.695 93.0631 234.81 93.0638 234.926 93.0652 cv
219.274 93.2511 206.643 105.997 206.643 121.693 cv
206.643 130.615 210.724 138.583 217.122 143.834 cv
f
239.057 378.937 mo
238.941 378.937 238.826 378.935 238.71 378.933 cv
236.658 378.887 234.582 378.437 232.595 377.538 cv
224.694 373.964 224.761 356.762 224.761 356.762 cv
224.512 292.655 li
204.138 278.994 li
204.214 278.89 204.291 278.786 204.367 278.683 cv
225.205 292.655 li
225.454 356.762 li
225.454 356.762 225.387 373.964 233.288 377.538 cv
235.275 378.437 237.351 378.887 239.403 378.933 cv
239.288 378.935 239.172 378.937 239.057 378.937 cv
126.014 320.743 mo
125.899 320.743 125.784 320.742 125.668 320.739 cv
123.158 320.682 120.633 320.003 118.328 318.651 cv
57.599 283.037 li
51.89 279.689 49.9754 272.347 53.3224 266.637 cv
55.1415 263.534 li
57.3012 259.85 61.14 257.729 65.1431 257.613 cv
65.2583 257.61 65.3742 257.608 65.4897 257.608 cv
65.6052 257.608 65.7205 257.61 65.8362 257.613 cv
61.833 257.729 57.9942 259.85 55.8344 263.534 cv
54.0154 266.637 li
50.6684 272.347 52.5829 279.689 58.292 283.037 cv
119.021 318.651 li
121.326 320.003 123.851 320.682 126.361 320.739 cv
126.246 320.742 126.13 320.743 126.014 320.743 cv
129.955 268.56 mo
129.404 268.278 li
176.431 175.22 li
177.27 174.037 li
177.686 174.108 li
129.955 268.56 li
294.62 204.233 mo
294.494 203.974 li
296.141 203.221 li
298.519 201.308 301.351 200.339 304.183 200.266 cv
304.298 200.263 304.414 200.262 304.529 200.262 cv
304.645 200.262 304.76 200.263 304.876 200.266 cv
302.044 200.339 299.212 201.308 296.834 203.221 cv
294.62 204.233 li
109.464 204.205 mo
109.348 204.205 109.233 204.204 109.117 204.2 cv
106.805 204.134 104.487 203.398 102.468 201.943 cv
102.271 201.801 li
96.8904 197.925 95.6805 190.416 99.5708 185.046 cv
123.923 151.429 li
127.678 146.246 133.644 143.156 140.003 143.047 cv
140.118 143.045 140.234 143.044 140.349 143.044 cv
140.465 143.044 140.581 143.045 140.696 143.047 cv
134.337 143.156 128.371 146.246 124.616 151.429 cv
100.264 185.046 li
96.3735 190.416 97.5833 197.925 102.964 201.801 cv
103.161 201.943 li
105.18 203.398 107.498 204.134 109.81 204.2 cv
109.695 204.204 109.579 204.205 109.464 204.205 cv
217.833 143.849 mo
217.122 143.834 li
210.724 138.583 206.643 130.615 206.643 121.693 cv
206.643 105.997 219.274 93.2511 234.926 93.0652 cv
235.041 93.0638 235.157 93.0631 235.272 93.0631 cv
235.388 93.0631 235.503 93.0638 235.619 93.0652 cv
219.967 93.2511 207.336 105.997 207.336 121.693 cv
207.336 130.623 211.425 138.599 217.833 143.849 cv
f
239.75 378.937 mo
239.634 378.937 239.519 378.935 239.403 378.933 cv
237.351 378.887 235.275 378.437 233.288 377.538 cv
225.387 373.964 225.454 356.762 225.454 356.762 cv
225.205 292.655 li
204.367 278.683 li
204.443 278.579 204.519 278.475 204.596 278.372 cv
225.898 292.655 li
226.147 356.762 li
226.147 356.762 226.08 373.964 233.981 377.538 cv
235.968 378.437 238.044 378.887 240.096 378.933 cv
239.981 378.935 239.865 378.937 239.75 378.937 cv
126.707 320.743 mo
126.592 320.743 126.477 320.742 126.361 320.739 cv
123.851 320.682 121.326 320.003 119.021 318.651 cv
58.292 283.037 li
52.5829 279.689 50.6684 272.347 54.0154 266.637 cv
55.8344 263.534 li
57.9942 259.85 61.833 257.729 65.8362 257.613 cv
65.9514 257.61 66.0672 257.608 66.1827 257.608 cv
66.2982 257.608 66.4136 257.61 66.5292 257.613 cv
62.526 257.729 58.6873 259.85 56.5276 263.534 cv
54.7085 266.637 li
51.3615 272.347 53.2761 279.689 58.9851 283.037 cv
119.714 318.651 li
122.019 320.003 124.544 320.682 127.054 320.739 cv
126.939 320.742 126.823 320.743 126.707 320.743 cv
130.505 268.842 mo
129.955 268.56 li
177.686 174.108 li
177.27 174.037 li
177.345 173.932 li
178.379 174.108 li
130.505 268.842 li
294.746 204.492 mo
294.62 204.233 li
296.834 203.221 li
299.212 201.308 302.044 200.339 304.876 200.266 cv
304.992 200.263 305.107 200.262 305.222 200.262 cv
305.338 200.262 305.453 200.263 305.569 200.266 cv
302.737 200.339 299.905 201.308 297.527 203.221 cv
294.746 204.492 li
110.157 204.205 mo
110.041 204.205 109.926 204.204 109.81 204.2 cv
107.498 204.134 105.18 203.398 103.161 201.943 cv
102.964 201.801 li
97.5833 197.925 96.3735 190.416 100.264 185.046 cv
124.616 151.429 li
128.371 146.246 134.337 143.156 140.696 143.047 cv
140.811 143.045 140.927 143.044 141.042 143.044 cv
141.158 143.044 141.274 143.045 141.389 143.047 cv
135.03 143.156 129.064 146.246 125.309 151.429 cv
100.957 185.046 li
97.0666 190.416 98.2765 197.925 103.657 201.801 cv
103.854 201.943 li
105.873 203.398 108.191 204.134 110.503 204.2 cv
110.388 204.204 110.272 204.205 110.157 204.205 cv
218.545 143.865 mo
217.833 143.849 li
211.425 138.599 207.336 130.623 207.336 121.693 cv
207.336 105.997 219.967 93.2511 235.619 93.0652 cv
235.734 93.0638 235.85 93.0631 235.965 93.0631 cv
236.081 93.0631 236.196 93.0638 236.312 93.0652 cv
220.66 93.2511 208.029 105.997 208.029 121.693 cv
208.029 130.632 212.127 138.615 218.545 143.865 cv
f
240.443 378.937 mo
240.327 378.937 240.212 378.935 240.096 378.933 cv
238.044 378.887 235.968 378.437 233.981 377.538 cv
226.08 373.964 226.147 356.762 226.147 356.762 cv
225.898 292.655 li
204.596 278.372 li
204.672 278.268 204.749 278.164 204.825 278.061 cv
226.591 292.655 li
226.84 356.762 li
226.84 356.762 226.773 373.964 234.674 377.538 cv
236.661 378.437 238.737 378.887 240.789 378.933 cv
240.674 378.935 240.558 378.937 240.443 378.937 cv
127.401 320.743 mo
127.285 320.743 127.17 320.742 127.054 320.739 cv
124.544 320.682 122.019 320.003 119.714 318.651 cv
58.9851 283.037 li
53.2761 279.689 51.3615 272.347 54.7085 266.637 cv
56.5276 263.534 li
58.6873 259.85 62.526 257.729 66.5292 257.613 cv
66.6444 257.61 66.7603 257.608 66.8758 257.608 cv
66.9913 257.608 67.1067 257.61 67.2223 257.613 cv
63.2192 257.729 59.3804 259.85 57.2207 263.534 cv
55.4016 266.637 li
52.0546 272.347 53.9693 279.689 59.6782 283.037 cv
120.407 318.651 li
122.712 320.003 125.238 320.682 127.747 320.739 cv
127.632 320.742 127.516 320.743 127.401 320.743 cv
131.056 269.124 mo
130.505 268.842 li
178.379 174.108 li
177.345 173.932 li
177.419 173.827 li
179.072 174.108 li
131.056 269.124 li
294.873 204.751 mo
294.746 204.492 li
297.527 203.221 li
299.905 201.308 302.737 200.339 305.569 200.266 cv
305.685 200.263 305.8 200.262 305.915 200.262 cv
306.031 200.262 306.147 200.263 306.262 200.266 cv
303.43 200.339 300.598 201.308 298.22 203.221 cv
294.873 204.751 li
110.85 204.205 mo
110.734 204.205 110.619 204.204 110.503 204.2 cv
108.191 204.134 105.873 203.398 103.854 201.943 cv
103.657 201.801 li
98.2765 197.925 97.0666 190.416 100.957 185.046 cv
125.309 151.429 li
129.064 146.246 135.03 143.156 141.389 143.047 cv
141.504 143.045 141.62 143.044 141.736 143.044 cv
141.851 143.044 141.967 143.045 142.082 143.047 cv
135.723 143.156 129.757 146.246 126.003 151.429 cv
101.65 185.046 li
97.7596 190.416 98.9695 197.925 104.35 201.801 cv
104.547 201.943 li
106.567 203.398 108.884 204.134 111.196 204.2 cv
111.081 204.204 110.966 204.205 110.85 204.205 cv
219.257 143.88 mo
218.545 143.865 li
212.127 138.615 208.029 130.632 208.029 121.693 cv
208.029 105.997 220.66 93.2511 236.312 93.0652 cv
236.427 93.0638 236.543 93.0631 236.659 93.0631 cv
236.774 93.0631 236.89 93.0638 237.005 93.0652 cv
221.353 93.2511 208.722 105.997 208.722 121.693 cv
208.722 130.641 212.828 138.63 219.257 143.88 cv
.952941 .952941 .952941 rgb
f
241.136 378.937 mo
241.02 378.937 240.905 378.935 240.789 378.933 cv
238.737 378.887 236.661 378.437 234.674 377.538 cv
226.773 373.964 226.84 356.762 226.84 356.762 cv
226.591 292.655 li
204.825 278.061 li
204.902 277.956 204.977 277.853 205.054 277.749 cv
227.284 292.655 li
227.533 356.762 li
227.533 356.762 227.466 373.964 235.367 377.538 cv
237.354 378.437 239.43 378.887 241.482 378.933 cv
241.367 378.935 241.251 378.937 241.136 378.937 cv
128.094 320.743 mo
127.978 320.743 127.863 320.742 127.747 320.739 cv
125.238 320.682 122.712 320.003 120.407 318.651 cv
59.6782 283.037 li
53.9693 279.689 52.0546 272.347 55.4016 266.637 cv
57.2207 263.534 li
59.3804 259.85 63.2192 257.729 67.2223 257.613 cv
67.3375 257.61 67.4534 257.608 67.5689 257.608 cv
67.6844 257.608 67.7998 257.61 67.9154 257.613 cv
63.9122 257.729 60.0735 259.85 57.9138 263.534 cv
56.0947 266.637 li
52.7476 272.347 54.6623 279.689 60.3713 283.037 cv
121.1 318.651 li
123.405 320.003 125.931 320.682 128.44 320.739 cv
128.325 320.742 128.209 320.743 128.094 320.743 cv
131.607 269.406 mo
131.056 269.124 li
179.072 174.108 li
177.419 173.827 li
177.494 173.722 li
179.765 174.108 li
131.607 269.406 li
241.631 231.829 mo
241.485 231.716 li
241.523 231.661 li
241.631 231.829 li
294.999 205.01 mo
294.873 204.751 li
298.22 203.221 li
300.598 201.308 303.43 200.339 306.262 200.266 cv
306.378 200.263 306.493 200.262 306.609 200.262 cv
306.724 200.262 306.84 200.263 306.955 200.266 cv
304.123 200.339 301.291 201.308 298.913 203.221 cv
294.999 205.01 li
111.543 204.205 mo
111.428 204.205 111.312 204.204 111.196 204.2 cv
108.884 204.134 106.567 203.398 104.547 201.943 cv
104.35 201.801 li
98.9695 197.925 97.7596 190.416 101.65 185.046 cv
126.003 151.429 li
129.757 146.246 135.723 143.156 142.082 143.047 cv
142.198 143.045 142.313 143.044 142.429 143.044 cv
142.544 143.044 142.66 143.045 142.775 143.047 cv
136.416 143.156 130.45 146.246 126.696 151.429 cv
102.343 185.046 li
98.4528 190.416 99.6627 197.925 105.043 201.801 cv
105.24 201.943 li
107.26 203.398 109.577 204.134 111.89 204.2 cv
111.774 204.204 111.659 204.205 111.543 204.205 cv
219.969 143.896 mo
219.257 143.88 li
212.828 138.63 208.722 130.641 208.722 121.693 cv
208.722 105.997 221.353 93.2511 237.005 93.0652 cv
237.121 93.0638 237.236 93.0631 237.352 93.0631 cv
237.467 93.0631 237.583 93.0638 237.698 93.0652 cv
222.046 93.2511 209.415 105.997 209.415 121.693 cv
209.415 130.649 213.529 138.646 219.969 143.896 cv
f
241.829 378.937 mo
241.713 378.937 241.598 378.935 241.482 378.933 cv
239.43 378.887 237.354 378.437 235.367 377.538 cv
227.466 373.964 227.533 356.762 227.533 356.762 cv
227.284 292.655 li
205.054 277.749 li
205.131 277.646 205.207 277.542 205.283 277.439 cv
227.977 292.655 li
228.226 356.762 li
228.226 356.762 228.159 373.964 236.06 377.538 cv
238.048 378.437 240.123 378.887 242.175 378.933 cv
242.06 378.935 241.944 378.937 241.829 378.937 cv
128.787 320.743 mo
128.671 320.743 128.556 320.742 128.44 320.739 cv
125.931 320.682 123.405 320.003 121.1 318.651 cv
60.3713 283.037 li
54.6623 279.689 52.7476 272.347 56.0947 266.637 cv
57.9138 263.534 li
60.0735 259.85 63.9122 257.729 67.9154 257.613 cv
68.0306 257.61 68.1465 257.608 68.262 257.608 cv
68.3775 257.608 68.4928 257.61 68.6085 257.613 cv
64.6053 257.729 60.7666 259.85 58.6068 263.534 cv
56.7877 266.637 li
53.4407 272.347 55.3553 279.689 61.0644 283.037 cv
121.793 318.651 li
124.098 320.003 126.624 320.682 129.133 320.739 cv
129.018 320.742 128.902 320.743 128.787 320.743 cv
132.157 269.688 mo
131.607 269.406 li
179.765 174.108 li
177.494 173.722 li
177.569 173.617 li
180.458 174.108 li
132.157 269.688 li
243.004 232.89 mo
241.631 231.829 li
241.523 231.661 li
241.881 231.138 li
243.004 232.89 li
295.125 205.269 mo
294.999 205.01 li
298.913 203.221 li
301.291 201.308 304.123 200.339 306.955 200.266 cv
307.071 200.263 307.186 200.262 307.302 200.262 cv
307.417 200.262 307.533 200.263 307.648 200.266 cv
304.816 200.339 301.984 201.308 299.606 203.221 cv
295.125 205.269 li
112.236 204.205 mo
112.121 204.205 112.005 204.204 111.89 204.2 cv
109.577 204.134 107.26 203.398 105.24 201.943 cv
105.043 201.801 li
99.6627 197.925 98.4528 190.416 102.343 185.046 cv
126.696 151.429 li
130.45 146.246 136.416 143.156 142.775 143.047 cv
142.891 143.045 143.006 143.044 143.122 143.044 cv
143.237 143.044 143.353 143.045 143.468 143.047 cv
137.109 143.156 131.143 146.246 127.389 151.429 cv
103.036 185.046 li
99.1458 190.416 100.356 197.925 105.736 201.801 cv
105.933 201.943 li
107.953 203.398 110.27 204.134 112.583 204.2 cv
112.467 204.204 112.352 204.205 112.236 204.205 cv
220.681 143.911 mo
219.969 143.896 li
213.529 138.646 209.415 130.649 209.415 121.693 cv
209.415 105.997 222.046 93.2511 237.698 93.0652 cv
237.814 93.0638 237.929 93.0631 238.045 93.0631 cv
238.161 93.0631 238.276 93.0638 238.391 93.0652 cv
222.74 93.2511 210.108 105.997 210.108 121.693 cv
210.108 130.658 214.23 138.662 220.681 143.911 cv
f
242.522 378.937 mo
242.406 378.937 242.291 378.935 242.175 378.933 cv
240.123 378.887 238.048 378.437 236.06 377.538 cv
228.159 373.964 228.226 356.762 228.226 356.762 cv
227.977 292.655 li
205.283 277.439 li
205.36 277.334 205.436 277.232 205.513 277.128 cv
228.67 292.655 li
228.919 356.762 li
228.919 356.762 228.852 373.964 236.753 377.538 cv
238.741 378.437 240.816 378.887 242.868 378.933 cv
242.753 378.935 242.638 378.937 242.522 378.937 cv
129.48 320.743 mo
129.364 320.743 129.249 320.742 129.133 320.739 cv
126.624 320.682 124.098 320.003 121.793 318.651 cv
61.0644 283.037 li
55.3553 279.689 53.4407 272.347 56.7877 266.637 cv
58.6068 263.534 li
60.7666 259.85 64.6053 257.729 68.6085 257.613 cv
68.7237 257.61 68.8396 257.608 68.955 257.608 cv
69.0705 257.608 69.1859 257.61 69.3015 257.613 cv
65.2983 257.729 61.4596 259.85 59.2999 263.534 cv
57.4808 266.637 li
54.1338 272.347 56.0484 279.689 61.7574 283.037 cv
122.486 318.651 li
124.791 320.003 127.317 320.682 129.826 320.739 cv
129.711 320.742 129.595 320.743 129.48 320.743 cv
132.708 269.97 mo
132.157 269.688 li
180.458 174.108 li
177.569 173.617 li
177.643 173.512 li
181.151 174.108 li
132.708 269.97 li
244.378 233.951 mo
243.004 232.89 li
241.881 231.138 li
242.238 230.615 li
244.378 233.951 li
295.251 205.528 mo
295.125 205.269 li
299.606 203.221 li
301.984 201.308 304.816 200.339 307.648 200.266 cv
307.764 200.263 307.879 200.262 307.995 200.262 cv
308.11 200.262 308.226 200.263 308.341 200.266 cv
305.509 200.339 302.677 201.308 300.299 203.221 cv
295.251 205.528 li
112.929 204.205 mo
112.814 204.205 112.698 204.204 112.583 204.2 cv
110.27 204.134 107.953 203.398 105.933 201.943 cv
105.736 201.801 li
100.356 197.925 99.1458 190.416 103.036 185.046 cv
127.389 151.429 li
131.143 146.246 137.109 143.156 143.468 143.047 cv
143.584 143.045 143.699 143.044 143.815 143.044 cv
143.93 143.044 144.046 143.045 144.161 143.047 cv
137.802 143.156 131.837 146.246 128.082 151.429 cv
103.729 185.046 li
99.8389 190.416 101.049 197.925 106.429 201.801 cv
106.626 201.943 li
108.646 203.398 110.964 204.134 113.276 204.2 cv
113.16 204.204 113.045 204.205 112.929 204.205 cv
221.393 143.926 mo
220.681 143.911 li
214.23 138.662 210.108 130.658 210.108 121.693 cv
210.108 105.997 222.74 93.2511 238.391 93.0652 cv
238.507 93.0638 238.622 93.0631 238.738 93.0631 cv
238.853 93.0631 238.969 93.0638 239.084 93.0652 cv
223.432 93.2511 210.801 105.997 210.801 121.693 cv
210.801 130.668 214.93 138.677 221.393 143.926 cv
f
243.215 378.937 mo
243.1 378.937 242.984 378.935 242.868 378.933 cv
240.816 378.887 238.741 378.437 236.753 377.538 cv
228.852 373.964 228.919 356.762 228.919 356.762 cv
228.67 292.655 li
205.513 277.128 li
205.589 277.024 205.666 276.92 205.742 276.817 cv
229.363 292.655 li
229.612 356.762 li
229.612 356.762 229.546 373.964 237.446 377.538 cv
239.434 378.437 241.509 378.887 243.561 378.933 cv
243.446 378.935 243.331 378.937 243.215 378.937 cv
130.173 320.743 mo
130.057 320.743 129.942 320.742 129.826 320.739 cv
127.317 320.682 124.791 320.003 122.486 318.651 cv
61.7574 283.037 li
56.0484 279.689 54.1338 272.347 57.4808 266.637 cv
59.2999 263.534 li
61.4596 259.85 65.2983 257.729 69.3015 257.613 cv
69.4167 257.61 69.5326 257.608 69.6481 257.608 cv
69.7635 257.608 69.879 257.61 69.9946 257.613 cv
65.9918 257.729 62.1526 259.85 59.993 263.534 cv
58.1739 266.637 li
54.8269 272.347 56.7415 279.689 62.4505 283.037 cv
123.179 318.651 li
125.484 320.003 128.01 320.682 130.519 320.739 cv
130.404 320.742 130.288 320.743 130.173 320.743 cv
133.258 270.252 mo
132.708 269.97 li
181.151 174.108 li
177.643 173.512 li
177.718 173.407 li
181.845 174.108 li
133.258 270.252 li
245.751 235.012 mo
244.378 233.951 li
242.238 230.615 li
242.596 230.092 li
245.751 235.012 li
295.378 205.787 mo
295.251 205.528 li
300.299 203.221 li
302.677 201.308 305.509 200.339 308.341 200.266 cv
308.457 200.263 308.572 200.262 308.688 200.262 cv
308.803 200.262 308.919 200.263 309.034 200.266 cv
306.202 200.339 303.37 201.308 300.992 203.221 cv
295.378 205.787 li
113.622 204.205 mo
113.507 204.205 113.391 204.204 113.276 204.2 cv
110.964 204.134 108.646 203.398 106.626 201.943 cv
106.429 201.801 li
101.049 197.925 99.8389 190.416 103.729 185.046 cv
128.082 151.429 li
131.837 146.246 137.802 143.156 144.161 143.047 cv
144.277 143.045 144.392 143.044 144.508 143.044 cv
144.623 143.044 144.739 143.045 144.854 143.047 cv
138.495 143.156 132.53 146.246 128.775 151.429 cv
104.422 185.046 li
100.532 190.416 101.742 197.925 107.122 201.801 cv
107.32 201.943 li
109.339 203.398 111.657 204.134 113.969 204.2 cv
113.853 204.204 113.738 204.205 113.622 204.205 cv
222.106 143.942 mo
221.393 143.926 li
214.93 138.677 210.801 130.668 210.801 121.693 cv
210.801 105.997 223.432 93.2511 239.084 93.0652 cv
239.2 93.0638 239.315 93.0631 239.431 93.0631 cv
239.547 93.0631 239.662 93.0638 239.777 93.0652 cv
224.126 93.2511 211.494 105.997 211.494 121.693 cv
211.494 130.676 215.632 138.693 222.106 143.942 cv
.94902 .94902 .94902 rgb
f
243.908 378.937 mo
243.793 378.937 243.677 378.935 243.561 378.933 cv
241.509 378.887 239.434 378.437 237.446 377.538 cv
229.546 373.964 229.612 356.762 229.612 356.762 cv
229.363 292.655 li
205.742 276.817 li
205.819 276.714 205.896 276.609 205.972 276.506 cv
230.056 292.655 li
230.305 356.762 li
230.305 356.762 230.239 373.964 238.139 377.538 cv
240.127 378.437 242.202 378.887 244.254 378.933 cv
244.139 378.935 244.024 378.937 243.908 378.937 cv
130.866 320.743 mo
130.75 320.743 130.635 320.742 130.519 320.739 cv
128.01 320.682 125.484 320.003 123.179 318.651 cv
62.4505 283.037 li
56.7415 279.689 54.8269 272.347 58.1739 266.637 cv
59.993 263.534 li
62.1526 259.85 65.9918 257.729 69.9946 257.613 cv
70.1102 257.61 70.2254 257.608 70.3412 257.608 cv
70.4567 257.608 70.572 257.61 70.6877 257.613 cv
66.6845 257.729 62.8457 259.85 60.686 263.534 cv
58.8669 266.637 li
55.5199 272.347 57.4345 279.689 63.1435 283.037 cv
123.872 318.651 li
126.177 320.003 128.703 320.682 131.212 320.739 cv
131.097 320.742 130.981 320.743 130.866 320.743 cv
133.809 270.534 mo
133.258 270.252 li
181.845 174.108 li
177.718 173.407 li
177.792 173.302 li
182.538 174.108 li
133.809 270.534 li
247.125 236.073 mo
245.751 235.012 li
242.596 230.092 li
242.954 229.57 li
247.125 236.073 li
295.504 206.046 mo
295.378 205.787 li
300.992 203.221 li
303.37 201.308 306.202 200.339 309.034 200.266 cv
309.15 200.263 309.265 200.262 309.381 200.262 cv
309.496 200.262 309.612 200.263 309.727 200.266 cv
306.895 200.339 304.063 201.308 301.685 203.221 cv
295.504 206.046 li
114.315 204.205 mo
114.2 204.205 114.084 204.204 113.969 204.2 cv
111.657 204.134 109.339 203.398 107.32 201.943 cv
107.122 201.801 li
101.742 197.925 100.532 190.416 104.422 185.046 cv
128.775 151.429 li
132.53 146.246 138.495 143.156 144.854 143.047 cv
144.97 143.045 145.085 143.044 145.201 143.044 cv
145.316 143.044 145.432 143.045 145.548 143.047 cv
139.188 143.156 133.223 146.246 129.468 151.429 cv
105.115 185.046 li
101.225 190.416 102.435 197.925 107.815 201.801 cv
108.013 201.943 li
110.032 203.398 112.35 204.134 114.662 204.2 cv
114.546 204.204 114.431 204.205 114.315 204.205 cv
222.818 143.957 mo
222.106 143.942 li
215.632 138.693 211.494 130.676 211.494 121.693 cv
211.494 105.997 224.126 93.2511 239.777 93.0652 cv
239.893 93.0638 240.008 93.0631 240.124 93.0631 cv
240.24 93.0631 240.355 93.0638 240.47 93.0652 cv
224.819 93.2511 212.188 105.997 212.188 121.693 cv
212.188 130.685 216.333 138.709 222.818 143.957 cv
f
244.601 378.937 mo
244.486 378.937 244.37 378.935 244.254 378.933 cv
242.202 378.887 240.127 378.437 238.139 377.538 cv
230.239 373.964 230.305 356.762 230.305 356.762 cv
230.056 292.655 li
205.972 276.506 li
206.049 276.402 206.125 276.299 206.202 276.195 cv
230.75 292.655 li
230.998 356.762 li
230.998 356.762 230.932 373.964 238.832 377.538 cv
240.82 378.437 242.896 378.887 244.947 378.933 cv
244.832 378.935 244.717 378.937 244.601 378.937 cv
131.559 320.743 mo
131.443 320.743 131.328 320.742 131.212 320.739 cv
128.703 320.682 126.177 320.003 123.872 318.651 cv
63.1435 283.037 li
57.4345 279.689 55.5199 272.347 58.8669 266.637 cv
60.686 263.534 li
62.8457 259.85 66.6845 257.729 70.6877 257.613 cv
70.8029 257.61 70.9187 257.608 71.0342 257.608 cv
71.1497 257.608 71.2651 257.61 71.3807 257.613 cv
67.3775 257.729 63.5388 259.85 61.3791 263.534 cv
59.56 266.637 li
56.213 272.347 58.1276 279.689 63.8366 283.037 cv
124.565 318.651 li
126.87 320.003 129.396 320.682 131.906 320.739 cv
131.79 320.742 131.674 320.743 131.559 320.743 cv
134.36 270.815 mo
133.809 270.534 li
182.538 174.108 li
177.792 173.302 li
177.867 173.197 li
183.231 174.108 li
134.36 270.815 li
248.498 237.134 mo
247.125 236.073 li
242.954 229.57 li
243.312 229.047 li
248.498 237.134 li
295.63 206.305 mo
295.504 206.046 li
301.685 203.221 li
304.063 201.308 306.895 200.339 309.727 200.266 cv
309.843 200.263 309.958 200.262 310.074 200.262 cv
310.19 200.262 310.305 200.263 310.42 200.266 cv
307.588 200.339 304.756 201.308 302.379 203.221 cv
295.63 206.305 li
115.008 204.205 mo
114.893 204.205 114.777 204.204 114.662 204.2 cv
112.35 204.134 110.032 203.398 108.013 201.943 cv
107.815 201.801 li
102.435 197.925 101.225 190.416 105.115 185.046 cv
129.468 151.429 li
133.223 146.246 139.188 143.156 145.548 143.047 cv
145.663 143.045 145.778 143.044 145.894 143.044 cv
146.009 143.044 146.125 143.045 146.241 143.047 cv
139.881 143.156 133.916 146.246 130.161 151.429 cv
105.808 185.046 li
101.918 190.416 103.128 197.925 108.508 201.801 cv
108.706 201.943 li
110.725 203.398 113.043 204.134 115.355 204.2 cv
115.239 204.204 115.124 204.205 115.008 204.205 cv
223.53 143.973 mo
222.818 143.957 li
216.333 138.709 212.188 130.685 212.188 121.693 cv
212.188 105.997 224.819 93.2511 240.47 93.0652 cv
240.586 93.0638 240.701 93.0631 240.817 93.0631 cv
240.933 93.0631 241.048 93.0638 241.163 93.0652 cv
225.512 93.2511 212.881 105.997 212.881 121.693 cv
212.881 130.694 217.034 138.724 223.53 143.973 cv
f
245.294 378.937 mo
245.179 378.937 245.063 378.935 244.947 378.933 cv
242.896 378.887 240.82 378.437 238.832 377.538 cv
230.932 373.964 230.998 356.762 230.998 356.762 cv
230.75 292.655 li
206.202 276.195 li
206.278 276.092 206.356 275.987 206.431 275.885 cv
231.443 292.655 li
231.692 356.762 li
231.692 356.762 231.625 373.964 239.525 377.538 cv
241.513 378.437 243.589 378.887 245.641 378.933 cv
245.525 378.935 245.41 378.937 245.294 378.937 cv
132.252 320.743 mo
132.137 320.743 132.021 320.742 131.906 320.739 cv
129.396 320.682 126.87 320.003 124.565 318.651 cv
63.8366 283.037 li
58.1276 279.689 56.213 272.347 59.56 266.637 cv
61.3791 263.534 li
63.5388 259.85 67.3775 257.729 71.3807 257.613 cv
71.4959 257.61 71.6118 257.608 71.7273 257.608 cv
71.8428 257.608 71.9582 257.61 72.0738 257.613 cv
68.0707 257.729 64.2319 259.85 62.0723 263.534 cv
60.2531 266.637 li
56.9061 272.347 58.8206 279.689 64.5297 283.037 cv
125.259 318.651 li
127.563 320.003 130.089 320.682 132.599 320.739 cv
132.483 320.742 132.368 320.743 132.252 320.743 cv
134.91 271.097 mo
134.36 270.815 li
183.231 174.108 li
177.867 173.197 li
177.941 173.092 li
183.924 174.108 li
134.91 271.097 li
249.872 238.195 mo
248.498 237.134 li
243.312 229.047 li
243.669 228.524 li
249.872 238.195 li
295.756 206.564 mo
295.63 206.305 li
302.379 203.221 li
304.756 201.308 307.588 200.339 310.42 200.266 cv
310.536 200.263 310.651 200.262 310.767 200.262 cv
310.883 200.262 310.998 200.263 311.114 200.266 cv
308.281 200.339 305.449 201.308 303.072 203.221 cv
295.756 206.564 li
115.701 204.205 mo
115.586 204.205 115.47 204.204 115.355 204.2 cv
113.043 204.134 110.725 203.398 108.706 201.943 cv
108.508 201.801 li
103.128 197.925 101.918 190.416 105.808 185.046 cv
130.161 151.429 li
133.916 146.246 139.881 143.156 146.241 143.047 cv
146.356 143.045 146.471 143.044 146.587 143.044 cv
146.702 143.044 146.818 143.045 146.934 143.047 cv
140.574 143.156 134.609 146.246 130.854 151.429 cv
106.502 185.046 li
102.611 190.416 103.821 197.925 109.201 201.801 cv
109.399 201.943 li
111.418 203.398 113.736 204.134 116.048 204.2 cv
115.932 204.204 115.817 204.205 115.701 204.205 cv
224.242 143.988 mo
223.53 143.973 li
217.034 138.724 212.881 130.694 212.881 121.693 cv
212.881 105.997 225.512 93.2511 241.163 93.0652 cv
241.279 93.0638 241.394 93.0631 241.51 93.0631 cv
241.626 93.0631 241.741 93.0638 241.857 93.0652 cv
226.205 93.2511 213.574 105.997 213.574 121.693 cv
213.574 130.702 217.736 138.74 224.242 143.988 cv
f
245.987 378.937 mo
245.872 378.937 245.756 378.935 245.641 378.933 cv
243.589 378.887 241.513 378.437 239.525 377.538 cv
231.625 373.964 231.692 356.762 231.692 356.762 cv
231.443 292.655 li
206.431 275.885 li
206.509 275.78 206.584 275.679 206.661 275.574 cv
232.136 292.655 li
232.384 356.762 li
232.384 356.762 232.318 373.964 240.218 377.538 cv
242.206 378.437 244.282 378.887 246.334 378.933 cv
246.218 378.935 246.103 378.937 245.987 378.937 cv
132.945 320.743 mo
132.83 320.743 132.714 320.742 132.599 320.739 cv
130.089 320.682 127.563 320.003 125.259 318.651 cv
64.5297 283.037 li
58.8206 279.689 56.9061 272.347 60.2531 266.637 cv
62.0723 263.534 li
64.2319 259.85 68.0707 257.729 72.0738 257.613 cv
72.189 257.61 72.3049 257.608 72.4204 257.608 cv
72.5359 257.608 72.6512 257.61 72.7668 257.613 cv
68.7637 257.729 64.9249 259.85 62.7652 263.534 cv
60.9461 266.637 li
57.5992 272.347 59.5137 279.689 65.2227 283.037 cv
125.951 318.651 li
128.256 320.003 130.782 320.682 133.292 320.739 cv
133.176 320.742 133.061 320.743 132.945 320.743 cv
135.461 271.379 mo
134.91 271.097 li
183.924 174.108 li
177.941 173.092 li
178.016 172.987 li
184.617 174.108 li
135.461 271.379 li
264.549 249.532 mo
264.543 249.528 li
264.575 249.529 264.606 249.53 264.638 249.53 cv
264.608 249.531 264.579 249.532 264.549 249.532 cv
251.245 239.256 mo
249.872 238.195 li
243.669 228.524 li
244.027 228.001 li
251.245 239.256 li
295.883 206.823 mo
295.756 206.564 li
303.072 203.221 li
305.449 201.308 308.281 200.339 311.114 200.266 cv
311.229 200.263 311.345 200.262 311.46 200.262 cv
311.576 200.262 311.691 200.263 311.807 200.266 cv
308.975 200.339 306.142 201.308 303.765 203.221 cv
295.883 206.823 li
116.394 204.205 mo
116.279 204.205 116.163 204.204 116.048 204.2 cv
113.736 204.134 111.418 203.398 109.399 201.943 cv
109.201 201.801 li
103.821 197.925 102.611 190.416 106.502 185.046 cv
130.854 151.429 li
134.609 146.246 140.574 143.156 146.934 143.047 cv
147.049 143.045 147.165 143.044 147.28 143.044 cv
147.395 143.044 147.511 143.045 147.627 143.047 cv
141.268 143.156 135.302 146.246 131.547 151.429 cv
107.195 185.046 li
103.304 190.416 104.514 197.925 109.894 201.801 cv
110.092 201.943 li
112.111 203.398 114.429 204.134 116.741 204.2 cv
116.625 204.204 116.51 204.205 116.394 204.205 cv
224.954 144.004 mo
224.242 143.988 li
217.736 138.74 213.574 130.702 213.574 121.693 cv
213.574 105.997 226.205 93.2511 241.857 93.0652 cv
241.972 93.0638 242.087 93.0631 242.203 93.0631 cv
242.319 93.0631 242.434 93.0638 242.55 93.0652 cv
226.898 93.2511 214.267 105.997 214.267 121.693 cv
214.267 130.711 218.437 138.756 224.954 144.004 cv
.945098 .945098 .945098 rgb
f
246.68 378.937 mo
246.565 378.937 246.449 378.935 246.334 378.933 cv
244.282 378.887 242.206 378.437 240.218 377.538 cv
232.318 373.964 232.384 356.762 232.384 356.762 cv
232.136 292.655 li
206.661 275.574 li
206.738 275.471 206.816 275.366 206.891 275.264 cv
232.829 292.655 li
233.078 356.762 li
233.078 356.762 233.011 373.964 240.911 377.538 cv
242.899 378.437 244.975 378.887 247.027 378.933 cv
246.911 378.935 246.796 378.937 246.68 378.937 cv
133.638 320.743 mo
133.523 320.743 133.407 320.742 133.292 320.739 cv
130.782 320.682 128.256 320.003 125.951 318.651 cv
65.2227 283.037 li
59.5137 279.689 57.5992 272.347 60.9461 266.637 cv
62.7652 263.534 li
64.9249 259.85 68.7637 257.729 72.7668 257.613 cv
72.8821 257.61 72.9979 257.608 73.1134 257.608 cv
73.2289 257.608 73.3443 257.61 73.4599 257.613 cv
69.4571 257.729 65.6179 259.85 63.4583 263.534 cv
61.6392 266.637 li
58.2922 272.347 60.2068 279.689 65.9159 283.037 cv
126.645 318.651 li
128.95 320.003 131.475 320.682 133.985 320.739 cv
133.869 320.742 133.754 320.743 133.638 320.743 cv
136.011 271.661 mo
135.461 271.379 li
184.617 174.108 li
178.016 172.987 li
178.09 172.882 li
185.31 174.108 li
136.011 271.661 li
264.985 249.535 mo
264.869 249.535 264.754 249.533 264.638 249.53 cv
264.606 249.53 264.575 249.529 264.543 249.528 cv
264.484 249.482 li
264.766 249.507 265.048 249.523 265.331 249.53 cv
265.216 249.533 265.1 249.535 264.985 249.535 cv
252.619 240.317 mo
251.245 239.256 li
244.027 228.001 li
244.385 227.478 li
252.619 240.317 li
296.009 207.082 mo
295.883 206.823 li
303.765 203.221 li
306.142 201.308 308.975 200.339 311.807 200.266 cv
311.922 200.263 312.037 200.262 312.153 200.262 cv
312.269 200.262 312.384 200.263 312.5 200.266 cv
309.668 200.339 306.836 201.308 304.458 203.221 cv
296.009 207.082 li
117.087 204.205 mo
116.972 204.205 116.856 204.204 116.741 204.2 cv
114.429 204.134 112.111 203.398 110.092 201.943 cv
109.894 201.801 li
104.514 197.925 103.304 190.416 107.195 185.046 cv
131.547 151.429 li
135.302 146.246 141.268 143.156 147.627 143.047 cv
147.742 143.045 147.857 143.044 147.973 143.044 cv
148.088 143.044 148.204 143.045 148.32 143.047 cv
141.961 143.156 135.995 146.246 132.24 151.429 cv
107.888 185.046 li
103.997 190.416 105.207 197.925 110.588 201.801 cv
110.785 201.943 li
112.804 203.398 115.122 204.134 117.434 204.2 cv
117.318 204.204 117.203 204.205 117.087 204.205 cv
225.666 144.019 mo
224.954 144.004 li
218.437 138.756 214.267 130.711 214.267 121.693 cv
214.267 105.997 226.898 93.2511 242.55 93.0652 cv
242.665 93.0638 242.78 93.0631 242.896 93.0631 cv
243.012 93.0631 243.127 93.0638 243.243 93.0652 cv
227.591 93.2511 214.96 105.997 214.96 121.693 cv
214.96 130.72 219.139 138.772 225.666 144.019 cv
f
247.373 378.937 mo
247.258 378.937 247.142 378.935 247.027 378.933 cv
244.975 378.887 242.899 378.437 240.911 377.538 cv
233.011 373.964 233.078 356.762 233.078 356.762 cv
232.829 292.655 li
206.891 275.264 li
206.968 275.16 207.045 275.056 207.122 274.954 cv
233.522 292.655 li
233.771 356.762 li
233.771 356.762 233.704 373.964 241.604 377.538 cv
243.592 378.437 245.668 378.887 247.72 378.933 cv
247.604 378.935 247.489 378.937 247.373 378.937 cv
134.331 320.743 mo
134.216 320.743 134.1 320.742 133.985 320.739 cv
131.475 320.682 128.95 320.003 126.645 318.651 cv
65.9159 283.037 li
60.2068 279.689 58.2922 272.347 61.6392 266.637 cv
63.4583 263.534 li
65.6179 259.85 69.4571 257.729 73.4599 257.613 cv
73.5755 257.61 73.6907 257.608 73.8065 257.608 cv
73.922 257.608 74.0374 257.61 74.153 257.613 cv
70.1498 257.729 66.3111 259.85 64.1514 263.534 cv
62.3323 266.637 li
58.9853 272.347 60.8999 279.689 66.6089 283.037 cv
127.338 318.651 li
129.643 320.003 132.168 320.682 134.678 320.739 cv
134.562 320.742 134.447 320.743 134.331 320.743 cv
136.562 271.943 mo
136.011 271.661 li
185.31 174.108 li
178.09 172.882 li
178.165 172.777 li
186.003 174.108 li
136.562 271.943 li
265.678 249.535 mo
265.562 249.535 265.447 249.533 265.331 249.53 cv
265.048 249.523 264.766 249.507 264.484 249.482 cv
264.356 249.383 li
264.909 249.467 265.466 249.516 266.024 249.53 cv
265.909 249.533 265.793 249.535 265.678 249.535 cv
253.992 241.378 mo
252.619 240.317 li
244.385 227.478 li
244.743 226.956 li
253.992 241.378 li
296.135 207.341 mo
296.009 207.082 li
304.458 203.221 li
306.836 201.308 309.668 200.339 312.5 200.266 cv
312.615 200.263 312.731 200.262 312.846 200.262 cv
312.962 200.262 313.077 200.263 313.193 200.266 cv
310.361 200.339 307.529 201.308 305.151 203.221 cv
296.135 207.341 li
117.781 204.205 mo
117.665 204.205 117.55 204.204 117.434 204.2 cv
115.122 204.134 112.804 203.398 110.785 201.943 cv
110.588 201.801 li
105.207 197.925 103.997 190.416 107.888 185.046 cv
132.24 151.429 li
135.995 146.246 141.961 143.156 148.32 143.047 cv
148.435 143.045 148.551 143.044 148.666 143.044 cv
148.781 143.044 148.897 143.045 149.013 143.047 cv
142.654 143.156 136.688 146.246 132.933 151.429 cv
108.581 185.046 li
104.69 190.416 105.9 197.925 111.281 201.801 cv
111.478 201.943 li
113.497 203.398 115.815 204.134 118.127 204.2 cv
118.012 204.204 117.896 204.205 117.781 204.205 cv
226.379 144.035 mo
225.666 144.019 li
219.139 138.772 214.96 130.72 214.96 121.693 cv
214.96 105.997 227.591 93.2511 243.243 93.0652 cv
243.358 93.0638 243.473 93.0631 243.589 93.0631 cv
243.705 93.0631 243.82 93.0638 243.936 93.0652 cv
228.284 93.2511 215.653 105.997 215.653 121.693 cv
215.653 130.729 219.839 138.788 226.379 144.035 cv
f
248.067 378.937 mo
247.951 378.937 247.835 378.935 247.72 378.933 cv
245.668 378.887 243.592 378.437 241.604 377.538 cv
233.704 373.964 233.771 356.762 233.771 356.762 cv
233.522 292.655 li
207.122 274.954 li
207.199 274.85 207.275 274.747 207.352 274.643 cv
234.215 292.655 li
234.464 356.762 li
234.464 356.762 234.397 373.964 242.297 377.538 cv
244.285 378.437 246.361 378.887 248.413 378.933 cv
248.297 378.935 248.182 378.937 248.067 378.937 cv
135.024 320.743 mo
134.909 320.743 134.793 320.742 134.678 320.739 cv
132.168 320.682 129.643 320.003 127.338 318.651 cv
66.6089 283.037 li
60.8999 279.689 58.9853 272.347 62.3323 266.637 cv
64.1514 263.534 li
66.3111 259.85 70.1498 257.729 74.153 257.613 cv
74.2682 257.61 74.3841 257.608 74.4996 257.608 cv
74.6151 257.608 74.7304 257.61 74.8461 257.613 cv
70.8429 257.729 67.0042 259.85 64.8445 263.534 cv
63.0254 266.637 li
59.6784 272.347 61.593 279.689 67.302 283.037 cv
128.031 318.651 li
130.336 320.003 132.861 320.682 135.371 320.739 cv
135.255 320.742 135.14 320.743 135.024 320.743 cv
137.113 272.225 mo
136.562 271.943 li
186.003 174.108 li
178.165 172.777 li
178.24 172.672 li
186.696 174.108 li
137.113 272.225 li
266.371 249.535 mo
266.255 249.535 266.14 249.533 266.024 249.53 cv
265.466 249.516 264.909 249.467 264.356 249.383 cv
264.135 249.212 li
264.984 249.402 265.849 249.508 266.717 249.53 cv
266.602 249.533 266.486 249.535 266.371 249.535 cv
255.366 242.439 mo
253.992 241.378 li
244.743 226.956 li
245.1 226.433 li
255.366 242.439 li
296.261 207.6 mo
296.135 207.341 li
305.151 203.221 li
307.529 201.308 310.361 200.339 313.193 200.266 cv
313.308 200.263 313.424 200.262 313.539 200.262 cv
313.655 200.262 313.77 200.263 313.886 200.266 cv
311.054 200.339 308.222 201.308 305.844 203.221 cv
296.261 207.6 li
118.474 204.205 mo
118.358 204.205 118.243 204.204 118.127 204.2 cv
115.815 204.134 113.497 203.398 111.478 201.943 cv
111.281 201.801 li
105.9 197.925 104.69 190.416 108.581 185.046 cv
132.933 151.429 li
136.688 146.246 142.654 143.156 149.013 143.047 cv
149.128 143.045 149.244 143.044 149.359 143.044 cv
149.475 143.044 149.59 143.045 149.706 143.047 cv
143.347 143.156 137.381 146.246 133.626 151.429 cv
109.274 185.046 li
105.383 190.416 106.593 197.925 111.974 201.801 cv
112.171 201.943 li
114.19 203.398 116.508 204.134 118.82 204.2 cv
118.705 204.204 118.589 204.205 118.474 204.205 cv
227.091 144.05 mo
226.379 144.035 li
219.839 138.788 215.653 130.729 215.653 121.693 cv
215.653 105.997 228.284 93.2511 243.936 93.0652 cv
244.051 93.0638 244.166 93.0631 244.282 93.0631 cv
244.398 93.0631 244.513 93.0638 244.629 93.0652 cv
228.977 93.2511 216.346 105.997 216.346 121.693 cv
216.346 130.738 220.54 138.803 227.091 144.05 cv
.941176 .941176 .941176 rgb
f
248.759 378.937 mo
248.644 378.937 248.528 378.935 248.413 378.933 cv
246.361 378.887 244.285 378.437 242.297 377.538 cv
234.397 373.964 234.464 356.762 234.464 356.762 cv
234.215 292.655 li
207.352 274.643 li
207.43 274.539 207.506 274.437 207.583 274.333 cv
234.908 292.655 li
235.157 356.762 li
235.157 356.762 235.09 373.964 242.991 377.538 cv
244.978 378.437 247.054 378.887 249.106 378.933 cv
248.99 378.935 248.875 378.937 248.759 378.937 cv
135.717 320.743 mo
135.602 320.743 135.486 320.742 135.371 320.739 cv
132.861 320.682 130.336 320.003 128.031 318.651 cv
67.302 283.037 li
61.593 279.689 59.6784 272.347 63.0254 266.637 cv
64.8445 263.534 li
67.0042 259.85 70.8429 257.729 74.8461 257.613 cv
74.9613 257.61 75.0772 257.608 75.1926 257.608 cv
75.3081 257.608 75.4235 257.61 75.5391 257.613 cv
71.536 257.729 67.6972 259.85 65.5375 263.534 cv
63.7185 266.637 li
60.3714 272.347 62.286 279.689 67.995 283.037 cv
128.724 318.651 li
131.029 320.003 133.554 320.682 136.064 320.739 cv
135.949 320.742 135.833 320.743 135.717 320.743 cv
137.663 272.507 mo
137.113 272.225 li
186.696 174.108 li
178.24 172.672 li
178.314 172.567 li
187.389 174.108 li
137.663 272.507 li
267.064 249.535 mo
266.949 249.535 266.833 249.533 266.717 249.53 cv
265.849 249.508 264.984 249.402 264.135 249.212 cv
263.77 248.931 li
264.952 249.298 266.178 249.499 267.41 249.53 cv
267.295 249.533 267.179 249.535 267.064 249.535 cv
256.74 243.5 mo
255.366 242.439 li
245.1 226.433 li
245.458 225.91 li
256.74 243.5 li
296.388 207.859 mo
296.261 207.6 li
305.844 203.221 li
308.222 201.308 311.054 200.339 313.886 200.266 cv
314.001 200.263 314.117 200.262 314.232 200.262 cv
314.348 200.262 314.463 200.263 314.579 200.266 cv
311.747 200.339 308.915 201.308 306.537 203.221 cv
296.388 207.859 li
119.167 204.205 mo
119.051 204.205 118.936 204.204 118.82 204.2 cv
116.508 204.134 114.19 203.398 112.171 201.943 cv
111.974 201.801 li
106.593 197.925 105.383 190.416 109.274 185.046 cv
133.626 151.429 li
137.381 146.246 143.347 143.156 149.706 143.047 cv
149.821 143.045 149.937 143.044 150.052 143.044 cv
150.168 143.044 150.283 143.045 150.399 143.047 cv
144.04 143.156 138.074 146.246 134.319 151.429 cv
109.967 185.046 li
106.076 190.416 107.286 197.925 112.667 201.801 cv
112.864 201.943 li
114.883 203.398 117.201 204.134 119.513 204.2 cv
119.398 204.204 119.282 204.205 119.167 204.205 cv
227.803 144.065 mo
227.091 144.05 li
220.54 138.803 216.346 130.738 216.346 121.693 cv
216.346 105.997 228.977 93.2511 244.629 93.0652 cv
244.744 93.0638 244.86 93.0631 244.975 93.0631 cv
245.091 93.0631 245.206 93.0638 245.322 93.0652 cv
229.67 93.2511 217.039 105.997 217.039 121.693 cv
217.039 130.747 221.242 138.819 227.803 144.065 cv
f
249.453 378.937 mo
249.337 378.937 249.222 378.935 249.106 378.933 cv
247.054 378.887 244.978 378.437 242.991 377.538 cv
235.09 373.964 235.157 356.762 235.157 356.762 cv
234.908 292.655 li
207.583 274.333 li
207.66 274.23 207.737 274.126 207.813 274.023 cv
235.601 292.655 li
235.85 356.762 li
235.85 356.762 235.783 373.964 243.684 377.538 cv
245.671 378.437 247.747 378.887 249.799 378.933 cv
249.684 378.935 249.568 378.937 249.453 378.937 cv
136.41 320.743 mo
136.295 320.743 136.179 320.742 136.064 320.739 cv
133.554 320.682 131.029 320.003 128.724 318.651 cv
67.995 283.037 li
62.286 279.689 60.3714 272.347 63.7185 266.637 cv
65.5375 263.534 li
67.6972 259.85 71.536 257.729 75.5391 257.613 cv
75.6544 257.61 75.7702 257.608 75.8857 257.608 cv
76.0012 257.608 76.1166 257.61 76.2322 257.613 cv
72.229 257.729 68.3903 259.85 66.2306 263.534 cv
64.4115 266.637 li
61.0645 272.347 62.9791 279.689 68.6881 283.037 cv
129.417 318.651 li
131.722 320.003 134.247 320.682 136.757 320.739 cv
136.642 320.742 136.526 320.743 136.41 320.743 cv
138.214 272.789 mo
137.663 272.507 li
187.389 174.108 li
178.314 172.567 li
178.389 172.461 li
188.082 174.108 li
138.214 272.789 li
267.757 249.535 mo
267.642 249.535 267.526 249.533 267.41 249.53 cv
266.178 249.499 264.952 249.298 263.77 248.931 cv
263.135 248.44 li
264.713 249.12 266.402 249.487 268.104 249.53 cv
267.988 249.533 267.872 249.535 267.757 249.535 cv
258.113 244.561 mo
256.74 243.5 li
245.458 225.91 li
245.816 225.387 li
258.113 244.561 li
296.514 208.118 mo
296.388 207.859 li
306.537 203.221 li
308.915 201.308 311.747 200.339 314.579 200.266 cv
314.694 200.263 314.81 200.262 314.925 200.262 cv
315.041 200.262 315.156 200.263 315.272 200.266 cv
312.44 200.339 309.608 201.308 307.23 203.221 cv
296.514 208.118 li
119.86 204.205 mo
119.744 204.205 119.629 204.204 119.513 204.2 cv
117.201 204.134 114.883 203.398 112.864 201.943 cv
112.667 201.801 li
107.286 197.925 106.076 190.416 109.967 185.046 cv
134.319 151.429 li
138.074 146.246 144.04 143.156 150.399 143.047 cv
150.514 143.045 150.63 143.044 150.745 143.044 cv
150.861 143.044 150.977 143.045 151.092 143.047 cv
144.733 143.156 138.767 146.246 135.012 151.429 cv
110.66 185.046 li
106.77 190.416 107.98 197.925 113.36 201.801 cv
113.557 201.943 li
115.576 203.398 117.894 204.134 120.206 204.2 cv
120.091 204.204 119.975 204.205 119.86 204.205 cv
228.516 144.081 mo
227.803 144.065 li
221.242 138.819 217.039 130.747 217.039 121.693 cv
217.039 105.997 229.67 93.2511 245.322 93.0652 cv
245.437 93.0638 245.553 93.0631 245.668 93.0631 cv
245.784 93.0631 245.899 93.0638 246.015 93.0652 cv
230.363 93.2511 217.732 105.997 217.732 121.693 cv
217.732 130.755 221.944 138.835 228.516 144.081 cv
f
250.146 378.937 mo
250.03 378.937 249.915 378.935 249.799 378.933 cv
247.747 378.887 245.671 378.437 243.684 377.538 cv
235.783 373.964 235.85 356.762 235.85 356.762 cv
235.601 292.655 li
207.813 274.023 li
207.891 273.919 207.967 273.816 208.044 273.713 cv
236.294 292.655 li
236.543 356.762 li
236.543 356.762 236.476 373.964 244.377 377.538 cv
246.364 378.437 248.44 378.887 250.492 378.933 cv
250.377 378.935 250.261 378.937 250.146 378.937 cv
137.103 320.743 mo
136.988 320.743 136.873 320.742 136.757 320.739 cv
134.247 320.682 131.722 320.003 129.417 318.651 cv
68.6881 283.037 li
62.9791 279.689 61.0645 272.347 64.4115 266.637 cv
66.2306 263.534 li
68.3903 259.85 72.229 257.729 76.2322 257.613 cv
76.3474 257.61 76.4633 257.608 76.5788 257.608 cv
76.6943 257.608 76.8097 257.61 76.9253 257.613 cv
72.9221 257.729 69.0834 259.85 66.9236 263.534 cv
65.1046 266.637 li
61.7576 272.347 63.6721 279.689 69.3812 283.037 cv
130.11 318.651 li
132.415 320.003 134.941 320.682 137.45 320.739 cv
137.335 320.742 137.219 320.743 137.103 320.743 cv
138.764 273.071 mo
138.214 272.789 li
188.082 174.108 li
178.389 172.461 li
178.463 172.356 li
188.775 174.108 li
138.764 273.071 li
268.45 249.535 mo
268.335 249.535 268.219 249.533 268.104 249.53 cv
266.402 249.487 264.713 249.12 263.135 248.44 cv
258.113 244.561 li
245.816 225.387 li
246.174 224.864 li
259.072 244.975 li
261.631 247.892 265.186 249.437 268.797 249.53 cv
268.681 249.533 268.566 249.535 268.45 249.535 cv
296.64 208.377 mo
296.514 208.118 li
307.23 203.221 li
309.608 201.308 312.44 200.339 315.272 200.266 cv
315.388 200.263 315.503 200.262 315.618 200.262 cv
315.734 200.262 315.85 200.263 315.965 200.266 cv
313.133 200.339 310.301 201.308 307.923 203.221 cv
296.64 208.377 li
120.553 204.205 mo
120.437 204.205 120.322 204.204 120.206 204.2 cv
117.894 204.134 115.576 203.398 113.557 201.943 cv
113.36 201.801 li
107.98 197.925 106.77 190.416 110.66 185.046 cv
135.012 151.429 li
138.767 146.246 144.733 143.156 151.092 143.047 cv
151.207 143.045 151.323 143.044 151.439 143.044 cv
151.554 143.044 151.67 143.045 151.785 143.047 cv
145.426 143.156 139.46 146.246 135.706 151.429 cv
111.353 185.046 li
107.463 190.416 108.673 197.925 114.053 201.801 cv
114.25 201.943 li
116.27 203.398 118.587 204.134 120.899 204.2 cv
120.784 204.204 120.669 204.205 120.553 204.205 cv
229.228 144.096 mo
228.516 144.081 li
221.944 138.835 217.732 130.755 217.732 121.693 cv
217.732 105.997 230.363 93.2511 246.015 93.0652 cv
246.13 93.0638 246.246 93.0631 246.362 93.0631 cv
246.477 93.0631 246.593 93.0638 246.708 93.0652 cv
231.056 93.2511 218.425 105.997 218.425 121.693 cv
218.425 130.764 222.645 138.851 229.228 144.096 cv
f
250.839 378.937 mo
250.723 378.937 250.608 378.935 250.492 378.933 cv
248.44 378.887 246.364 378.437 244.377 377.538 cv
236.476 373.964 236.543 356.762 236.543 356.762 cv
236.294 292.655 li
208.044 273.713 li
208.121 273.61 208.199 273.505 208.275 273.403 cv
236.987 292.655 li
237.236 356.762 li
237.236 356.762 237.169 373.964 245.07 377.538 cv
247.057 378.437 249.133 378.887 251.185 378.933 cv
251.07 378.935 250.954 378.937 250.839 378.937 cv
137.797 320.743 mo
137.681 320.743 137.566 320.742 137.45 320.739 cv
134.941 320.682 132.415 320.003 130.11 318.651 cv
69.3812 283.037 li
63.6721 279.689 61.7576 272.347 65.1046 266.637 cv
66.9236 263.534 li
69.0834 259.85 72.9221 257.729 76.9253 257.613 cv
77.0405 257.61 77.1564 257.608 77.2719 257.608 cv
77.3874 257.608 77.5027 257.61 77.6183 257.613 cv
73.6152 257.729 69.7764 259.85 67.6167 263.534 cv
65.7976 266.637 li
62.4505 272.347 64.3652 279.689 70.0742 283.037 cv
130.803 318.651 li
133.108 320.003 135.634 320.682 138.143 320.739 cv
138.028 320.742 137.912 320.743 137.797 320.743 cv
139.315 273.353 mo
138.764 273.071 li
188.775 174.108 li
178.463 172.356 li
178.538 172.251 li
189.468 174.108 li
139.315 273.353 li
269.143 249.535 mo
269.028 249.535 268.912 249.533 268.797 249.53 cv
265.186 249.437 261.631 247.892 259.072 244.975 cv
246.174 224.864 li
246.532 224.342 li
259.765 244.975 li
262.324 247.892 265.88 249.437 269.49 249.53 cv
269.374 249.533 269.259 249.535 269.143 249.535 cv
296.766 208.636 mo
296.64 208.377 li
307.923 203.221 li
310.301 201.308 313.133 200.339 315.965 200.266 cv
316.081 200.263 316.196 200.262 316.312 200.262 cv
316.427 200.262 316.543 200.263 316.658 200.266 cv
313.826 200.339 310.994 201.308 308.616 203.221 cv
296.766 208.636 li
121.246 204.205 mo
121.131 204.205 121.015 204.204 120.899 204.2 cv
118.587 204.134 116.27 203.398 114.25 201.943 cv
114.053 201.801 li
108.673 197.925 107.463 190.416 111.353 185.046 cv
135.706 151.429 li
139.46 146.246 145.426 143.156 151.785 143.047 cv
151.901 143.045 152.016 143.044 152.132 143.044 cv
152.247 143.044 152.363 143.045 152.478 143.047 cv
146.119 143.156 140.153 146.246 136.399 151.429 cv
112.046 185.046 li
108.156 190.416 109.366 197.925 114.746 201.801 cv
114.943 201.943 li
116.963 203.398 119.28 204.134 121.593 204.2 cv
121.477 204.204 121.362 204.205 121.246 204.205 cv
229.941 144.112 mo
229.228 144.096 li
222.645 138.851 218.425 130.764 218.425 121.693 cv
218.425 105.997 231.056 93.2511 246.708 93.0652 cv
246.824 93.0638 246.939 93.0631 247.055 93.0631 cv
247.17 93.0631 247.286 93.0638 247.401 93.0652 cv
231.749 93.2511 219.118 105.997 219.118 121.693 cv
219.118 130.774 223.346 138.867 229.941 144.112 cv
.937255 .937255 .937255 rgb
f
251.532 378.937 mo
251.416 378.937 251.301 378.935 251.185 378.933 cv
249.133 378.887 247.057 378.437 245.07 377.538 cv
237.169 373.964 237.236 356.762 237.236 356.762 cv
236.987 292.655 li
208.275 273.403 li
208.353 273.299 208.429 273.197 208.506 273.094 cv
237.68 292.655 li
237.929 356.762 li
237.929 356.762 237.862 373.964 245.763 377.538 cv
247.751 378.437 249.826 378.887 251.878 378.933 cv
251.763 378.935 251.647 378.937 251.532 378.937 cv
138.49 320.743 mo
138.374 320.743 138.259 320.742 138.143 320.739 cv
135.634 320.682 133.108 320.003 130.803 318.651 cv
70.0742 283.037 li
64.3652 279.689 62.4505 272.347 65.7976 266.637 cv
67.6167 263.534 li
69.7764 259.85 73.6152 257.729 77.6183 257.613 cv
77.7336 257.61 77.8494 257.608 77.9649 257.608 cv
78.0804 257.608 78.1958 257.61 78.3114 257.613 cv
74.3087 257.729 70.4694 259.85 68.3098 263.534 cv
66.4907 266.637 li
63.1437 272.347 65.0583 279.689 70.7673 283.037 cv
131.496 318.651 li
133.801 320.003 136.327 320.682 138.836 320.739 cv
138.721 320.742 138.605 320.743 138.49 320.743 cv
139.866 273.635 mo
139.315 273.353 li
189.468 174.108 li
178.538 172.251 li
178.612 172.146 li
190.161 174.108 li
139.866 273.635 li
269.836 249.535 mo
269.721 249.535 269.605 249.533 269.49 249.53 cv
265.88 249.437 262.324 247.892 259.765 244.975 cv
246.532 224.342 li
246.889 223.819 li
260.458 244.975 li
263.017 247.892 266.573 249.437 270.183 249.53 cv
270.067 249.533 269.952 249.535 269.836 249.535 cv
296.893 208.895 mo
296.766 208.636 li
308.616 203.221 li
310.994 201.308 313.826 200.339 316.658 200.266 cv
316.774 200.263 316.889 200.262 317.005 200.262 cv
317.12 200.262 317.236 200.263 317.351 200.266 cv
314.519 200.339 311.687 201.308 309.309 203.221 cv
296.893 208.895 li
121.939 204.205 mo
121.824 204.205 121.708 204.204 121.593 204.2 cv
119.28 204.134 116.963 203.398 114.943 201.943 cv
114.746 201.801 li
109.366 197.925 108.156 190.416 112.046 185.046 cv
136.399 151.429 li
140.153 146.246 146.119 143.156 152.478 143.047 cv
152.594 143.045 152.709 143.044 152.825 143.044 cv
152.94 143.044 153.056 143.045 153.171 143.047 cv
146.812 143.156 140.846 146.246 137.092 151.429 cv
112.739 185.046 li
108.849 190.416 110.059 197.925 115.439 201.801 cv
115.636 201.943 li
117.656 203.398 119.973 204.134 122.286 204.2 cv
122.17 204.204 122.055 204.205 121.939 204.205 cv
230.653 144.127 mo
229.941 144.112 li
223.346 138.867 219.118 130.774 219.118 121.693 cv
219.118 105.997 231.749 93.2511 247.401 93.0652 cv
247.517 93.0638 247.632 93.0631 247.748 93.0631 cv
247.863 93.0631 247.979 93.0638 248.094 93.0652 cv
232.442 93.2511 219.811 105.997 219.811 121.693 cv
219.811 130.782 224.047 138.883 230.653 144.127 cv
f
252.225 378.937 mo
252.109 378.937 251.994 378.935 251.878 378.933 cv
249.826 378.887 247.751 378.437 245.763 377.538 cv
237.862 373.964 237.929 356.762 237.929 356.762 cv
237.68 292.655 li
208.506 273.094 li
208.583 272.99 208.661 272.886 208.737 272.784 cv
238.373 292.655 li
238.622 356.762 li
238.622 356.762 238.555 373.964 246.456 377.538 cv
248.444 378.437 250.519 378.887 252.571 378.933 cv
252.456 378.935 252.341 378.937 252.225 378.937 cv
139.183 320.743 mo
139.067 320.743 138.952 320.742 138.836 320.739 cv
136.327 320.682 133.801 320.003 131.496 318.651 cv
70.7673 283.037 li
65.0583 279.689 63.1437 272.347 66.4907 266.637 cv
68.3098 263.534 li
70.4694 259.85 74.3087 257.729 78.3114 257.613 cv
78.427 257.61 78.5422 257.608 78.658 257.608 cv
78.7735 257.608 78.8889 257.61 79.0045 257.613 cv
75.0014 257.729 71.1626 259.85 69.0029 263.534 cv
67.1838 266.637 li
63.8368 272.347 65.7514 279.689 71.4604 283.037 cv
132.189 318.651 li
134.494 320.003 137.02 320.682 139.529 320.739 cv
139.414 320.742 139.298 320.743 139.183 320.743 cv
140.416 273.917 mo
139.866 273.635 li
190.161 174.108 li
178.612 172.146 li
178.687 172.041 li
190.854 174.108 li
140.416 273.917 li
270.529 249.535 mo
270.414 249.535 270.298 249.533 270.183 249.53 cv
266.573 249.437 263.017 247.892 260.458 244.975 cv
246.889 223.819 li
247.247 223.296 li
261.151 244.975 li
263.71 247.892 267.266 249.437 270.876 249.53 cv
270.76 249.533 270.645 249.535 270.529 249.535 cv
297.019 209.154 mo
296.893 208.895 li
309.309 203.221 li
311.687 201.308 314.519 200.339 317.351 200.266 cv
317.467 200.263 317.582 200.262 317.698 200.262 cv
317.813 200.262 317.929 200.263 318.044 200.266 cv
315.212 200.339 312.38 201.308 310.002 203.221 cv
297.019 209.154 li
122.632 204.205 mo
122.517 204.205 122.401 204.204 122.286 204.2 cv
119.973 204.134 117.656 203.398 115.636 201.943 cv
115.439 201.801 li
110.059 197.925 108.849 190.416 112.739 185.046 cv
137.092 151.429 li
140.846 146.246 146.812 143.156 153.171 143.047 cv
153.287 143.045 153.402 143.044 153.518 143.044 cv
153.633 143.044 153.749 143.045 153.864 143.047 cv
147.505 143.156 141.54 146.246 137.785 151.429 cv
113.432 185.046 li
109.542 190.416 110.752 197.925 116.132 201.801 cv
116.329 201.943 li
118.349 203.398 120.667 204.134 122.979 204.2 cv
122.863 204.204 122.748 204.205 122.632 204.205 cv
231.366 144.143 mo
230.653 144.127 li
224.047 138.883 219.811 130.782 219.811 121.693 cv
219.811 105.997 232.442 93.2511 248.094 93.0652 cv
248.21 93.0638 248.325 93.0631 248.441 93.0631 cv
248.556 93.0631 248.672 93.0638 248.787 93.0652 cv
233.135 93.2511 220.504 105.997 220.504 121.693 cv
220.504 130.791 224.749 138.899 231.366 144.143 cv
f
252.918 378.937 mo
252.803 378.937 252.687 378.935 252.571 378.933 cv
250.519 378.887 248.444 378.437 246.456 377.538 cv
238.555 373.964 238.622 356.762 238.622 356.762 cv
238.373 292.655 li
208.737 272.784 li
208.815 272.68 208.892 272.577 208.969 272.474 cv
239.066 292.655 li
239.315 356.762 li
239.315 356.762 239.249 373.964 247.149 377.538 cv
249.137 378.437 251.212 378.887 253.264 378.933 cv
253.149 378.935 253.034 378.937 252.918 378.937 cv
139.876 320.743 mo
139.76 320.743 139.645 320.742 139.529 320.739 cv
137.02 320.682 134.494 320.003 132.189 318.651 cv
71.4604 283.037 li
65.7514 279.689 63.8368 272.347 67.1838 266.637 cv
69.0029 263.534 li
71.1626 259.85 75.0014 257.729 79.0045 257.613 cv
79.1197 257.61 79.2356 257.608 79.3511 257.608 cv
79.4666 257.608 79.5819 257.61 79.6975 257.613 cv
75.6944 257.729 71.8556 259.85 69.6959 263.534 cv
67.8768 266.637 li
64.5298 272.347 66.4444 279.689 72.1534 283.037 cv
132.882 318.651 li
135.187 320.003 137.713 320.682 140.222 320.739 cv
140.107 320.742 139.991 320.743 139.876 320.743 cv
140.967 274.198 mo
140.416 273.917 li
190.854 174.108 li
178.687 172.041 li
178.761 171.936 li
191.548 174.108 li
140.967 274.198 li
271.222 249.535 mo
271.107 249.535 270.991 249.533 270.876 249.53 cv
267.266 249.437 263.71 247.892 261.151 244.975 cv
247.247 223.296 li
247.605 222.773 li
261.844 244.975 li
264.403 247.892 267.959 249.437 271.569 249.53 cv
271.454 249.533 271.338 249.535 271.222 249.535 cv
297.145 209.413 mo
297.019 209.154 li
310.002 203.221 li
312.38 201.308 315.212 200.339 318.044 200.266 cv
318.16 200.263 318.275 200.262 318.391 200.262 cv
318.506 200.262 318.622 200.263 318.737 200.266 cv
315.905 200.339 313.073 201.308 310.695 203.221 cv
297.145 209.413 li
123.325 204.205 mo
123.21 204.205 123.094 204.204 122.979 204.2 cv
120.667 204.134 118.349 203.398 116.329 201.943 cv
116.132 201.801 li
110.752 197.925 109.542 190.416 113.432 185.046 cv
137.785 151.429 li
141.54 146.246 147.505 143.156 153.864 143.047 cv
153.98 143.045 154.095 143.044 154.211 143.044 cv
154.326 143.044 154.442 143.045 154.557 143.047 cv
148.198 143.156 142.233 146.246 138.478 151.429 cv
114.125 185.046 li
110.235 190.416 111.445 197.925 116.825 201.801 cv
117.022 201.943 li
119.042 203.398 121.36 204.134 123.672 204.2 cv
123.556 204.204 123.441 204.205 123.325 204.205 cv
232.078 144.158 mo
231.366 144.143 li
224.749 138.899 220.504 130.791 220.504 121.693 cv
220.504 105.997 233.135 93.2511 248.787 93.0652 cv
248.903 93.0638 249.018 93.0631 249.134 93.0631 cv
249.25 93.0631 249.365 93.0638 249.48 93.0652 cv
233.829 93.2511 221.197 105.997 221.197 121.693 cv
221.197 130.8 225.451 138.914 232.078 144.158 cv
f
253.611 378.937 mo
253.495 378.937 253.38 378.935 253.264 378.933 cv
251.212 378.887 249.137 378.437 247.149 377.538 cv
239.249 373.964 239.315 356.762 239.315 356.762 cv
239.066 292.655 li
208.969 272.474 li
209.046 272.371 209.123 272.268 209.2 272.165 cv
239.759 292.655 li
240.008 356.762 li
240.008 356.762 239.942 373.964 247.842 377.538 cv
249.83 378.437 251.905 378.887 253.957 378.933 cv
253.842 378.935 253.727 378.937 253.611 378.937 cv
140.569 320.743 mo
140.453 320.743 140.338 320.742 140.222 320.739 cv
137.713 320.682 135.187 320.003 132.882 318.651 cv
72.1534 283.037 li
66.4444 279.689 64.5298 272.347 67.8768 266.637 cv
69.6959 263.534 li
71.8556 259.85 75.6944 257.729 79.6975 257.613 cv
79.8128 257.61 79.9286 257.608 80.0441 257.608 cv
80.1596 257.608 80.275 257.61 80.3906 257.613 cv
76.3875 257.729 72.5487 259.85 70.389 263.534 cv
68.5698 266.637 li
65.2229 272.347 67.1375 279.689 72.8465 283.037 cv
133.575 318.651 li
135.88 320.003 138.406 320.682 140.915 320.739 cv
140.8 320.742 140.684 320.743 140.569 320.743 cv
141.517 274.48 mo
140.967 274.198 li
191.548 174.108 li
178.761 171.936 li
178.836 171.831 li
192.241 174.108 li
141.517 274.48 li
271.915 249.535 mo
271.8 249.535 271.684 249.533 271.569 249.53 cv
267.959 249.437 264.403 247.892 261.844 244.975 cv
247.605 222.773 li
247.963 222.25 li
262.537 244.975 li
265.096 247.892 268.652 249.437 272.262 249.53 cv
272.147 249.533 272.031 249.535 271.915 249.535 cv
297.271 209.672 mo
297.145 209.413 li
310.695 203.221 li
313.073 201.308 315.905 200.339 318.737 200.266 cv
318.853 200.263 318.968 200.262 319.084 200.262 cv
319.199 200.262 319.315 200.263 319.43 200.266 cv
316.598 200.339 313.766 201.308 311.388 203.221 cv
297.271 209.672 li
124.018 204.205 mo
123.903 204.205 123.787 204.204 123.672 204.2 cv
121.36 204.134 119.042 203.398 117.022 201.943 cv
116.825 201.801 li
111.445 197.925 110.235 190.416 114.125 185.046 cv
138.478 151.429 li
142.233 146.246 148.198 143.156 154.557 143.047 cv
154.673 143.045 154.788 143.044 154.904 143.044 cv
155.019 143.044 155.135 143.045 155.25 143.047 cv
148.891 143.156 142.926 146.246 139.171 151.429 cv
114.818 185.046 li
110.928 190.416 112.138 197.925 117.518 201.801 cv
117.716 201.943 li
119.735 203.398 122.053 204.134 124.365 204.2 cv
124.249 204.204 124.134 204.205 124.018 204.205 cv
232.791 144.173 mo
232.078 144.158 li
225.451 138.914 221.197 130.8 221.197 121.693 cv
221.197 105.997 233.829 93.2511 249.48 93.0652 cv
249.596 93.0638 249.711 93.0631 249.827 93.0631 cv
249.943 93.0631 250.058 93.0638 250.173 93.0652 cv
234.522 93.2511 221.891 105.997 221.891 121.693 cv
221.891 130.81 226.151 138.93 232.791 144.173 cv
.933333 .933333 .933333 rgb
f
254.304 378.937 mo
254.189 378.937 254.073 378.935 253.957 378.933 cv
251.905 378.887 249.83 378.437 247.842 377.538 cv
239.942 373.964 240.008 356.762 240.008 356.762 cv
239.759 292.655 li
209.2 272.165 li
209.277 272.062 209.356 271.957 209.432 271.856 cv
240.452 292.655 li
240.701 356.762 li
240.701 356.762 240.635 373.964 248.535 377.538 cv
250.523 378.437 252.598 378.887 254.65 378.933 cv
254.535 378.935 254.42 378.937 254.304 378.937 cv
141.262 320.743 mo
141.146 320.743 141.031 320.742 140.915 320.739 cv
138.406 320.682 135.88 320.003 133.575 318.651 cv
72.8465 283.037 li
67.1375 279.689 65.2229 272.347 68.5698 266.637 cv
70.389 263.534 li
72.5487 259.85 76.3875 257.729 80.3906 257.613 cv
80.5058 257.61 80.6217 257.608 80.7372 257.608 cv
80.8527 257.608 80.9681 257.61 81.0837 257.613 cv
77.0806 257.729 73.2418 259.85 71.0821 263.534 cv
69.263 266.637 li
65.916 272.347 67.8306 279.689 73.5396 283.037 cv
134.268 318.651 li
136.573 320.003 139.099 320.682 141.608 320.739 cv
141.493 320.742 141.377 320.743 141.262 320.743 cv
142.068 274.762 mo
141.517 274.48 li
192.241 174.108 li
178.836 171.831 li
178.91 171.726 li
192.934 174.108 li
142.068 274.762 li
272.609 249.535 mo
272.493 249.535 272.377 249.533 272.262 249.53 cv
268.652 249.437 265.096 247.892 262.537 244.975 cv
247.963 222.25 li
248.32 221.727 li
263.23 244.975 li
265.789 247.892 269.345 249.437 272.955 249.53 cv
272.84 249.533 272.724 249.535 272.609 249.535 cv
297.398 209.931 mo
297.271 209.672 li
311.388 203.221 li
313.766 201.308 316.598 200.339 319.43 200.266 cv
319.546 200.263 319.661 200.262 319.777 200.262 cv
319.892 200.262 320.008 200.263 320.123 200.266 cv
317.291 200.339 314.459 201.308 312.082 203.221 cv
297.398 209.931 li
124.711 204.205 mo
124.596 204.205 124.48 204.204 124.365 204.2 cv
122.053 204.134 119.735 203.398 117.716 201.943 cv
117.518 201.801 li
112.138 197.925 110.928 190.416 114.818 185.046 cv
139.171 151.429 li
142.926 146.246 148.891 143.156 155.25 143.047 cv
155.366 143.045 155.481 143.044 155.597 143.044 cv
155.712 143.044 155.828 143.045 155.944 143.047 cv
149.584 143.156 143.619 146.246 139.864 151.429 cv
115.511 185.046 li
111.621 190.416 112.831 197.925 118.211 201.801 cv
118.409 201.943 li
120.428 203.398 122.746 204.134 125.058 204.2 cv
124.942 204.204 124.827 204.205 124.711 204.205 cv
233.504 144.189 mo
232.791 144.173 li
226.151 138.93 221.891 130.81 221.891 121.693 cv
221.891 105.997 234.522 93.2511 250.173 93.0652 cv
250.289 93.0638 250.404 93.0631 250.52 93.0631 cv
250.636 93.0631 250.751 93.0638 250.866 93.0652 cv
235.215 93.2511 222.584 105.997 222.584 121.693 cv
222.584 130.818 226.853 138.946 233.504 144.189 cv
f
254.997 378.937 mo
254.882 378.937 254.766 378.935 254.65 378.933 cv
252.598 378.887 250.523 378.437 248.535 377.538 cv
240.635 373.964 240.701 356.762 240.701 356.762 cv
240.452 292.655 li
209.432 271.856 li
209.51 271.752 209.587 271.649 209.664 271.546 cv
241.145 292.655 li
241.394 356.762 li
241.394 356.762 241.328 373.964 249.228 377.538 cv
251.216 378.437 253.291 378.887 255.344 378.933 cv
255.228 378.935 255.113 378.937 254.997 378.937 cv
141.955 320.743 mo
141.839 320.743 141.724 320.742 141.608 320.739 cv
139.099 320.682 136.573 320.003 134.268 318.651 cv
73.5396 283.037 li
67.8306 279.689 65.916 272.347 69.263 266.637 cv
71.0821 263.534 li
73.2418 259.85 77.0806 257.729 81.0837 257.613 cv
81.1989 257.61 81.3148 257.608 81.4303 257.608 cv
81.5458 257.608 81.6611 257.61 81.7767 257.613 cv
77.7736 257.729 73.9348 259.85 71.7752 263.534 cv
69.956 266.637 li
66.609 272.347 68.5237 279.689 74.2326 283.037 cv
134.961 318.651 li
137.266 320.003 139.792 320.682 142.302 320.739 cv
142.186 320.742 142.07 320.743 141.955 320.743 cv
142.619 275.044 mo
142.068 274.762 li
192.934 174.108 li
178.91 171.726 li
178.985 171.621 li
193.627 174.108 li
142.619 275.044 li
273.302 249.535 mo
273.186 249.535 273.07 249.533 272.955 249.53 cv
269.345 249.437 265.789 247.892 263.23 244.975 cv
248.32 221.727 li
248.678 221.205 li
263.924 244.975 li
266.482 247.892 270.038 249.437 273.648 249.53 cv
273.533 249.533 273.417 249.535 273.302 249.535 cv
297.524 210.19 mo
297.398 209.931 li
312.082 203.221 li
314.459 201.308 317.291 200.339 320.123 200.266 cv
320.239 200.263 320.354 200.262 320.47 200.262 cv
320.586 200.262 320.701 200.263 320.817 200.266 cv
317.984 200.339 315.152 201.308 312.775 203.221 cv
297.524 210.19 li
125.404 204.205 mo
125.289 204.205 125.173 204.204 125.058 204.2 cv
122.746 204.134 120.428 203.398 118.409 201.943 cv
118.211 201.801 li
112.831 197.925 111.621 190.416 115.511 185.046 cv
139.864 151.429 li
143.619 146.246 149.584 143.156 155.944 143.047 cv
156.059 143.045 156.174 143.044 156.29 143.044 cv
156.405 143.044 156.521 143.045 156.637 143.047 cv
150.277 143.156 144.312 146.246 140.557 151.429 cv
116.204 185.046 li
112.314 190.416 113.524 197.925 118.904 201.801 cv
119.102 201.943 li
121.121 203.398 123.439 204.134 125.751 204.2 cv
125.635 204.204 125.52 204.205 125.404 204.205 cv
234.216 144.204 mo
233.504 144.189 li
226.853 138.946 222.584 130.818 222.584 121.693 cv
222.584 105.997 235.215 93.2511 250.866 93.0652 cv
250.982 93.0638 251.097 93.0631 251.213 93.0631 cv
251.329 93.0631 251.444 93.0638 251.559 93.0652 cv
235.908 93.2511 223.277 105.997 223.277 121.693 cv
223.277 130.827 227.555 138.962 234.216 144.204 cv
f
255.69 378.937 mo
255.575 378.937 255.459 378.935 255.344 378.933 cv
253.291 378.887 251.216 378.437 249.228 377.538 cv
241.328 373.964 241.394 356.762 241.394 356.762 cv
241.145 292.655 li
209.664 271.546 li
209.742 271.443 209.819 271.34 209.896 271.237 cv
241.839 292.655 li
242.087 356.762 li
242.087 356.762 242.021 373.964 249.921 377.538 cv
251.909 378.437 253.985 378.887 256.037 378.933 cv
255.921 378.935 255.806 378.937 255.69 378.937 cv
142.648 320.743 mo
142.533 320.743 142.417 320.742 142.302 320.739 cv
139.792 320.682 137.266 320.003 134.961 318.651 cv
74.2326 283.037 li
68.5237 279.689 66.609 272.347 69.956 266.637 cv
71.7752 263.534 li
73.9348 259.85 77.7736 257.729 81.7767 257.613 cv
81.892 257.61 82.0078 257.608 82.1233 257.608 cv
82.2388 257.608 82.3542 257.61 82.4698 257.613 cv
78.4666 257.729 74.6279 259.85 72.4682 263.534 cv
70.6491 266.637 li
67.302 272.347 69.2167 279.689 74.9257 283.037 cv
135.654 318.651 li
137.959 320.003 140.485 320.682 142.995 320.739 cv
142.879 320.742 142.764 320.743 142.648 320.743 cv
143.169 275.326 mo
142.619 275.044 li
193.627 174.108 li
178.985 171.621 li
179.06 171.516 li
194.32 174.108 li
143.169 275.326 li
273.995 249.535 mo
273.879 249.535 273.763 249.533 273.648 249.53 cv
270.038 249.437 266.482 247.892 263.924 244.975 cv
248.678 221.205 li
249.036 220.682 li
264.617 244.975 li
267.175 247.892 270.731 249.437 274.341 249.53 cv
274.226 249.533 274.11 249.535 273.995 249.535 cv
297.65 210.449 mo
297.524 210.19 li
312.775 203.221 li
315.152 201.308 317.984 200.339 320.817 200.266 cv
320.932 200.263 321.047 200.262 321.163 200.262 cv
321.279 200.262 321.394 200.263 321.51 200.266 cv
318.677 200.339 315.845 201.308 313.468 203.221 cv
297.65 210.449 li
126.097 204.205 mo
125.982 204.205 125.866 204.204 125.751 204.2 cv
123.439 204.134 121.121 203.398 119.102 201.943 cv
118.904 201.801 li
113.524 197.925 112.314 190.416 116.204 185.046 cv
140.557 151.429 li
144.312 146.246 150.277 143.156 156.637 143.047 cv
156.752 143.045 156.867 143.044 156.983 143.044 cv
157.098 143.044 157.214 143.045 157.33 143.047 cv
150.971 143.156 145.005 146.246 141.25 151.429 cv
116.897 185.046 li
113.007 190.416 114.217 197.925 119.597 201.801 cv
119.795 201.943 li
121.814 203.398 124.132 204.134 126.444 204.2 cv
126.328 204.204 126.213 204.205 126.097 204.205 cv
234.929 144.22 mo
234.216 144.204 li
227.555 138.962 223.277 130.827 223.277 121.693 cv
223.277 105.997 235.908 93.2511 251.559 93.0652 cv
251.675 93.0638 251.79 93.0631 251.906 93.0631 cv
252.022 93.0631 252.137 93.0638 252.253 93.0652 cv
236.601 93.2511 223.97 105.997 223.97 121.693 cv
223.97 130.836 228.257 138.978 234.929 144.22 cv
f
256.383 378.937 mo
256.268 378.937 256.152 378.935 256.037 378.933 cv
253.985 378.887 251.909 378.437 249.921 377.538 cv
242.021 373.964 242.087 356.762 242.087 356.762 cv
241.839 292.655 li
209.896 271.237 li
209.974 271.134 210.051 271.031 210.128 270.928 cv
242.532 292.655 li
242.781 356.762 li
242.781 356.762 242.714 373.964 250.614 377.538 cv
252.602 378.437 254.678 378.887 256.73 378.933 cv
256.614 378.935 256.499 378.937 256.383 378.937 cv
143.341 320.743 mo
143.226 320.743 143.11 320.742 142.995 320.739 cv
140.485 320.682 137.959 320.003 135.654 318.651 cv
74.9257 283.037 li
69.2167 279.689 67.302 272.347 70.6491 266.637 cv
72.4682 263.534 li
74.6279 259.85 78.4666 257.729 82.4698 257.613 cv
82.585 257.61 82.7009 257.608 82.8164 257.608 cv
82.9319 257.608 83.0473 257.61 83.1629 257.613 cv
79.1598 257.729 75.3211 259.85 73.1613 263.534 cv
71.3422 266.637 li
67.9952 272.347 69.9098 279.689 75.6188 283.037 cv
136.348 318.651 li
138.653 320.003 141.178 320.682 143.688 320.739 cv
143.572 320.742 143.457 320.743 143.341 320.743 cv
143.72 275.608 mo
143.169 275.326 li
194.32 174.108 li
179.06 171.516 li
179.134 171.411 li
195.013 174.108 li
143.72 275.608 li
274.688 249.535 mo
274.572 249.535 274.456 249.533 274.341 249.53 cv
270.731 249.437 267.175 247.892 264.617 244.975 cv
249.036 220.682 li
249.394 220.159 li
265.31 244.975 li
267.868 247.892 271.424 249.437 275.034 249.53 cv
274.919 249.533 274.803 249.535 274.688 249.535 cv
297.776 210.708 mo
297.65 210.449 li
313.468 203.221 li
315.845 201.308 318.677 200.339 321.51 200.266 cv
321.625 200.263 321.74 200.262 321.856 200.262 cv
321.972 200.262 322.087 200.263 322.203 200.266 cv
319.371 200.339 316.539 201.308 314.161 203.221 cv
297.776 210.708 li
126.79 204.205 mo
126.675 204.205 126.559 204.204 126.444 204.2 cv
124.132 204.134 121.814 203.398 119.795 201.943 cv
119.597 201.801 li
114.217 197.925 113.007 190.416 116.897 185.046 cv
141.25 151.429 li
145.005 146.246 150.971 143.156 157.33 143.047 cv
157.445 143.045 157.56 143.044 157.676 143.044 cv
157.791 143.044 157.907 143.045 158.023 143.047 cv
151.664 143.156 145.698 146.246 141.943 151.429 cv
117.591 185.046 li
113.7 190.416 114.91 197.925 120.291 201.801 cv
120.488 201.943 li
122.507 203.398 124.825 204.134 127.137 204.2 cv
127.021 204.204 126.906 204.205 126.79 204.205 cv
235.642 144.235 mo
234.929 144.22 li
228.257 138.978 223.97 130.836 223.97 121.693 cv
223.97 105.997 236.601 93.2511 252.253 93.0652 cv
252.368 93.0638 252.483 93.0631 252.599 93.0631 cv
252.715 93.0631 252.83 93.0638 252.946 93.0652 cv
237.294 93.2511 224.663 105.997 224.663 121.693 cv
224.663 130.845 228.957 138.994 235.642 144.235 cv
.929412 .929412 .929412 rgb
f
257.076 378.937 mo
256.961 378.937 256.845 378.935 256.73 378.933 cv
254.678 378.887 252.602 378.437 250.614 377.538 cv
242.714 373.964 242.781 356.762 242.781 356.762 cv
242.532 292.655 li
210.128 270.928 li
210.206 270.825 210.284 270.722 210.361 270.62 cv
243.225 292.655 li
243.474 356.762 li
243.474 356.762 243.407 373.964 251.307 377.538 cv
253.295 378.437 255.371 378.887 257.423 378.933 cv
257.307 378.935 257.192 378.937 257.076 378.937 cv
144.034 320.743 mo
143.919 320.743 143.803 320.742 143.688 320.739 cv
141.178 320.682 138.653 320.003 136.348 318.651 cv
75.6188 283.037 li
69.9098 279.689 67.9952 272.347 71.3422 266.637 cv
73.1613 263.534 li
75.3211 259.85 79.1598 257.729 83.1629 257.613 cv
83.2781 257.61 83.394 257.608 83.5095 257.608 cv
83.625 257.608 83.7403 257.61 83.8559 257.613 cv
79.8528 257.729 76.0141 259.85 73.8544 263.534 cv
72.0353 266.637 li
68.6884 272.347 70.6029 279.689 76.3119 283.037 cv
137.041 318.651 li
139.346 320.003 141.871 320.682 144.381 320.739 cv
144.265 320.742 144.15 320.743 144.034 320.743 cv
144.27 275.89 mo
143.72 275.608 li
195.013 174.108 li
179.134 171.411 li
179.209 171.306 li
195.706 174.108 li
144.27 275.89 li
275.381 249.535 mo
275.265 249.535 275.15 249.533 275.034 249.53 cv
271.424 249.437 267.868 247.892 265.31 244.975 cv
249.394 220.159 li
249.752 219.636 li
266.003 244.975 li
268.561 247.892 272.117 249.437 275.727 249.53 cv
275.612 249.533 275.496 249.535 275.381 249.535 cv
297.903 210.967 mo
297.776 210.708 li
314.161 203.221 li
316.539 201.308 319.371 200.339 322.203 200.266 cv
322.318 200.263 322.434 200.262 322.549 200.262 cv
322.665 200.262 322.78 200.263 322.896 200.266 cv
320.064 200.339 317.232 201.308 314.854 203.221 cv
297.903 210.967 li
127.484 204.205 mo
127.368 204.205 127.253 204.204 127.137 204.2 cv
124.825 204.134 122.507 203.398 120.488 201.943 cv
120.291 201.801 li
114.91 197.925 113.7 190.416 117.591 185.046 cv
141.943 151.429 li
145.698 146.246 151.664 143.156 158.023 143.047 cv
158.138 143.045 158.254 143.044 158.369 143.044 cv
158.485 143.044 158.6 143.045 158.716 143.047 cv
152.357 143.156 146.391 146.246 142.636 151.429 cv
118.284 185.046 li
114.393 190.416 115.603 197.925 120.983 201.801 cv
121.181 201.943 li
123.2 203.398 125.518 204.134 127.83 204.2 cv
127.715 204.204 127.599 204.205 127.484 204.205 cv
236.354 144.251 mo
235.642 144.235 li
228.957 138.994 224.663 130.845 224.663 121.693 cv
224.663 105.997 237.294 93.2511 252.946 93.0652 cv
253.061 93.0638 253.176 93.0631 253.292 93.0631 cv
253.408 93.0631 253.523 93.0638 253.639 93.0652 cv
237.987 93.2511 225.356 105.997 225.356 121.693 cv
225.356 130.854 229.659 139.01 236.354 144.251 cv
f
257.769 378.937 mo
257.654 378.937 257.538 378.935 257.423 378.933 cv
255.371 378.887 253.295 378.437 251.307 377.538 cv
243.407 373.964 243.474 356.762 243.474 356.762 cv
243.225 292.655 li
210.361 270.62 li
210.439 270.516 210.517 270.413 210.594 270.311 cv
243.918 292.655 li
244.167 356.762 li
244.167 356.762 244.1 373.964 252 377.538 cv
253.988 378.437 256.064 378.887 258.116 378.933 cv
258 378.935 257.885 378.937 257.769 378.937 cv
144.727 320.743 mo
144.612 320.743 144.496 320.742 144.381 320.739 cv
141.871 320.682 139.346 320.003 137.041 318.651 cv
76.3119 283.037 li
70.6029 279.689 68.6884 272.347 72.0353 266.637 cv
73.8544 263.534 li
76.0141 259.85 79.8528 257.729 83.8559 257.613 cv
83.9712 257.61 84.087 257.608 84.2025 257.608 cv
84.318 257.608 84.4334 257.61 84.549 257.613 cv
80.5459 257.729 76.7072 259.85 74.5474 263.534 cv
72.7283 266.637 li
69.3813 272.347 71.2959 279.689 77.0049 283.037 cv
137.734 318.651 li
140.039 320.003 142.564 320.682 145.074 320.739 cv
144.958 320.742 144.843 320.743 144.727 320.743 cv
144.821 276.172 mo
144.27 275.89 li
195.706 174.108 li
179.209 171.306 li
179.283 171.201 li
196.399 174.108 li
144.821 276.172 li
276.074 249.535 mo
275.958 249.535 275.843 249.533 275.727 249.53 cv
272.117 249.437 268.561 247.892 266.003 244.975 cv
249.752 219.636 li
250.109 219.113 li
266.696 244.975 li
269.254 247.892 272.81 249.437 276.42 249.53 cv
276.305 249.533 276.189 249.535 276.074 249.535 cv
298.029 211.226 mo
297.903 210.967 li
314.854 203.221 li
317.232 201.308 320.064 200.339 322.896 200.266 cv
323.011 200.263 323.127 200.262 323.242 200.262 cv
323.358 200.262 323.473 200.263 323.589 200.266 cv
320.757 200.339 317.925 201.308 315.547 203.221 cv
298.029 211.226 li
128.177 204.205 mo
128.061 204.205 127.946 204.204 127.83 204.2 cv
125.518 204.134 123.2 203.398 121.181 201.943 cv
120.983 201.801 li
115.603 197.925 114.393 190.416 118.284 185.046 cv
142.636 151.429 li
146.391 146.246 152.357 143.156 158.716 143.047 cv
158.831 143.045 158.947 143.044 159.062 143.044 cv
159.178 143.044 159.293 143.045 159.409 143.047 cv
153.05 143.156 147.084 146.246 143.329 151.429 cv
118.977 185.046 li
115.086 190.416 116.296 197.925 121.677 201.801 cv
121.874 201.943 li
123.893 203.398 126.211 204.134 128.523 204.2 cv
128.408 204.204 128.292 204.205 128.177 204.205 cv
237.067 144.266 mo
236.354 144.251 li
229.659 139.01 225.356 130.854 225.356 121.693 cv
225.356 105.997 237.987 93.2511 253.639 93.0652 cv
253.754 93.0638 253.869 93.0631 253.985 93.0631 cv
254.101 93.0631 254.216 93.0638 254.332 93.0652 cv
238.68 93.2511 226.049 105.997 226.049 121.693 cv
226.049 130.863 230.361 139.026 237.067 144.266 cv
f
258.462 378.937 mo
258.347 378.937 258.231 378.935 258.116 378.933 cv
256.064 378.887 253.988 378.437 252 377.538 cv
244.1 373.964 244.167 356.762 244.167 356.762 cv
243.918 292.655 li
210.594 270.311 li
210.671 270.208 210.75 270.104 210.827 270.003 cv
244.611 292.655 li
244.86 356.762 li
244.86 356.762 244.793 373.964 252.694 377.538 cv
254.681 378.437 256.757 378.887 258.809 378.933 cv
258.693 378.935 258.578 378.937 258.462 378.937 cv
145.42 320.743 mo
145.305 320.743 145.189 320.742 145.074 320.739 cv
142.564 320.682 140.039 320.003 137.734 318.651 cv
77.0049 283.037 li
71.2959 279.689 69.3813 272.347 72.7283 266.637 cv
74.5474 263.534 li
76.7072 259.85 80.5459 257.729 84.549 257.613 cv
84.6642 257.61 84.7802 257.608 84.8956 257.608 cv
85.0111 257.608 85.1265 257.61 85.2421 257.613 cv
81.2389 257.729 77.4002 259.85 75.2405 263.534 cv
73.4213 266.637 li
70.0744 272.347 71.989 279.689 77.698 283.037 cv
138.427 318.651 li
140.732 320.003 143.257 320.682 145.767 320.739 cv
145.652 320.742 145.536 320.743 145.42 320.743 cv
145.372 276.454 mo
144.821 276.172 li
196.399 174.108 li
179.283 171.201 li
179.358 171.096 li
197.092 174.108 li
145.372 276.454 li
276.767 249.535 mo
276.652 249.535 276.536 249.533 276.42 249.53 cv
272.81 249.437 269.254 247.892 266.696 244.975 cv
250.109 219.113 li
250.467 218.591 li
267.389 244.975 li
269.947 247.892 273.503 249.437 277.113 249.53 cv
276.998 249.533 276.882 249.535 276.767 249.535 cv
298.155 211.485 mo
298.029 211.226 li
315.547 203.221 li
317.925 201.308 320.757 200.339 323.589 200.266 cv
323.704 200.263 323.82 200.262 323.935 200.262 cv
324.051 200.262 324.166 200.263 324.282 200.266 cv
321.45 200.339 318.618 201.308 316.24 203.221 cv
298.155 211.485 li
128.87 204.205 mo
128.754 204.205 128.639 204.204 128.523 204.2 cv
126.211 204.134 123.893 203.398 121.874 201.943 cv
121.677 201.801 li
116.296 197.925 115.086 190.416 118.977 185.046 cv
143.329 151.429 li
147.084 146.246 153.05 143.156 159.409 143.047 cv
159.524 143.045 159.64 143.044 159.755 143.044 cv
159.871 143.044 159.986 143.045 160.102 143.047 cv
153.743 143.156 147.777 146.246 144.022 151.429 cv
119.67 185.046 li
115.779 190.416 116.989 197.925 122.37 201.801 cv
122.567 201.943 li
124.586 203.398 126.904 204.134 129.216 204.2 cv
129.101 204.204 128.985 204.205 128.87 204.205 cv
254.815 150.322 mo
254.806 150.316 li
254.879 150.318 254.952 150.319 255.025 150.32 cv
254.955 150.321 254.885 150.321 254.815 150.322 cv
237.78 144.282 mo
237.067 144.266 li
230.361 139.026 226.049 130.863 226.049 121.693 cv
226.049 105.997 238.68 93.2511 254.332 93.0652 cv
254.447 93.0638 254.562 93.0631 254.678 93.0631 cv
254.794 93.0631 254.909 93.0638 255.025 93.0652 cv
239.373 93.2511 226.742 105.997 226.742 121.693 cv
226.742 130.872 231.062 139.042 237.78 144.282 cv
f
259.156 378.937 mo
259.04 378.937 258.925 378.935 258.809 378.933 cv
256.757 378.887 254.681 378.437 252.694 377.538 cv
244.793 373.964 244.86 356.762 244.86 356.762 cv
244.611 292.655 li
210.827 270.003 li
210.905 269.899 210.982 269.797 211.06 269.694 cv
245.304 292.655 li
245.553 356.762 li
245.553 356.762 245.486 373.964 253.387 377.538 cv
255.374 378.437 257.45 378.887 259.502 378.933 cv
259.387 378.935 259.271 378.937 259.156 378.937 cv
146.113 320.743 mo
145.998 320.743 145.882 320.742 145.767 320.739 cv
143.257 320.682 140.732 320.003 138.427 318.651 cv
77.698 283.037 li
71.989 279.689 70.0744 272.347 73.4213 266.637 cv
75.2405 263.534 li
77.4002 259.85 81.2389 257.729 85.2421 257.613 cv
85.3573 257.61 85.4732 257.608 85.5887 257.608 cv
85.7041 257.608 85.8195 257.61 85.9352 257.613 cv
81.9324 257.729 78.0931 259.85 75.9336 263.534 cv
74.1145 266.637 li
70.7675 272.347 72.6821 279.689 78.3911 283.037 cv
139.12 318.651 li
141.425 320.003 143.95 320.682 146.46 320.739 cv
146.345 320.742 146.229 320.743 146.113 320.743 cv
145.922 276.736 mo
145.372 276.454 li
197.092 174.108 li
179.358 171.096 li
179.432 170.991 li
197.785 174.108 li
145.922 276.736 li
277.46 249.535 mo
277.345 249.535 277.229 249.533 277.113 249.53 cv
273.503 249.437 269.947 247.892 267.389 244.975 cv
250.467 218.591 li
250.825 218.068 li
268.082 244.975 li
270.641 247.892 274.196 249.437 277.807 249.53 cv
277.691 249.533 277.575 249.535 277.46 249.535 cv
298.281 211.744 mo
298.155 211.485 li
316.24 203.221 li
318.618 201.308 321.45 200.339 324.282 200.266 cv
324.397 200.263 324.513 200.262 324.628 200.262 cv
324.744 200.262 324.859 200.263 324.975 200.266 cv
322.143 200.339 319.311 201.308 316.933 203.221 cv
298.281 211.744 li
129.563 204.205 mo
129.447 204.205 129.332 204.204 129.216 204.2 cv
126.904 204.134 124.586 203.398 122.567 201.943 cv
122.37 201.801 li
116.989 197.925 115.779 190.416 119.67 185.046 cv
144.022 151.429 li
147.777 146.246 153.743 143.156 160.102 143.047 cv
160.217 143.045 160.333 143.044 160.448 143.044 cv
160.564 143.044 160.68 143.045 160.795 143.047 cv
154.436 143.156 148.47 146.246 144.715 151.429 cv
120.363 185.046 li
116.473 190.416 117.683 197.925 123.063 201.801 cv
123.26 201.943 li
125.279 203.398 127.597 204.134 129.909 204.2 cv
129.794 204.204 129.678 204.205 129.563 204.205 cv
255.371 150.322 mo
255.256 150.322 255.14 150.321 255.025 150.32 cv
254.952 150.319 254.879 150.318 254.806 150.316 cv
254.766 150.293 li
255.082 150.307 255.399 150.316 255.718 150.32 cv
255.602 150.321 255.487 150.322 255.371 150.322 cv
238.493 144.297 mo
237.78 144.282 li
231.062 139.042 226.742 130.872 226.742 121.693 cv
226.742 105.997 239.373 93.2511 255.025 93.0652 cv
255.14 93.0638 255.256 93.0631 255.371 93.0631 cv
255.487 93.0631 255.602 93.0638 255.718 93.0652 cv
240.066 93.2511 227.435 105.997 227.435 121.693 cv
227.435 130.881 231.764 139.059 238.493 144.297 cv
.92549 .92549 .92549 rgb
f
259.849 378.937 mo
259.733 378.937 259.618 378.935 259.502 378.933 cv
257.45 378.887 255.374 378.437 253.387 377.538 cv
245.486 373.964 245.553 356.762 245.553 356.762 cv
245.304 292.655 li
211.06 269.694 li
211.138 269.591 211.216 269.488 211.293 269.386 cv
245.997 292.655 li
246.246 356.762 li
246.246 356.762 246.179 373.964 254.08 377.538 cv
256.067 378.437 258.143 378.887 260.195 378.933 cv
260.08 378.935 259.964 378.937 259.849 378.937 cv
146.806 320.743 mo
146.691 320.743 146.576 320.742 146.46 320.739 cv
143.95 320.682 141.425 320.003 139.12 318.651 cv
78.3911 283.037 li
72.6821 279.689 70.7675 272.347 74.1145 266.637 cv
75.9336 263.534 li
78.0931 259.85 81.9324 257.729 85.9352 257.613 cv
86.0508 257.61 86.166 257.608 86.2818 257.608 cv
86.3973 257.608 86.5126 257.61 86.6283 257.613 cv
82.6251 257.729 78.7863 259.85 76.6265 263.534 cv
74.8075 266.637 li
71.4605 272.347 73.375 279.689 79.0841 283.037 cv
139.813 318.651 li
142.118 320.003 144.644 320.682 147.153 320.739 cv
147.038 320.742 146.922 320.743 146.806 320.743 cv
146.473 277.018 mo
145.922 276.736 li
197.785 174.108 li
179.432 170.991 li
179.507 170.886 li
198.478 174.108 li
146.473 277.018 li
278.153 249.535 mo
278.038 249.535 277.922 249.533 277.807 249.53 cv
274.196 249.437 270.641 247.892 268.082 244.975 cv
250.825 218.068 li
251.183 217.545 li
268.775 244.975 li
271.333 247.892 274.889 249.437 278.5 249.53 cv
278.384 249.533 278.269 249.535 278.153 249.535 cv
298.408 212.003 mo
298.281 211.744 li
316.933 203.221 li
319.311 201.308 322.143 200.339 324.975 200.266 cv
325.091 200.263 325.206 200.262 325.322 200.262 cv
325.437 200.262 325.553 200.263 325.668 200.266 cv
322.836 200.339 320.004 201.308 317.626 203.221 cv
298.408 212.003 li
130.256 204.205 mo
130.14 204.205 130.025 204.204 129.909 204.2 cv
127.597 204.134 125.279 203.398 123.26 201.943 cv
123.063 201.801 li
117.683 197.925 116.473 190.416 120.363 185.046 cv
144.715 151.429 li
148.47 146.246 154.436 143.156 160.795 143.047 cv
160.91 143.045 161.026 143.044 161.142 143.044 cv
161.257 143.044 161.373 143.045 161.488 143.047 cv
155.129 143.156 149.163 146.246 145.409 151.429 cv
121.056 185.046 li
117.166 190.416 118.375 197.925 123.756 201.801 cv
123.953 201.943 li
125.972 203.398 128.29 204.134 130.602 204.2 cv
130.487 204.204 130.372 204.205 130.256 204.205 cv
256.065 150.322 mo
255.949 150.322 255.833 150.321 255.718 150.32 cv
255.399 150.316 255.082 150.307 254.766 150.293 cv
254.691 150.248 li
255.26 150.289 255.834 150.313 256.411 150.32 cv
256.296 150.321 256.18 150.322 256.065 150.322 cv
239.206 144.312 mo
238.493 144.297 li
231.764 139.059 227.435 130.881 227.435 121.693 cv
227.435 105.997 240.066 93.2511 255.718 93.0652 cv
255.833 93.0638 255.949 93.0631 256.065 93.0631 cv
256.18 93.0631 256.296 93.0638 256.411 93.0652 cv
240.759 93.2511 228.128 105.997 228.128 121.693 cv
228.128 130.891 232.465 139.075 239.206 144.312 cv
f
260.542 378.937 mo
260.426 378.937 260.311 378.935 260.195 378.933 cv
258.143 378.887 256.067 378.437 254.08 377.538 cv
246.179 373.964 246.246 356.762 246.246 356.762 cv
245.997 292.655 li
211.293 269.386 li
211.371 269.283 211.45 269.18 211.527 269.078 cv
246.69 292.655 li
246.939 356.762 li
246.939 356.762 246.872 373.964 254.773 377.538 cv
256.76 378.437 258.836 378.887 260.888 378.933 cv
260.773 378.935 260.657 378.937 260.542 378.937 cv
147.5 320.743 mo
147.384 320.743 147.269 320.742 147.153 320.739 cv
144.644 320.682 142.118 320.003 139.813 318.651 cv
79.0841 283.037 li
73.375 279.689 71.4605 272.347 74.8075 266.637 cv
76.6265 263.534 li
78.7863 259.85 82.6251 257.729 86.6283 257.613 cv
86.7435 257.61 86.8593 257.608 86.9748 257.608 cv
87.0903 257.608 87.2057 257.61 87.3213 257.613 cv
83.3181 257.729 79.4794 259.85 77.3197 263.534 cv
75.5006 266.637 li
72.1535 272.347 74.0682 279.689 79.7772 283.037 cv
140.506 318.651 li
142.811 320.003 145.337 320.682 147.846 320.739 cv
147.731 320.742 147.615 320.743 147.5 320.743 cv
147.023 277.299 mo
146.473 277.018 li
198.478 174.108 li
179.507 170.886 li
179.581 170.781 li
199.171 174.108 li
147.023 277.299 li
278.846 249.535 mo
278.731 249.535 278.615 249.533 278.5 249.53 cv
274.889 249.437 271.333 247.892 268.775 244.975 cv
251.183 217.545 li
251.54 217.022 li
269.468 244.975 li
272.027 247.892 275.583 249.437 279.193 249.53 cv
279.077 249.533 278.962 249.535 278.846 249.535 cv
298.534 212.262 mo
298.408 212.003 li
317.626 203.221 li
320.004 201.308 322.836 200.339 325.668 200.266 cv
325.784 200.263 325.899 200.262 326.014 200.262 cv
326.13 200.262 326.246 200.263 326.361 200.266 cv
323.529 200.339 320.697 201.308 318.319 203.221 cv
298.534 212.262 li
130.949 204.205 mo
130.833 204.205 130.718 204.204 130.602 204.2 cv
128.29 204.134 125.972 203.398 123.953 201.943 cv
123.756 201.801 li
118.375 197.925 117.166 190.416 121.056 185.046 cv
145.409 151.429 li
149.163 146.246 155.129 143.156 161.488 143.047 cv
161.604 143.045 161.719 143.044 161.835 143.044 cv
161.95 143.044 162.066 143.045 162.181 143.047 cv
155.822 143.156 149.856 146.246 146.102 151.429 cv
121.749 185.046 li
117.859 190.416 119.069 197.925 124.449 201.801 cv
124.646 201.943 li
126.666 203.398 128.983 204.134 131.296 204.2 cv
131.18 204.204 131.065 204.205 130.949 204.205 cv
256.757 150.322 mo
256.642 150.322 256.526 150.321 256.411 150.32 cv
255.834 150.313 255.26 150.289 254.691 150.248 cv
254.574 150.179 li
255.407 150.262 256.251 150.31 257.104 150.32 cv
256.989 150.321 256.873 150.322 256.757 150.322 cv
239.919 144.328 mo
239.206 144.312 li
232.465 139.075 228.128 130.891 228.128 121.693 cv
228.128 105.997 240.759 93.2511 256.411 93.0652 cv
256.526 93.0638 256.642 93.0631 256.757 93.0631 cv
256.873 93.0631 256.989 93.0638 257.104 93.0652 cv
241.452 93.2511 228.821 105.997 228.821 121.693 cv
228.821 130.899 233.167 139.091 239.919 144.328 cv
f
261.235 378.937 mo
261.119 378.937 261.004 378.935 260.888 378.933 cv
258.836 378.887 256.76 378.437 254.773 377.538 cv
246.872 373.964 246.939 356.762 246.939 356.762 cv
246.69 292.655 li
211.527 269.078 li
211.606 268.975 211.684 268.872 211.761 268.771 cv
247.383 292.655 li
247.632 356.762 li
247.632 356.762 247.565 373.964 255.466 377.538 cv
257.454 378.437 259.529 378.887 261.581 378.933 cv
261.466 378.935 261.35 378.937 261.235 378.937 cv
148.193 320.743 mo
148.077 320.743 147.962 320.742 147.846 320.739 cv
145.337 320.682 142.811 320.003 140.506 318.651 cv
79.7772 283.037 li
74.0682 279.689 72.1535 272.347 75.5006 266.637 cv
77.3197 263.534 li
79.4794 259.85 83.3181 257.729 87.3213 257.613 cv
87.4365 257.61 87.5524 257.608 87.6679 257.608 cv
87.7834 257.608 87.8988 257.61 88.0144 257.613 cv
84.0113 257.729 80.1725 259.85 78.0128 263.534 cv
76.1937 266.637 li
72.8467 272.347 74.7612 279.689 80.4703 283.037 cv
141.199 318.651 li
143.504 320.003 146.03 320.682 148.539 320.739 cv
148.424 320.742 148.308 320.743 148.193 320.743 cv
147.574 277.581 mo
147.023 277.299 li
199.171 174.108 li
179.581 170.781 li
179.656 170.676 li
199.864 174.108 li
147.574 277.581 li
279.539 249.535 mo
279.424 249.535 279.308 249.533 279.193 249.53 cv
275.583 249.437 272.027 247.892 269.468 244.975 cv
251.54 217.022 li
251.898 216.499 li
270.161 244.975 li
272.72 247.892 276.276 249.437 279.886 249.53 cv
279.77 249.533 279.655 249.535 279.539 249.535 cv
298.66 212.521 mo
298.534 212.262 li
318.319 203.221 li
320.697 201.308 323.529 200.339 326.361 200.266 cv
326.477 200.263 326.592 200.262 326.708 200.262 cv
326.823 200.262 326.939 200.263 327.054 200.266 cv
324.222 200.339 321.39 201.308 319.012 203.221 cv
298.66 212.521 li
131.642 204.205 mo
131.527 204.205 131.411 204.204 131.296 204.2 cv
128.983 204.134 126.666 203.398 124.646 201.943 cv
124.449 201.801 li
119.069 197.925 117.859 190.416 121.749 185.046 cv
146.102 151.429 li
149.856 146.246 155.822 143.156 162.181 143.047 cv
162.297 143.045 162.412 143.044 162.528 143.044 cv
162.643 143.044 162.759 143.045 162.874 143.047 cv
156.515 143.156 150.549 146.246 146.795 151.429 cv
122.442 185.046 li
118.552 190.416 119.762 197.925 125.142 201.801 cv
125.339 201.943 li
127.359 203.398 129.676 204.134 131.989 204.2 cv
131.987 204.2 131.986 204.2 131.984 204.2 cv
131.87 204.204 131.756 204.205 131.642 204.205 cv
257.451 150.322 mo
257.335 150.322 257.22 150.321 257.104 150.32 cv
256.251 150.31 255.407 150.262 254.574 150.179 cv
254.406 150.08 li
255.518 150.225 256.649 150.306 257.797 150.32 cv
257.682 150.321 257.566 150.322 257.451 150.322 cv
240.632 144.343 mo
239.919 144.328 li
233.167 139.091 228.821 130.899 228.821 121.693 cv
228.821 105.997 241.452 93.2511 257.104 93.0652 cv
257.22 93.0638 257.335 93.0631 257.451 93.0631 cv
257.566 93.0631 257.682 93.0638 257.797 93.0652 cv
242.145 93.2511 229.514 105.997 229.514 121.693 cv
229.514 130.908 233.869 139.107 240.632 144.343 cv
f
261.928 378.937 mo
261.812 378.937 261.697 378.935 261.581 378.933 cv
259.529 378.887 257.454 378.437 255.466 377.538 cv
247.565 373.964 247.632 356.762 247.632 356.762 cv
247.383 292.655 li
211.761 268.771 li
211.84 268.667 211.918 268.565 211.996 268.463 cv
248.076 292.655 li
248.325 356.762 li
248.325 356.762 248.258 373.964 256.159 377.538 cv
258.146 378.437 260.222 378.887 262.274 378.933 cv
262.159 378.935 262.044 378.937 261.928 378.937 cv
148.886 320.743 mo
148.77 320.743 148.655 320.742 148.539 320.739 cv
146.03 320.682 143.504 320.003 141.199 318.651 cv
80.4703 283.037 li
74.7612 279.689 72.8467 272.347 76.1937 266.637 cv
78.0128 263.534 li
80.1725 259.85 84.0113 257.729 88.0144 257.613 cv
88.1296 257.61 88.2455 257.608 88.361 257.608 cv
88.4765 257.608 88.5918 257.61 88.7074 257.613 cv
84.7043 257.729 80.8655 259.85 78.7058 263.534 cv
76.8867 266.637 li
73.5397 272.347 75.4543 279.689 81.1633 283.037 cv
141.892 318.651 li
144.197 320.003 146.723 320.682 149.232 320.739 cv
149.117 320.742 149.001 320.743 148.886 320.743 cv
148.125 277.863 mo
147.574 277.581 li
199.864 174.108 li
179.656 170.676 li
179.731 170.57 li
200.557 174.108 li
148.125 277.863 li
280.232 249.535 mo
280.117 249.535 280.001 249.533 279.886 249.53 cv
276.276 249.437 272.72 247.892 270.161 244.975 cv
251.898 216.499 li
252.256 215.977 li
270.854 244.975 li
273.413 247.892 276.969 249.437 280.579 249.53 cv
280.463 249.533 280.348 249.535 280.232 249.535 cv
298.786 212.78 mo
298.66 212.521 li
319.012 203.221 li
321.39 201.308 324.222 200.339 327.054 200.266 cv
327.17 200.263 327.285 200.262 327.401 200.262 cv
327.516 200.262 327.632 200.263 327.747 200.266 cv
324.915 200.339 322.083 201.308 319.705 203.221 cv
298.786 212.78 li
132.335 204.205 mo
132.22 204.205 132.104 204.204 131.989 204.2 cv
129.676 204.134 127.359 203.398 125.339 201.943 cv
125.142 201.801 li
119.762 197.925 118.552 190.416 122.442 185.046 cv
146.795 151.429 li
150.549 146.246 156.515 143.156 162.874 143.047 cv
162.99 143.045 163.105 143.044 163.221 143.044 cv
163.336 143.044 163.452 143.045 163.567 143.047 cv
157.208 143.156 151.242 146.246 147.488 151.429 cv
123.135 185.046 li
119.245 190.416 120.455 197.925 125.835 201.801 cv
126.032 201.943 li
128.052 203.398 130.369 204.134 132.682 204.2 cv
132.68 204.2 132.679 204.2 132.677 204.2 cv
132.563 204.204 132.449 204.205 132.335 204.205 cv
258.144 150.322 mo
258.028 150.322 257.913 150.321 257.797 150.32 cv
256.649 150.306 255.518 150.225 254.406 150.08 cv
254.176 149.944 li
255.582 150.175 257.024 150.302 258.49 150.32 cv
258.375 150.321 258.259 150.322 258.144 150.322 cv
241.345 144.359 mo
240.632 144.343 li
233.869 139.107 229.514 130.908 229.514 121.693 cv
229.514 105.997 242.145 93.2511 257.797 93.0652 cv
257.913 93.0638 258.028 93.0631 258.144 93.0631 cv
258.259 93.0631 258.375 93.0638 258.49 93.0652 cv
242.838 93.2511 230.207 105.997 230.207 121.693 cv
230.207 130.918 234.57 139.123 241.345 144.359 cv
.921569 .921569 .921569 rgb
f
262.621 378.937 mo
262.505 378.937 262.39 378.935 262.274 378.933 cv
260.222 378.887 258.146 378.437 256.159 377.538 cv
248.258 373.964 248.325 356.762 248.325 356.762 cv
248.076 292.655 li
211.996 268.463 li
212.075 268.359 212.153 268.258 212.231 268.156 cv
248.769 292.655 li
249.018 356.762 li
249.018 356.762 248.952 373.964 256.852 377.538 cv
258.84 378.437 260.915 378.887 262.967 378.933 cv
262.852 378.935 262.737 378.937 262.621 378.937 cv
149.579 320.743 mo
149.463 320.743 149.348 320.742 149.232 320.739 cv
146.723 320.682 144.197 320.003 141.892 318.651 cv
81.1633 283.037 li
75.4543 279.689 73.5397 272.347 76.8867 266.637 cv
78.7058 263.534 li
80.8655 259.85 84.7043 257.729 88.7074 257.613 cv
88.8227 257.61 88.9385 257.608 89.054 257.608 cv
89.1694 257.608 89.2849 257.61 89.4005 257.613 cv
85.3977 257.729 81.5585 259.85 79.3989 263.534 cv
77.5798 266.637 li
74.2328 272.347 76.1474 279.689 81.8565 283.037 cv
142.585 318.651 li
144.89 320.003 147.416 320.682 149.925 320.739 cv
149.81 320.742 149.694 320.743 149.579 320.743 cv
148.675 278.145 mo
148.125 277.863 li
200.557 174.108 li
179.731 170.57 li
179.805 170.465 li
201.251 174.108 li
148.675 278.145 li
280.925 249.535 mo
280.81 249.535 280.694 249.533 280.579 249.53 cv
276.969 249.437 273.413 247.892 270.854 244.975 cv
252.256 215.977 li
252.614 215.454 li
271.547 244.975 li
274.106 247.892 277.662 249.437 281.272 249.53 cv
281.156 249.533 281.041 249.535 280.925 249.535 cv
298.912 213.039 mo
298.786 212.78 li
319.705 203.221 li
322.083 201.308 324.915 200.339 327.747 200.266 cv
327.863 200.263 327.978 200.262 328.094 200.262 cv
328.209 200.262 328.325 200.263 328.44 200.266 cv
325.608 200.339 322.776 201.308 320.398 203.221 cv
298.912 213.039 li
133.028 204.205 mo
132.913 204.205 132.797 204.204 132.682 204.2 cv
130.369 204.134 128.052 203.398 126.032 201.943 cv
125.835 201.801 li
120.455 197.925 119.245 190.416 123.135 185.046 cv
147.488 151.429 li
151.242 146.246 157.208 143.156 163.567 143.047 cv
163.683 143.045 163.798 143.044 163.914 143.044 cv
164.029 143.044 164.145 143.045 164.26 143.047 cv
157.901 143.156 151.936 146.246 148.181 151.429 cv
123.828 185.046 li
119.938 190.416 121.148 197.925 126.528 201.801 cv
126.726 201.943 li
128.745 203.398 131.063 204.134 133.375 204.2 cv
133.373 204.2 133.372 204.2 133.37 204.2 cv
133.256 204.204 133.142 204.205 133.028 204.205 cv
258.837 150.322 mo
258.721 150.322 258.606 150.321 258.49 150.32 cv
257.024 150.302 255.582 150.175 254.176 149.944 cv
253.867 149.762 li
255.589 150.107 257.365 150.298 259.183 150.32 cv
259.068 150.321 258.953 150.322 258.837 150.322 cv
242.058 144.374 mo
241.345 144.359 li
234.57 139.123 230.207 130.918 230.207 121.693 cv
230.207 105.997 242.838 93.2511 258.49 93.0652 cv
258.606 93.0638 258.721 93.0631 258.837 93.0631 cv
258.953 93.0631 259.068 93.0638 259.183 93.0652 cv
243.532 93.2511 230.9 105.997 230.9 121.693 cv
230.9 130.926 235.272 139.139 242.058 144.374 cv
f
263.314 378.937 mo
263.199 378.937 263.083 378.935 262.967 378.933 cv
260.915 378.887 258.84 378.437 256.852 377.538 cv
248.952 373.964 249.018 356.762 249.018 356.762 cv
248.769 292.655 li
212.231 268.156 li
212.309 268.053 212.388 267.95 212.466 267.849 cv
249.462 292.655 li
249.711 356.762 li
249.711 356.762 249.645 373.964 257.545 377.538 cv
259.533 378.437 261.608 378.887 263.66 378.933 cv
263.545 378.935 263.43 378.937 263.314 378.937 cv
150.272 320.743 mo
150.156 320.743 150.041 320.742 149.925 320.739 cv
147.416 320.682 144.89 320.003 142.585 318.651 cv
81.8565 283.037 li
76.1474 279.689 74.2328 272.347 77.5798 266.637 cv
79.3989 263.534 li
81.5585 259.85 85.3977 257.729 89.4005 257.613 cv
89.5161 257.61 89.6313 257.608 89.7471 257.608 cv
89.8626 257.608 89.978 257.61 90.0936 257.613 cv
86.0904 257.729 82.2517 259.85 80.092 263.534 cv
78.2729 266.637 li
74.9259 272.347 76.8405 279.689 82.5495 283.037 cv
143.278 318.651 li
145.583 320.003 148.109 320.682 150.618 320.739 cv
150.503 320.742 150.387 320.743 150.272 320.743 cv
149.226 278.427 mo
148.675 278.145 li
201.251 174.108 li
179.805 170.465 li
179.88 170.36 li
201.944 174.108 li
149.226 278.427 li
281.618 249.535 mo
281.503 249.535 281.387 249.533 281.272 249.53 cv
277.662 249.437 274.106 247.892 271.547 244.975 cv
252.614 215.454 li
252.971 214.931 li
272.24 244.975 li
274.799 247.892 278.355 249.437 281.965 249.53 cv
281.85 249.533 281.734 249.535 281.618 249.535 cv
299.039 213.298 mo
298.912 213.039 li
320.398 203.221 li
322.776 201.308 325.608 200.339 328.44 200.266 cv
328.556 200.263 328.671 200.262 328.787 200.262 cv
328.902 200.262 329.018 200.263 329.133 200.266 cv
326.301 200.339 323.469 201.308 321.091 203.221 cv
299.039 213.298 li
133.721 204.205 mo
133.606 204.205 133.49 204.204 133.375 204.2 cv
131.063 204.134 128.745 203.398 126.726 201.943 cv
126.528 201.801 li
121.148 197.925 119.938 190.416 123.828 185.046 cv
148.181 151.429 li
151.936 146.246 157.901 143.156 164.26 143.047 cv
164.376 143.045 164.491 143.044 164.607 143.044 cv
164.722 143.044 164.838 143.045 164.953 143.047 cv
158.594 143.156 152.629 146.246 148.874 151.429 cv
124.521 185.046 li
120.631 190.416 121.841 197.925 127.221 201.801 cv
127.419 201.943 li
129.438 203.398 131.756 204.134 134.068 204.2 cv
134.066 204.2 134.065 204.2 134.063 204.2 cv
133.949 204.204 133.835 204.205 133.721 204.205 cv
259.53 150.322 mo
259.414 150.322 259.299 150.321 259.183 150.32 cv
257.365 150.298 255.589 150.107 253.867 149.762 cv
253.452 149.516 li
255.515 150.017 257.666 150.294 259.876 150.32 cv
259.761 150.321 259.646 150.322 259.53 150.322 cv
242.771 144.39 mo
242.058 144.374 li
235.272 139.139 230.9 130.926 230.9 121.693 cv
230.9 105.997 243.532 93.2511 259.183 93.0652 cv
259.299 93.0638 259.414 93.0631 259.53 93.0631 cv
259.646 93.0631 259.761 93.0638 259.876 93.0652 cv
244.225 93.2511 231.594 105.997 231.594 121.693 cv
231.594 130.936 235.973 139.155 242.771 144.39 cv
f
264.007 378.937 mo
263.892 378.937 263.776 378.935 263.66 378.933 cv
261.608 378.887 259.533 378.437 257.545 377.538 cv
249.645 373.964 249.711 356.762 249.711 356.762 cv
249.462 292.655 li
212.466 267.849 li
212.545 267.745 212.623 267.644 212.701 267.542 cv
250.155 292.655 li
250.404 356.762 li
250.404 356.762 250.338 373.964 258.238 377.538 cv
260.226 378.437 262.301 378.887 264.353 378.933 cv
264.238 378.935 264.123 378.937 264.007 378.937 cv
150.965 320.743 mo
150.849 320.743 150.734 320.742 150.618 320.739 cv
148.109 320.682 145.583 320.003 143.278 318.651 cv
82.5495 283.037 li
76.8405 279.689 74.9259 272.347 78.2729 266.637 cv
80.092 263.534 li
82.2517 259.85 86.0904 257.729 90.0936 257.613 cv
90.2088 257.61 90.3247 257.608 90.4402 257.608 cv
90.5556 257.608 90.671 257.61 90.7866 257.613 cv
86.7835 257.729 82.9447 259.85 80.785 263.534 cv
78.9659 266.637 li
75.6189 272.347 77.5335 279.689 83.2425 283.037 cv
143.971 318.651 li
146.276 320.003 148.802 320.682 151.311 320.739 cv
151.196 320.742 151.08 320.743 150.965 320.743 cv
149.776 278.709 mo
149.226 278.427 li
201.944 174.108 li
179.88 170.36 li
179.954 170.255 li
202.637 174.108 li
149.776 278.709 li
282.311 249.535 mo
282.196 249.535 282.08 249.533 281.965 249.53 cv
278.355 249.437 274.799 247.892 272.24 244.975 cv
252.971 214.931 li
253.329 214.408 li
272.933 244.975 li
275.492 247.892 279.048 249.437 282.658 249.53 cv
282.543 249.533 282.427 249.535 282.311 249.535 cv
299.165 213.557 mo
299.039 213.298 li
321.091 203.221 li
323.469 201.308 326.301 200.339 329.133 200.266 cv
329.249 200.263 329.364 200.262 329.48 200.262 cv
329.595 200.262 329.711 200.263 329.826 200.266 cv
326.994 200.339 324.162 201.308 321.784 203.221 cv
299.165 213.557 li
134.414 204.205 mo
134.299 204.205 134.183 204.204 134.068 204.2 cv
131.756 204.134 129.438 203.398 127.419 201.943 cv
127.221 201.801 li
121.841 197.925 120.631 190.416 124.521 185.046 cv
148.874 151.429 li
152.629 146.246 158.594 143.156 164.953 143.047 cv
165.069 143.045 165.184 143.044 165.3 143.044 cv
165.415 143.044 165.531 143.045 165.646 143.047 cv
159.287 143.156 153.322 146.246 149.567 151.429 cv
125.214 185.046 li
121.324 190.416 122.534 197.925 127.914 201.801 cv
128.112 201.943 li
130.131 203.398 132.449 204.134 134.761 204.2 cv
134.759 204.2 134.758 204.2 134.756 204.2 cv
134.642 204.204 134.528 204.205 134.414 204.205 cv
260.223 150.322 mo
260.107 150.322 259.992 150.321 259.876 150.32 cv
257.666 150.294 255.515 150.017 253.452 149.516 cv
252.88 149.179 li
255.323 149.892 257.903 150.288 260.569 150.32 cv
260.454 150.321 260.339 150.322 260.223 150.322 cv
243.484 144.405 mo
242.771 144.39 li
235.973 139.155 231.594 130.936 231.594 121.693 cv
231.594 105.997 244.225 93.2511 259.876 93.0652 cv
259.992 93.0638 260.107 93.0631 260.223 93.0631 cv
260.339 93.0631 260.454 93.0638 260.569 93.0652 cv
244.918 93.2511 232.286 105.997 232.286 121.693 cv
232.286 130.945 236.675 139.172 243.484 144.405 cv
f
264.7 378.937 mo
264.585 378.937 264.469 378.935 264.353 378.933 cv
262.301 378.887 260.226 378.437 258.238 377.538 cv
250.338 373.964 250.404 356.762 250.404 356.762 cv
250.155 292.655 li
212.701 267.542 li
212.781 267.438 212.859 267.337 212.937 267.235 cv
250.848 292.655 li
251.097 356.762 li
251.097 356.762 251.031 373.964 258.931 377.538 cv
260.919 378.437 262.994 378.887 265.046 378.933 cv
264.931 378.935 264.816 378.937 264.7 378.937 cv
151.658 320.743 mo
151.542 320.743 151.427 320.742 151.311 320.739 cv
148.802 320.682 146.276 320.003 143.971 318.651 cv
83.2425 283.037 li
77.5335 279.689 75.6189 272.347 78.9659 266.637 cv
80.785 263.534 li
82.9447 259.85 86.7835 257.729 90.7866 257.613 cv
90.9019 257.61 91.0177 257.608 91.1332 257.608 cv
91.2487 257.608 91.3641 257.61 91.4797 257.613 cv
87.4766 257.729 83.6378 259.85 81.4781 263.534 cv
79.659 266.637 li
76.312 272.347 78.2266 279.689 83.9356 283.037 cv
144.664 318.651 li
146.969 320.003 149.495 320.682 152.005 320.739 cv
151.889 320.742 151.773 320.743 151.658 320.743 cv
150.327 278.991 mo
149.776 278.709 li
202.637 174.108 li
179.954 170.255 li
180.029 170.15 li
203.33 174.108 li
150.327 278.991 li
283.005 249.535 mo
282.889 249.535 282.773 249.533 282.658 249.53 cv
279.048 249.437 275.492 247.892 272.933 244.975 cv
253.329 214.408 li
253.687 213.885 li
273.626 244.975 li
276.185 247.892 279.741 249.437 283.351 249.53 cv
283.236 249.533 283.12 249.535 283.005 249.535 cv
299.291 213.816 mo
299.165 213.557 li
321.784 203.221 li
324.162 201.308 326.994 200.339 329.826 200.266 cv
329.942 200.263 330.057 200.262 330.173 200.262 cv
330.288 200.262 330.404 200.263 330.519 200.266 cv
327.687 200.339 324.855 201.308 322.478 203.221 cv
299.291 213.816 li
135.107 204.205 mo
134.992 204.205 134.876 204.204 134.761 204.2 cv
132.449 204.134 130.131 203.398 128.112 201.943 cv
127.914 201.801 li
122.534 197.925 121.324 190.416 125.214 185.046 cv
149.567 151.429 li
153.322 146.246 159.287 143.156 165.646 143.047 cv
165.762 143.045 165.877 143.044 165.993 143.044 cv
166.108 143.044 166.224 143.045 166.34 143.047 cv
159.98 143.156 154.015 146.246 150.26 151.429 cv
125.907 185.046 li
122.017 190.416 123.227 197.925 128.607 201.801 cv
128.805 201.943 li
130.824 203.398 133.142 204.134 135.454 204.2 cv
135.452 204.2 135.451 204.2 135.449 204.2 cv
135.335 204.204 135.221 204.205 135.107 204.205 cv
260.916 150.322 mo
260.8 150.322 260.685 150.321 260.569 150.32 cv
257.903 150.288 255.323 149.892 252.88 149.179 cv
252.044 148.685 li
254.932 149.709 258.033 150.281 261.262 150.32 cv
261.147 150.321 261.032 150.322 260.916 150.322 cv
244.198 144.421 mo
243.484 144.405 li
236.675 139.172 232.286 130.945 232.286 121.693 cv
232.286 105.997 244.918 93.2511 260.569 93.0652 cv
260.685 93.0638 260.8 93.0631 260.916 93.0631 cv
261.032 93.0631 261.147 93.0638 261.262 93.0652 cv
245.611 93.2511 232.98 105.997 232.98 121.693 cv
232.98 130.953 237.377 139.188 244.198 144.421 cv
.917647 .917647 .917647 rgb
f
265.393 378.937 mo
265.278 378.937 265.162 378.935 265.046 378.933 cv
262.994 378.887 260.919 378.437 258.931 377.538 cv
251.031 373.964 251.097 356.762 251.097 356.762 cv
250.848 292.655 li
212.937 267.235 li
213.016 267.132 213.095 267.03 213.173 266.929 cv
251.542 292.655 li
251.79 356.762 li
251.79 356.762 251.724 373.964 259.624 377.538 cv
261.612 378.437 263.688 378.887 265.74 378.933 cv
265.624 378.935 265.509 378.937 265.393 378.937 cv
152.351 320.743 mo
152.236 320.743 152.12 320.742 152.005 320.739 cv
149.495 320.682 146.969 320.003 144.664 318.651 cv
83.9356 283.037 li
78.2266 279.689 76.312 272.347 79.659 266.637 cv
81.4781 263.534 li
83.6378 259.85 87.4766 257.729 91.4797 257.613 cv
91.5949 257.61 91.7108 257.608 91.8263 257.608 cv
91.9418 257.608 92.0572 257.61 92.1728 257.613 cv
88.1696 257.729 84.3309 259.85 82.1712 263.534 cv
80.3521 266.637 li
77.0051 272.347 78.9197 279.689 84.6287 283.037 cv
145.357 318.651 li
147.662 320.003 150.188 320.682 152.698 320.739 cv
152.582 320.742 152.467 320.743 152.351 320.743 cv
150.878 279.273 mo
150.327 278.991 li
203.33 174.108 li
180.029 170.15 li
180.103 170.045 li
204.023 174.108 li
150.878 279.273 li
283.698 249.535 mo
283.582 249.535 283.466 249.533 283.351 249.53 cv
279.741 249.437 276.185 247.892 273.626 244.975 cv
253.687 213.885 li
254.045 213.363 li
274.32 244.975 li
276.878 247.892 280.434 249.437 284.044 249.53 cv
283.929 249.533 283.813 249.535 283.698 249.535 cv
299.417 214.075 mo
299.291 213.816 li
322.478 203.221 li
324.855 201.308 327.687 200.339 330.519 200.266 cv
330.635 200.263 330.75 200.262 330.866 200.262 cv
330.982 200.262 331.097 200.263 331.213 200.266 cv
328.38 200.339 325.548 201.308 323.171 203.221 cv
299.417 214.075 li
135.8 204.205 mo
135.685 204.205 135.569 204.204 135.454 204.2 cv
133.142 204.134 130.824 203.398 128.805 201.943 cv
128.607 201.801 li
123.227 197.925 122.017 190.416 125.907 185.046 cv
150.26 151.429 li
154.015 146.246 159.98 143.156 166.34 143.047 cv
166.455 143.045 166.57 143.044 166.686 143.044 cv
166.801 143.044 166.917 143.045 167.033 143.047 cv
160.674 143.156 154.708 146.246 150.953 151.429 cv
126.6 185.046 li
122.71 190.416 123.92 197.925 129.3 201.801 cv
129.498 201.943 li
131.517 203.398 133.835 204.134 136.147 204.2 cv
136.145 204.2 136.144 204.2 136.142 204.2 cv
136.029 204.204 135.914 204.205 135.8 204.205 cv
261.609 150.322 mo
261.493 150.322 261.378 150.321 261.262 150.32 cv
258.033 150.281 254.932 149.709 252.044 148.685 cv
250.576 147.818 li
254.056 149.382 257.905 150.272 261.956 150.32 cv
261.84 150.321 261.725 150.322 261.609 150.322 cv
245.125 144.599 mo
244.848 144.435 li
244.198 144.421 li
237.377 139.188 232.98 130.953 232.98 121.693 cv
232.98 105.997 245.611 93.2511 261.262 93.0652 cv
261.378 93.0638 261.493 93.0631 261.609 93.0631 cv
261.725 93.0631 261.84 93.0638 261.956 93.0652 cv
246.304 93.2511 233.673 105.997 233.673 121.693 cv
233.673 131.059 238.171 139.375 245.125 144.599 cv
f
266.086 378.937 mo
265.971 378.937 265.855 378.935 265.74 378.933 cv
263.688 378.887 261.612 378.437 259.624 377.538 cv
251.724 373.964 251.79 356.762 251.79 356.762 cv
251.542 292.655 li
213.173 266.929 li
213.252 266.826 213.332 266.723 213.41 266.623 cv
252.235 292.655 li
252.484 356.762 li
252.484 356.762 252.417 373.964 260.317 377.538 cv
262.305 378.437 264.381 378.887 266.433 378.933 cv
266.317 378.935 266.202 378.937 266.086 378.937 cv
153.044 320.743 mo
152.929 320.743 152.813 320.742 152.698 320.739 cv
150.188 320.682 147.662 320.003 145.357 318.651 cv
84.6287 283.037 li
78.9197 279.689 77.0051 272.347 80.3521 266.637 cv
82.1712 263.534 li
84.3309 259.85 88.1696 257.729 92.1728 257.613 cv
92.288 257.61 92.4039 257.608 92.5194 257.608 cv
92.6349 257.608 92.7503 257.61 92.8659 257.613 cv
88.8628 257.729 85.024 259.85 82.8644 263.534 cv
81.0452 266.637 li
77.6982 272.347 79.6127 279.689 85.3218 283.037 cv
146.051 318.651 li
148.355 320.003 150.881 320.682 153.391 320.739 cv
153.275 320.742 153.16 320.743 153.044 320.743 cv
151.428 279.555 mo
150.878 279.273 li
204.023 174.108 li
180.103 170.045 li
180.178 169.94 li
204.716 174.108 li
151.428 279.555 li
284.391 249.535 mo
284.275 249.535 284.16 249.533 284.044 249.53 cv
280.434 249.437 276.878 247.892 274.32 244.975 cv
254.045 213.363 li
254.402 212.84 li
275.013 244.975 li
277.571 247.892 281.127 249.437 284.737 249.53 cv
284.622 249.533 284.506 249.535 284.391 249.535 cv
299.544 214.334 mo
299.417 214.075 li
323.171 203.221 li
325.548 201.308 328.38 200.339 331.213 200.266 cv
331.328 200.263 331.444 200.262 331.559 200.262 cv
331.675 200.262 331.79 200.263 331.906 200.266 cv
329.074 200.339 326.242 201.308 323.864 203.221 cv
299.544 214.334 li
136.493 204.205 mo
136.378 204.205 136.262 204.204 136.147 204.2 cv
133.835 204.134 131.517 203.398 129.498 201.943 cv
129.3 201.801 li
123.92 197.925 122.71 190.416 126.6 185.046 cv
150.953 151.429 li
154.708 146.246 160.674 143.156 167.033 143.047 cv
167.148 143.045 167.263 143.044 167.379 143.044 cv
167.494 143.044 167.61 143.045 167.726 143.047 cv
161.367 143.156 155.401 146.246 151.646 151.429 cv
127.293 185.046 li
123.403 190.416 124.613 197.925 129.993 201.801 cv
130.191 201.943 li
132.21 203.398 134.528 204.134 136.84 204.2 cv
136.838 204.2 136.837 204.2 136.835 204.2 cv
136.722 204.204 136.607 204.205 136.493 204.205 cv
262.302 150.322 mo
262.186 150.322 262.071 150.321 261.956 150.32 cv
257.905 150.272 254.056 149.382 250.576 147.818 cv
245.125 144.599 li
238.171 139.375 233.673 131.059 233.673 121.693 cv
233.673 105.997 246.304 93.2511 261.956 93.0652 cv
262.071 93.0638 262.186 93.0631 262.302 93.0631 cv
262.418 93.0631 262.533 93.0638 262.649 93.0652 cv
246.997 93.2511 234.366 105.997 234.366 121.693 cv
234.366 137.388 246.997 150.134 262.649 150.32 cv
262.533 150.321 262.418 150.322 262.302 150.322 cv
f
266.779 378.937 mo
266.664 378.937 266.548 378.935 266.433 378.933 cv
264.381 378.887 262.305 378.437 260.317 377.538 cv
252.417 373.964 252.484 356.762 252.484 356.762 cv
252.235 292.655 li
213.41 266.623 li
213.49 266.52 213.569 266.418 213.647 266.318 cv
252.928 292.655 li
253.177 356.762 li
253.177 356.762 253.11 373.964 261.01 377.538 cv
262.998 378.437 265.074 378.887 267.126 378.933 cv
267.01 378.935 266.895 378.937 266.779 378.937 cv
153.737 320.743 mo
153.622 320.743 153.506 320.742 153.391 320.739 cv
150.881 320.682 148.355 320.003 146.051 318.651 cv
85.3218 283.037 li
79.6127 279.689 77.6982 272.347 81.0452 266.637 cv
82.8644 263.534 li
85.024 259.85 88.8628 257.729 92.8659 257.613 cv
92.9811 257.61 93.097 257.608 93.2125 257.608 cv
93.328 257.608 93.4433 257.61 93.5589 257.613 cv
89.5558 257.729 85.717 259.85 83.5573 263.534 cv
81.7382 266.637 li
78.3913 272.347 80.3058 279.689 86.0148 283.037 cv
146.744 318.651 li
149.049 320.003 151.574 320.682 154.084 320.739 cv
153.968 320.742 153.853 320.743 153.737 320.743 cv
151.979 279.837 mo
151.428 279.555 li
204.716 174.108 li
180.178 169.94 li
180.252 169.835 li
205.409 174.108 li
151.979 279.837 li
285.084 249.535 mo
284.968 249.535 284.853 249.533 284.737 249.53 cv
281.127 249.437 277.571 247.892 275.013 244.975 cv
254.402 212.84 li
254.76 212.317 li
275.706 244.975 li
278.264 247.892 281.82 249.437 285.43 249.53 cv
285.315 249.533 285.199 249.535 285.084 249.535 cv
299.67 214.593 mo
299.544 214.334 li
323.864 203.221 li
326.242 201.308 329.074 200.339 331.906 200.266 cv
332.021 200.263 332.137 200.262 332.252 200.262 cv
332.368 200.262 332.483 200.263 332.599 200.266 cv
329.767 200.339 326.935 201.308 324.557 203.221 cv
299.67 214.593 li
137.186 204.205 mo
137.071 204.205 136.955 204.204 136.84 204.2 cv
134.528 204.134 132.21 203.398 130.191 201.943 cv
129.993 201.801 li
124.613 197.925 123.403 190.416 127.293 185.046 cv
151.646 151.429 li
155.401 146.246 161.367 143.156 167.726 143.047 cv
167.841 143.045 167.957 143.044 168.072 143.044 cv
168.188 143.044 168.303 143.045 168.419 143.047 cv
162.06 143.156 156.094 146.246 152.339 151.429 cv
127.987 185.046 li
124.096 190.416 125.306 197.925 130.686 201.801 cv
130.884 201.943 li
132.903 203.398 135.221 204.134 137.533 204.2 cv
137.532 204.2 137.53 204.2 137.528 204.2 cv
137.414 204.204 137.301 204.205 137.186 204.205 cv
262.995 150.322 mo
262.879 150.322 262.764 150.321 262.649 150.32 cv
246.997 150.134 234.366 137.388 234.366 121.693 cv
234.366 105.997 246.997 93.2511 262.649 93.0652 cv
262.764 93.0638 262.879 93.0631 262.995 93.0631 cv
263.111 93.0631 263.226 93.0638 263.342 93.0652 cv
247.69 93.2511 235.059 105.997 235.059 121.693 cv
235.059 137.388 247.69 150.134 263.342 150.32 cv
263.226 150.321 263.111 150.322 262.995 150.322 cv
.913725 .913725 .913725 rgb
f
267.472 378.937 mo
267.357 378.937 267.241 378.935 267.126 378.933 cv
265.074 378.887 262.998 378.437 261.01 377.538 cv
253.11 373.964 253.177 356.762 253.177 356.762 cv
252.928 292.655 li
213.647 266.318 li
213.728 266.214 213.807 266.113 213.885 266.012 cv
253.621 292.655 li
253.87 356.762 li
253.87 356.762 253.803 373.964 261.703 377.538 cv
263.691 378.437 265.767 378.887 267.819 378.933 cv
267.703 378.935 267.588 378.937 267.472 378.937 cv
154.43 320.743 mo
154.315 320.743 154.199 320.742 154.084 320.739 cv
151.574 320.682 149.049 320.003 146.744 318.651 cv
86.0148 283.037 li
80.3058 279.689 78.3913 272.347 81.7382 266.637 cv
83.5573 263.534 li
85.717 259.85 89.5558 257.729 93.5589 257.613 cv
93.6742 257.61 93.79 257.608 93.9055 257.608 cv
94.021 257.608 94.1364 257.61 94.252 257.613 cv
90.2493 257.729 86.41 259.85 84.2504 263.534 cv
82.4313 266.637 li
79.0843 272.347 80.9989 279.689 86.7078 283.037 cv
147.437 318.651 li
149.742 320.003 152.267 320.682 154.777 320.739 cv
154.661 320.742 154.546 320.743 154.43 320.743 cv
152.529 280.119 mo
151.979 279.837 li
205.409 174.108 li
180.252 169.835 li
180.327 169.73 li
206.102 174.108 li
152.529 280.119 li
285.777 249.535 mo
285.661 249.535 285.546 249.533 285.43 249.53 cv
281.82 249.437 278.264 247.892 275.706 244.975 cv
254.76 212.317 li
255.118 211.794 li
276.399 244.975 li
278.957 247.892 282.513 249.437 286.123 249.53 cv
286.008 249.533 285.892 249.535 285.777 249.535 cv
299.796 214.852 mo
299.67 214.593 li
324.557 203.221 li
326.935 201.308 329.767 200.339 332.599 200.266 cv
332.714 200.263 332.83 200.262 332.945 200.262 cv
333.061 200.262 333.176 200.263 333.292 200.266 cv
330.46 200.339 327.628 201.308 325.25 203.221 cv
299.796 214.852 li
137.88 204.205 mo
137.764 204.205 137.649 204.204 137.533 204.2 cv
135.221 204.134 132.903 203.398 130.884 201.943 cv
130.686 201.801 li
125.306 197.925 124.096 190.416 127.987 185.046 cv
152.339 151.429 li
156.094 146.246 162.06 143.156 168.419 143.047 cv
168.534 143.045 168.65 143.044 168.765 143.044 cv
168.88 143.044 168.996 143.045 169.112 143.047 cv
162.753 143.156 156.787 146.246 153.032 151.429 cv
128.68 185.046 li
124.789 190.416 125.999 197.925 131.38 201.801 cv
131.577 201.943 li
133.596 203.398 135.914 204.134 138.226 204.2 cv
138.224 204.2 138.223 204.2 138.221 204.2 cv
138.108 204.204 137.993 204.205 137.88 204.205 cv
263.688 150.322 mo
263.572 150.322 263.457 150.321 263.342 150.32 cv
247.69 150.134 235.059 137.388 235.059 121.693 cv
235.059 105.997 247.69 93.2511 263.342 93.0652 cv
263.457 93.0638 263.572 93.0631 263.688 93.0631 cv
263.804 93.0631 263.919 93.0638 264.035 93.0652 cv
248.383 93.2511 235.752 105.997 235.752 121.693 cv
235.752 137.388 248.383 150.134 264.035 150.32 cv
263.919 150.321 263.804 150.322 263.688 150.322 cv
f
268.165 378.937 mo
268.05 378.937 267.934 378.935 267.819 378.933 cv
265.767 378.887 263.691 378.437 261.703 377.538 cv
253.803 373.964 253.87 356.762 253.87 356.762 cv
253.621 292.655 li
213.885 266.012 li
213.966 265.909 214.045 265.808 214.124 265.707 cv
254.314 292.655 li
254.563 356.762 li
254.563 356.762 254.496 373.964 262.397 377.538 cv
264.384 378.437 266.46 378.887 268.512 378.933 cv
268.396 378.935 268.281 378.937 268.165 378.937 cv
155.123 320.743 mo
155.008 320.743 154.892 320.742 154.777 320.739 cv
152.267 320.682 149.742 320.003 147.437 318.651 cv
86.7078 283.037 li
80.9989 279.689 79.0843 272.347 82.4313 266.637 cv
84.2504 263.534 li
86.41 259.85 90.2493 257.729 94.252 257.613 cv
94.3676 257.61 94.4828 257.608 94.5986 257.608 cv
94.7141 257.608 94.8295 257.61 94.9451 257.613 cv
90.942 257.729 87.1032 259.85 84.9435 263.534 cv
83.1244 266.637 li
79.7774 272.347 81.692 279.689 87.401 283.037 cv
148.13 318.651 li
150.435 320.003 152.96 320.682 155.47 320.739 cv
155.355 320.742 155.239 320.743 155.123 320.743 cv
153.08 280.401 mo
152.529 280.119 li
206.102 174.108 li
180.327 169.73 li
180.401 169.625 li
206.795 174.108 li
153.08 280.401 li
286.47 249.535 mo
286.355 249.535 286.239 249.533 286.123 249.53 cv
282.513 249.437 278.957 247.892 276.399 244.975 cv
255.118 211.794 li
255.476 211.271 li
277.092 244.975 li
279.65 247.892 283.206 249.437 286.816 249.53 cv
286.701 249.533 286.585 249.535 286.47 249.535 cv
299.922 215.111 mo
299.796 214.852 li
325.25 203.221 li
327.628 201.308 330.46 200.339 333.292 200.266 cv
333.407 200.263 333.523 200.262 333.638 200.262 cv
333.754 200.262 333.869 200.263 333.985 200.266 cv
331.153 200.339 328.321 201.308 325.943 203.221 cv
299.922 215.111 li
138.573 204.205 mo
138.457 204.205 138.342 204.204 138.226 204.2 cv
135.914 204.134 133.596 203.398 131.577 201.943 cv
131.38 201.801 li
125.999 197.925 124.789 190.416 128.68 185.046 cv
153.032 151.429 li
156.787 146.246 162.753 143.156 169.112 143.047 cv
169.227 143.045 169.343 143.044 169.458 143.044 cv
169.574 143.044 169.689 143.045 169.805 143.047 cv
163.446 143.156 157.48 146.246 153.725 151.429 cv
129.373 185.046 li
125.482 190.416 126.692 197.925 132.073 201.801 cv
132.27 201.943 li
134.289 203.398 136.607 204.134 138.919 204.2 cv
138.917 204.2 138.916 204.2 138.915 204.2 cv
138.801 204.204 138.686 204.205 138.573 204.205 cv
264.381 150.322 mo
264.265 150.322 264.15 150.321 264.035 150.32 cv
248.383 150.134 235.752 137.388 235.752 121.693 cv
235.752 105.997 248.383 93.2511 264.035 93.0652 cv
264.15 93.0638 264.265 93.0631 264.381 93.0631 cv
264.497 93.0631 264.612 93.0638 264.728 93.0652 cv
249.076 93.2511 236.445 105.997 236.445 121.693 cv
236.445 137.388 249.076 150.134 264.728 150.32 cv
264.612 150.321 264.497 150.322 264.381 150.322 cv
f
268.859 378.937 mo
268.743 378.937 268.627 378.935 268.512 378.933 cv
266.46 378.887 264.384 378.437 262.397 377.538 cv
254.496 373.964 254.563 356.762 254.563 356.762 cv
254.314 292.655 li
214.124 265.707 li
214.204 265.605 214.284 265.502 214.363 265.403 cv
255.007 292.655 li
255.256 356.762 li
255.256 356.762 255.189 373.964 263.09 377.538 cv
265.077 378.437 267.153 378.887 269.205 378.933 cv
269.089 378.935 268.974 378.937 268.859 378.937 cv
155.816 320.743 mo
155.701 320.743 155.585 320.742 155.47 320.739 cv
152.96 320.682 150.435 320.003 148.13 318.651 cv
87.401 283.037 li
81.692 279.689 79.7774 272.347 83.1244 266.637 cv
84.9435 263.534 li
87.1032 259.85 90.942 257.729 94.9451 257.613 cv
95.0603 257.61 95.1762 257.608 95.2917 257.608 cv
95.4072 257.608 95.5225 257.61 95.6381 257.613 cv
91.635 257.729 87.7962 259.85 85.6365 263.534 cv
83.8174 266.637 li
80.4704 272.347 82.385 279.689 88.094 283.037 cv
148.823 318.651 li
151.128 320.003 153.653 320.682 156.163 320.739 cv
156.048 320.742 155.932 320.743 155.816 320.743 cv
153.631 280.682 mo
153.08 280.401 li
206.795 174.108 li
180.401 169.625 li
180.476 169.52 li
207.488 174.108 li
153.631 280.682 li
287.163 249.535 mo
287.048 249.535 286.932 249.533 286.816 249.53 cv
283.206 249.437 279.65 247.892 277.092 244.975 cv
255.476 211.271 li
255.834 210.749 li
277.785 244.975 li
280.343 247.892 283.899 249.437 287.51 249.53 cv
287.394 249.533 287.278 249.535 287.163 249.535 cv
300.049 215.37 mo
299.922 215.111 li
325.943 203.221 li
328.321 201.308 331.153 200.339 333.985 200.266 cv
334.1 200.263 334.216 200.262 334.331 200.262 cv
334.447 200.262 334.562 200.263 334.678 200.266 cv
331.846 200.339 329.014 201.308 326.636 203.221 cv
300.049 215.37 li
139.266 204.205 mo
139.15 204.205 139.035 204.204 138.919 204.2 cv
136.607 204.134 134.289 203.398 132.27 201.943 cv
132.073 201.801 li
126.692 197.925 125.482 190.416 129.373 185.046 cv
153.725 151.429 li
157.48 146.246 163.446 143.156 169.805 143.047 cv
169.92 143.045 170.036 143.044 170.151 143.044 cv
170.267 143.044 170.383 143.045 170.498 143.047 cv
164.139 143.156 158.173 146.246 154.418 151.429 cv
130.066 185.046 li
126.176 190.416 127.385 197.925 132.766 201.801 cv
132.963 201.943 li
134.982 203.398 137.3 204.134 139.612 204.2 cv
139.61 204.2 139.61 204.2 139.608 204.2 cv
139.494 204.204 139.38 204.205 139.266 204.205 cv
265.074 150.322 mo
264.959 150.322 264.843 150.321 264.728 150.32 cv
249.076 150.134 236.445 137.388 236.445 121.693 cv
236.445 105.997 249.076 93.2511 264.728 93.0652 cv
264.843 93.0638 264.959 93.0631 265.074 93.0631 cv
265.19 93.0631 265.305 93.0638 265.421 93.0652 cv
249.769 93.2511 237.138 105.997 237.138 121.693 cv
237.138 137.388 249.769 150.134 265.421 150.32 cv
265.305 150.321 265.19 150.322 265.074 150.322 cv
f
269.552 378.937 mo
269.436 378.937 269.321 378.935 269.205 378.933 cv
267.153 378.887 265.077 378.437 263.09 377.538 cv
255.189 373.964 255.256 356.762 255.256 356.762 cv
255.007 292.655 li
214.363 265.403 li
214.444 265.3 214.524 265.199 214.602 265.099 cv
255.7 292.655 li
255.949 356.762 li
255.949 356.762 255.882 373.964 263.783 377.538 cv
265.77 378.437 267.846 378.887 269.898 378.933 cv
269.783 378.935 269.667 378.937 269.552 378.937 cv
156.509 320.743 mo
156.394 320.743 156.279 320.742 156.163 320.739 cv
153.653 320.682 151.128 320.003 148.823 318.651 cv
88.094 283.037 li
82.385 279.689 80.4704 272.347 83.8174 266.637 cv
85.6365 263.534 li
87.7962 259.85 91.635 257.729 95.6381 257.613 cv
95.7534 257.61 95.8692 257.608 95.9847 257.608 cv
96.1002 257.608 96.2156 257.61 96.3312 257.613 cv
92.3281 257.729 88.4893 259.85 86.3296 263.534 cv
84.5104 266.637 li
81.1635 272.347 83.0781 279.689 88.7871 283.037 cv
149.516 318.651 li
151.821 320.003 154.346 320.682 156.856 320.739 cv
156.741 320.742 156.625 320.743 156.509 320.743 cv
154.181 280.964 mo
153.631 280.682 li
207.488 174.108 li
180.476 169.52 li
180.551 169.415 li
208.181 174.108 li
154.181 280.964 li
287.856 249.535 mo
287.741 249.535 287.625 249.533 287.51 249.53 cv
283.899 249.437 280.343 247.892 277.785 244.975 cv
255.834 210.749 li
256.191 210.226 li
278.478 244.975 li
281.036 247.892 284.592 249.437 288.203 249.53 cv
288.087 249.533 287.971 249.535 287.856 249.535 cv
300.175 215.629 mo
300.049 215.37 li
326.636 203.221 li
329.014 201.308 331.846 200.339 334.678 200.266 cv
334.794 200.263 334.909 200.262 335.024 200.262 cv
335.14 200.262 335.255 200.263 335.371 200.266 cv
332.539 200.339 329.707 201.308 327.329 203.221 cv
300.175 215.629 li
139.959 204.205 mo
139.843 204.205 139.728 204.204 139.612 204.2 cv
137.3 204.134 134.982 203.398 132.963 201.943 cv
132.766 201.801 li
127.385 197.925 126.176 190.416 130.066 185.046 cv
154.418 151.429 li
158.173 146.246 164.139 143.156 170.498 143.047 cv
170.613 143.045 170.729 143.044 170.844 143.044 cv
170.96 143.044 171.076 143.045 171.191 143.047 cv
164.832 143.156 158.866 146.246 155.112 151.429 cv
130.759 185.046 li
126.869 190.416 128.078 197.925 133.459 201.801 cv
133.656 201.943 li
135.675 203.398 137.993 204.134 140.305 204.2 cv
140.303 204.2 140.303 204.2 140.301 204.2 cv
140.187 204.204 140.073 204.205 139.959 204.205 cv
265.767 150.322 mo
265.652 150.322 265.536 150.321 265.421 150.32 cv
249.769 150.134 237.138 137.388 237.138 121.693 cv
237.138 105.997 249.769 93.2511 265.421 93.0652 cv
265.536 93.0638 265.652 93.0631 265.767 93.0631 cv
265.883 93.0631 265.998 93.0638 266.114 93.0652 cv
250.462 93.2511 237.831 105.997 237.831 121.693 cv
237.831 137.388 250.462 150.134 266.114 150.32 cv
265.998 150.321 265.883 150.322 265.767 150.322 cv
.909804 .909804 .909804 rgb
f
270.245 378.937 mo
270.129 378.937 270.014 378.935 269.898 378.933 cv
267.846 378.887 265.77 378.437 263.783 377.538 cv
255.882 373.964 255.949 356.762 255.949 356.762 cv
255.7 292.655 li
214.602 265.099 li
214.684 264.996 214.764 264.895 214.843 264.796 cv
256.393 292.655 li
256.642 356.762 li
256.642 356.762 256.575 373.964 264.476 377.538 cv
266.463 378.437 268.539 378.887 270.591 378.933 cv
270.476 378.935 270.36 378.937 270.245 378.937 cv
157.203 320.743 mo
157.087 320.743 156.972 320.742 156.856 320.739 cv
154.346 320.682 151.821 320.003 149.516 318.651 cv
88.7871 283.037 li
83.0781 279.689 81.1635 272.347 84.5104 266.637 cv
86.3296 263.534 li
88.4893 259.85 92.3281 257.729 96.3312 257.613 cv
96.4464 257.61 96.5623 257.608 96.6778 257.608 cv
96.7933 257.608 96.9087 257.61 97.0243 257.613 cv
93.0212 257.729 89.1824 259.85 87.0227 263.534 cv
85.2036 266.637 li
81.8566 272.347 83.7712 279.689 89.4802 283.037 cv
150.209 318.651 li
152.514 320.003 155.04 320.682 157.549 320.739 cv
157.434 320.742 157.318 320.743 157.203 320.743 cv
154.732 281.246 mo
154.181 280.964 li
208.181 174.108 li
180.551 169.415 li
180.625 169.31 li
208.874 174.108 li
154.732 281.246 li
288.549 249.535 mo
288.434 249.535 288.318 249.533 288.203 249.53 cv
284.592 249.437 281.036 247.892 278.478 244.975 cv
256.191 210.226 li
256.549 209.703 li
279.171 244.975 li
281.73 247.892 285.286 249.437 288.896 249.53 cv
288.78 249.533 288.664 249.535 288.549 249.535 cv
300.301 215.888 mo
300.175 215.629 li
327.329 203.221 li
329.707 201.308 332.539 200.339 335.371 200.266 cv
335.487 200.263 335.602 200.262 335.717 200.262 cv
335.833 200.262 335.949 200.263 336.064 200.266 cv
333.232 200.339 330.4 201.308 328.022 203.221 cv
300.301 215.888 li
140.652 204.205 mo
140.536 204.205 140.421 204.204 140.305 204.2 cv
137.993 204.134 135.675 203.398 133.656 201.943 cv
133.459 201.801 li
128.078 197.925 126.869 190.416 130.759 185.046 cv
155.112 151.429 li
158.866 146.246 164.832 143.156 171.191 143.047 cv
171.306 143.045 171.422 143.044 171.537 143.044 cv
171.653 143.044 171.769 143.045 171.884 143.047 cv
165.525 143.156 159.559 146.246 155.805 151.429 cv
131.452 185.046 li
127.562 190.416 128.772 197.925 134.152 201.801 cv
134.349 201.943 li
136.369 203.398 138.686 204.134 140.998 204.2 cv
140.997 204.2 140.996 204.2 140.994 204.2 cv
140.88 204.204 140.766 204.205 140.652 204.205 cv
266.46 150.322 mo
266.345 150.322 266.229 150.321 266.114 150.32 cv
250.462 150.134 237.831 137.388 237.831 121.693 cv
237.831 105.997 250.462 93.2511 266.114 93.0652 cv
266.229 93.0638 266.345 93.0631 266.46 93.0631 cv
266.576 93.0631 266.692 93.0638 266.807 93.0652 cv
251.155 93.2511 238.524 105.997 238.524 121.693 cv
238.524 137.388 251.155 150.134 266.807 150.32 cv
266.692 150.321 266.576 150.322 266.46 150.322 cv
f
270.938 378.937 mo
270.822 378.937 270.707 378.935 270.591 378.933 cv
268.539 378.887 266.463 378.437 264.476 377.538 cv
256.575 373.964 256.642 356.762 256.642 356.762 cv
256.393 292.655 li
214.843 264.796 li
214.925 264.693 215.005 264.592 215.085 264.493 cv
257.086 292.655 li
257.335 356.762 li
257.335 356.762 257.268 373.964 265.169 377.538 cv
267.156 378.437 269.232 378.887 271.284 378.933 cv
271.169 378.935 271.053 378.937 270.938 378.937 cv
157.896 320.743 mo
157.78 320.743 157.665 320.742 157.549 320.739 cv
155.04 320.682 152.514 320.003 150.209 318.651 cv
89.4802 283.037 li
83.7712 279.689 81.8566 272.347 85.2036 266.637 cv
87.0227 263.534 li
89.1824 259.85 93.0212 257.729 97.0243 257.613 cv
97.1395 257.61 97.2554 257.608 97.3709 257.608 cv
97.4864 257.608 97.6017 257.61 97.7173 257.613 cv
93.7142 257.729 89.8754 259.85 87.7158 263.534 cv
85.8966 266.637 li
82.5496 272.347 84.4642 279.689 90.1732 283.037 cv
150.902 318.651 li
153.207 320.003 155.733 320.682 158.242 320.739 cv
158.127 320.742 158.011 320.743 157.896 320.743 cv
155.282 281.528 mo
154.732 281.246 li
208.874 174.108 li
180.625 169.31 li
180.7 169.205 li
209.567 174.108 li
155.282 281.528 li
289.242 249.535 mo
289.127 249.535 289.011 249.533 288.896 249.53 cv
285.286 249.437 281.73 247.892 279.171 244.975 cv
256.549 209.703 li
256.907 209.18 li
279.864 244.975 li
282.423 247.892 285.979 249.437 289.589 249.53 cv
289.473 249.533 289.358 249.535 289.242 249.535 cv
300.427 216.147 mo
300.301 215.888 li
328.022 203.221 li
330.4 201.308 333.232 200.339 336.064 200.266 cv
336.18 200.263 336.295 200.262 336.411 200.262 cv
336.526 200.262 336.642 200.263 336.757 200.266 cv
333.925 200.339 331.093 201.308 328.715 203.221 cv
300.427 216.147 li
141.345 204.205 mo
141.23 204.205 141.114 204.204 140.998 204.2 cv
138.686 204.134 136.369 203.398 134.349 201.943 cv
134.152 201.801 li
128.772 197.925 127.562 190.416 131.452 185.046 cv
155.805 151.429 li
159.559 146.246 165.525 143.156 171.884 143.047 cv
172 143.045 172.115 143.044 172.231 143.044 cv
172.346 143.044 172.462 143.045 172.577 143.047 cv
166.218 143.156 160.252 146.246 156.498 151.429 cv
132.145 185.046 li
128.255 190.416 129.465 197.925 134.845 201.801 cv
135.042 201.943 li
137.062 203.398 139.379 204.134 141.692 204.2 cv
141.69 204.2 141.689 204.2 141.687 204.2 cv
141.573 204.204 141.459 204.205 141.345 204.205 cv
267.154 150.322 mo
267.038 150.322 266.923 150.321 266.807 150.32 cv
251.155 150.134 238.524 137.388 238.524 121.693 cv
238.524 105.997 251.155 93.2511 266.807 93.0652 cv
266.923 93.0638 267.038 93.0631 267.154 93.0631 cv
267.269 93.0631 267.385 93.0638 267.5 93.0652 cv
251.848 93.2511 239.217 105.997 239.217 121.693 cv
239.217 137.388 251.848 150.134 267.5 150.32 cv
267.385 150.321 267.269 150.322 267.154 150.322 cv
f
271.631 378.937 mo
271.515 378.937 271.4 378.935 271.284 378.933 cv
269.232 378.887 267.156 378.437 265.169 377.538 cv
257.268 373.964 257.335 356.762 257.335 356.762 cv
257.086 292.655 li
215.085 264.493 li
215.167 264.391 215.248 264.289 215.327 264.191 cv
257.779 292.655 li
258.028 356.762 li
258.028 356.762 257.961 373.964 265.862 377.538 cv
267.849 378.437 269.925 378.887 271.977 378.933 cv
271.862 378.935 271.746 378.937 271.631 378.937 cv
158.589 320.743 mo
158.473 320.743 158.358 320.742 158.242 320.739 cv
155.733 320.682 153.207 320.003 150.902 318.651 cv
90.1732 283.037 li
84.4642 279.689 82.5496 272.347 85.8966 266.637 cv
87.7158 263.534 li
89.8754 259.85 93.7142 257.729 97.7173 257.613 cv
97.8326 257.61 97.9484 257.608 98.0639 257.608 cv
98.1794 257.608 98.2948 257.61 98.4104 257.613 cv
94.4072 257.729 90.5685 259.85 88.4088 263.534 cv
86.5897 266.637 li
83.2426 272.347 85.1573 279.689 90.8663 283.037 cv
151.595 318.651 li
153.9 320.003 156.426 320.682 158.935 320.739 cv
158.82 320.742 158.704 320.743 158.589 320.743 cv
155.833 281.81 mo
155.282 281.528 li
209.567 174.108 li
180.7 169.205 li
180.774 169.1 li
210.26 174.108 li
155.833 281.81 li
289.935 249.535 mo
289.82 249.535 289.704 249.533 289.589 249.53 cv
285.979 249.437 282.423 247.892 279.864 244.975 cv
256.907 209.18 li
257.265 208.657 li
280.557 244.975 li
283.116 247.892 286.672 249.437 290.282 249.53 cv
290.166 249.533 290.051 249.535 289.935 249.535 cv
300.554 216.406 mo
300.427 216.147 li
328.715 203.221 li
331.093 201.308 333.925 200.339 336.757 200.266 cv
336.873 200.263 336.988 200.262 337.104 200.262 cv
337.219 200.262 337.335 200.263 337.45 200.266 cv
334.618 200.339 331.786 201.308 329.408 203.221 cv
300.554 216.406 li
142.038 204.205 mo
141.923 204.205 141.807 204.204 141.692 204.2 cv
139.379 204.134 137.062 203.398 135.042 201.943 cv
134.845 201.801 li
129.465 197.925 128.255 190.416 132.145 185.046 cv
156.498 151.429 li
160.252 146.246 166.218 143.156 172.577 143.047 cv
172.693 143.045 172.808 143.044 172.924 143.044 cv
173.039 143.044 173.155 143.045 173.27 143.047 cv
166.911 143.156 160.945 146.246 157.191 151.429 cv
132.838 185.046 li
128.948 190.416 130.158 197.925 135.538 201.801 cv
135.735 201.943 li
137.755 203.398 140.072 204.134 142.385 204.2 cv
142.383 204.2 142.382 204.2 142.38 204.2 cv
142.266 204.204 142.152 204.205 142.038 204.205 cv
267.847 150.322 mo
267.731 150.322 267.616 150.321 267.5 150.32 cv
251.848 150.134 239.217 137.388 239.217 121.693 cv
239.217 105.997 251.848 93.2511 267.5 93.0652 cv
267.616 93.0638 267.731 93.0631 267.847 93.0631 cv
267.962 93.0631 268.078 93.0638 268.193 93.0652 cv
252.541 93.2511 239.91 105.997 239.91 121.693 cv
239.91 137.388 252.541 150.134 268.193 150.32 cv
268.078 150.321 267.962 150.322 267.847 150.322 cv
f
272.324 378.937 mo
272.208 378.937 272.093 378.935 271.977 378.933 cv
269.925 378.887 267.849 378.437 265.862 377.538 cv
257.961 373.964 258.028 356.762 258.028 356.762 cv
257.779 292.655 li
215.327 264.191 li
215.41 264.088 215.492 263.988 215.571 263.89 cv
258.472 292.655 li
258.721 356.762 li
258.721 356.762 258.654 373.964 266.555 377.538 cv
268.543 378.437 270.618 378.887 272.67 378.933 cv
272.555 378.935 272.44 378.937 272.324 378.937 cv
159.282 320.743 mo
159.166 320.743 159.051 320.742 158.935 320.739 cv
156.426 320.682 153.9 320.003 151.595 318.651 cv
90.8663 283.037 li
85.1573 279.689 83.2426 272.347 86.5897 266.637 cv
88.4088 263.534 li
90.5685 259.85 94.4072 257.729 98.4104 257.613 cv
98.5256 257.61 98.6415 257.608 98.757 257.608 cv
98.8725 257.608 98.9879 257.61 99.1035 257.613 cv
95.1004 257.729 91.2617 259.85 89.1019 263.534 cv
87.2828 266.637 li
83.9358 272.347 85.8504 279.689 91.5593 283.037 cv
152.288 318.651 li
154.593 320.003 157.119 320.682 159.628 320.739 cv
159.513 320.742 159.397 320.743 159.282 320.743 cv
156.384 282.092 mo
155.833 281.81 li
210.26 174.108 li
180.774 169.1 li
180.849 168.995 li
210.954 174.108 li
156.384 282.092 li
290.628 249.535 mo
290.513 249.535 290.397 249.533 290.282 249.53 cv
286.672 249.437 283.116 247.892 280.557 244.975 cv
257.265 208.657 li
257.622 208.135 li
281.25 244.975 li
283.809 247.892 287.365 249.437 290.975 249.53 cv
290.859 249.533 290.744 249.535 290.628 249.535 cv
300.68 216.665 mo
300.554 216.406 li
329.408 203.221 li
331.786 201.308 334.618 200.339 337.45 200.266 cv
337.566 200.263 337.681 200.262 337.797 200.262 cv
337.912 200.262 338.028 200.263 338.143 200.266 cv
335.311 200.339 332.479 201.308 330.101 203.221 cv
300.68 216.665 li
142.731 204.205 mo
142.616 204.205 142.5 204.204 142.385 204.2 cv
140.072 204.134 137.755 203.398 135.735 201.943 cv
135.538 201.801 li
130.158 197.925 128.948 190.416 132.838 185.046 cv
157.191 151.429 li
160.945 146.246 166.911 143.156 173.27 143.047 cv
173.386 143.045 173.501 143.044 173.617 143.044 cv
173.732 143.044 173.848 143.045 173.963 143.047 cv
167.604 143.156 161.638 146.246 157.884 151.429 cv
133.531 185.046 li
129.641 190.416 130.851 197.925 136.231 201.801 cv
136.429 201.943 li
138.448 203.398 140.766 204.134 143.078 204.2 cv
143.076 204.2 143.075 204.2 143.073 204.2 cv
142.959 204.204 142.845 204.205 142.731 204.205 cv
268.54 150.322 mo
268.424 150.322 268.309 150.321 268.193 150.32 cv
252.541 150.134 239.91 137.388 239.91 121.693 cv
239.91 105.997 252.541 93.2511 268.193 93.0652 cv
268.309 93.0638 268.424 93.0631 268.54 93.0631 cv
268.656 93.0631 268.771 93.0638 268.886 93.0652 cv
253.234 93.2511 240.603 105.997 240.603 121.693 cv
240.603 137.388 253.234 150.134 268.886 150.32 cv
268.771 150.321 268.656 150.322 268.54 150.322 cv
.905882 .905882 .905882 rgb
f
273.017 378.937 mo
272.902 378.937 272.786 378.935 272.67 378.933 cv
270.618 378.887 268.543 378.437 266.555 377.538 cv
258.654 373.964 258.721 356.762 258.721 356.762 cv
258.472 292.655 li
215.571 263.89 li
215.655 263.787 215.737 263.687 215.817 263.59 cv
259.165 292.655 li
259.414 356.762 li
259.414 356.762 259.347 373.964 267.248 377.538 cv
269.236 378.437 271.311 378.887 273.363 378.933 cv
273.248 378.935 273.133 378.937 273.017 378.937 cv
159.975 320.743 mo
159.859 320.743 159.744 320.742 159.628 320.739 cv
157.119 320.682 154.593 320.003 152.288 318.651 cv
91.5593 283.037 li
85.8504 279.689 83.9358 272.347 87.2828 266.637 cv
89.1019 263.534 li
91.2617 259.85 95.1004 257.729 99.1035 257.613 cv
99.2187 257.61 99.3346 257.608 99.4501 257.608 cv
99.5656 257.608 99.6809 257.61 99.7965 257.613 cv
95.7934 257.729 91.9546 259.85 89.7949 263.534 cv
87.9758 266.637 li
84.6288 272.347 86.5434 279.689 92.2524 283.037 cv
152.981 318.651 li
155.286 320.003 157.812 320.682 160.321 320.739 cv
160.206 320.742 160.09 320.743 159.975 320.743 cv
156.934 282.374 mo
156.384 282.092 li
210.954 174.108 li
180.849 168.995 li
180.923 168.89 li
211.646 174.108 li
156.934 282.374 li
291.321 249.535 mo
291.206 249.535 291.09 249.533 290.975 249.53 cv
287.365 249.437 283.809 247.892 281.25 244.975 cv
257.622 208.135 li
257.98 207.612 li
281.943 244.975 li
284.502 247.892 288.058 249.437 291.668 249.53 cv
291.553 249.533 291.437 249.535 291.321 249.535 cv
300.806 216.924 mo
300.68 216.665 li
330.101 203.221 li
332.479 201.308 335.311 200.339 338.143 200.266 cv
338.259 200.263 338.374 200.262 338.49 200.262 cv
338.605 200.262 338.721 200.263 338.836 200.266 cv
336.004 200.339 333.172 201.308 330.794 203.221 cv
300.806 216.924 li
143.424 204.205 mo
143.309 204.205 143.193 204.204 143.078 204.2 cv
140.766 204.134 138.448 203.398 136.429 201.943 cv
136.231 201.801 li
130.851 197.925 129.641 190.416 133.531 185.046 cv
157.884 151.429 li
161.638 146.246 167.604 143.156 173.963 143.047 cv
174.079 143.045 174.194 143.044 174.31 143.044 cv
174.425 143.044 174.541 143.045 174.656 143.047 cv
168.297 143.156 162.331 146.246 158.577 151.429 cv
134.224 185.046 li
130.334 190.416 131.544 197.925 136.924 201.801 cv
137.121 201.943 li
139.141 203.398 141.459 204.134 143.771 204.2 cv
143.769 204.2 143.768 204.2 143.766 204.2 cv
143.652 204.204 143.538 204.205 143.424 204.205 cv
269.233 150.322 mo
269.117 150.322 269.002 150.321 268.886 150.32 cv
253.234 150.134 240.603 137.388 240.603 121.693 cv
240.603 105.997 253.234 93.2511 268.886 93.0652 cv
269.002 93.0638 269.117 93.0631 269.233 93.0631 cv
269.349 93.0631 269.464 93.0638 269.579 93.0652 cv
253.928 93.2511 241.296 105.997 241.296 121.693 cv
241.296 137.388 253.928 150.134 269.579 150.32 cv
269.464 150.321 269.349 150.322 269.233 150.322 cv
f
273.71 378.937 mo
273.595 378.937 273.479 378.935 273.363 378.933 cv
271.311 378.887 269.236 378.437 267.248 377.538 cv
259.347 373.964 259.414 356.762 259.414 356.762 cv
259.165 292.655 li
215.817 263.59 li
215.901 263.487 215.983 263.387 216.064 263.291 cv
259.858 292.655 li
260.107 356.762 li
260.107 356.762 260.041 373.964 267.941 377.538 cv
269.929 378.437 272.004 378.887 274.056 378.933 cv
273.941 378.935 273.826 378.937 273.71 378.937 cv
160.668 320.743 mo
160.552 320.743 160.437 320.742 160.321 320.739 cv
157.812 320.682 155.286 320.003 152.981 318.651 cv
92.2524 283.037 li
86.5434 279.689 84.6288 272.347 87.9758 266.637 cv
89.7949 263.534 li
91.9546 259.85 95.7934 257.729 99.7965 257.613 cv
99.9118 257.61 100.028 257.608 100.143 257.608 cv
100.259 257.608 100.374 257.61 100.49 257.613 cv
96.4868 257.729 92.6476 259.85 90.488 263.534 cv
88.6689 266.637 li
85.3219 272.347 87.2365 279.689 92.9455 283.037 cv
153.674 318.651 li
155.979 320.003 158.505 320.682 161.014 320.739 cv
160.899 320.742 160.783 320.743 160.668 320.743 cv
157.485 282.656 mo
156.934 282.374 li
211.646 174.108 li
180.923 168.89 li
180.998 168.785 li
212.34 174.108 li
157.485 282.656 li
292.014 249.535 mo
291.899 249.535 291.783 249.533 291.668 249.53 cv
288.058 249.437 284.502 247.892 281.943 244.975 cv
257.98 207.612 li
258.338 207.089 li
282.636 244.975 li
285.195 247.892 288.751 249.437 292.361 249.53 cv
292.246 249.533 292.13 249.535 292.014 249.535 cv
300.932 217.183 mo
300.806 216.924 li
330.794 203.221 li
333.172 201.308 336.004 200.339 338.836 200.266 cv
338.952 200.263 339.067 200.262 339.183 200.262 cv
339.298 200.262 339.414 200.263 339.529 200.266 cv
336.697 200.339 333.865 201.308 331.487 203.221 cv
300.932 217.183 li
144.117 204.205 mo
144.002 204.205 143.886 204.204 143.771 204.2 cv
141.459 204.134 139.141 203.398 137.121 201.943 cv
136.924 201.801 li
131.544 197.925 130.334 190.416 134.224 185.046 cv
158.577 151.429 li
162.331 146.246 168.297 143.156 174.656 143.047 cv
174.772 143.045 174.887 143.044 175.003 143.044 cv
175.118 143.044 175.234 143.045 175.349 143.047 cv
168.99 143.156 163.025 146.246 159.27 151.429 cv
134.917 185.046 li
131.027 190.416 132.237 197.925 137.617 201.801 cv
137.815 201.943 li
139.834 203.398 142.152 204.134 144.464 204.2 cv
144.462 204.2 144.461 204.2 144.459 204.2 cv
144.345 204.204 144.231 204.205 144.117 204.205 cv
269.926 150.322 mo
269.81 150.322 269.695 150.321 269.579 150.32 cv
253.928 150.134 241.296 137.388 241.296 121.693 cv
241.296 105.997 253.928 93.2511 269.579 93.0652 cv
269.695 93.0638 269.81 93.0631 269.926 93.0631 cv
270.042 93.0631 270.157 93.0638 270.272 93.0652 cv
254.621 93.2511 241.989 105.997 241.989 121.693 cv
241.989 137.388 254.621 150.134 270.272 150.32 cv
270.157 150.321 270.042 150.322 269.926 150.322 cv
f
274.403 378.937 mo
274.288 378.937 274.172 378.935 274.056 378.933 cv
272.004 378.887 269.929 378.437 267.941 377.538 cv
260.041 373.964 260.107 356.762 260.107 356.762 cv
259.858 292.655 li
216.064 263.291 li
216.149 263.188 216.232 263.089 216.313 262.993 cv
260.551 292.655 li
260.8 356.762 li
260.8 356.762 260.734 373.964 268.634 377.538 cv
270.622 378.437 272.697 378.887 274.749 378.933 cv
274.634 378.935 274.519 378.937 274.403 378.937 cv
161.361 320.743 mo
161.245 320.743 161.13 320.742 161.014 320.739 cv
158.505 320.682 155.979 320.003 153.674 318.651 cv
92.9455 283.037 li
87.2365 279.689 85.3219 272.347 88.6689 266.637 cv
90.488 263.534 li
92.6476 259.85 96.4868 257.729 100.49 257.613 cv
100.605 257.61 100.72 257.608 100.836 257.608 cv
100.952 257.608 101.067 257.61 101.183 257.613 cv
97.1795 257.729 93.3408 259.85 91.1811 263.534 cv
89.3619 266.637 li
86.015 272.347 87.9296 279.689 93.6386 283.037 cv
154.367 318.651 li
156.672 320.003 159.198 320.682 161.707 320.739 cv
161.592 320.742 161.476 320.743 161.361 320.743 cv
158.036 282.938 mo
157.485 282.656 li
212.34 174.108 li
180.998 168.785 li
181.072 168.679 li
213.033 174.108 li
158.036 282.938 li
292.708 249.535 mo
292.592 249.535 292.476 249.533 292.361 249.53 cv
288.751 249.437 285.195 247.892 282.636 244.975 cv
258.338 207.089 li
258.696 206.566 li
283.329 244.975 li
285.888 247.892 289.444 249.437 293.054 249.53 cv
292.939 249.533 292.823 249.535 292.708 249.535 cv
301.059 217.442 mo
300.932 217.183 li
331.487 203.221 li
333.865 201.308 336.697 200.339 339.529 200.266 cv
339.645 200.263 339.76 200.262 339.876 200.262 cv
339.991 200.262 340.107 200.263 340.222 200.266 cv
337.39 200.339 334.558 201.308 332.181 203.221 cv
301.059 217.442 li
144.81 204.205 mo
144.695 204.205 144.579 204.204 144.464 204.2 cv
142.152 204.134 139.834 203.398 137.815 201.943 cv
137.617 201.801 li
132.237 197.925 131.027 190.416 134.917 185.046 cv
159.27 151.429 li
163.025 146.246 168.99 143.156 175.349 143.047 cv
175.465 143.045 175.58 143.044 175.696 143.044 cv
175.811 143.044 175.927 143.045 176.043 143.047 cv
169.683 143.156 163.718 146.246 159.963 151.429 cv
135.61 185.046 li
131.72 190.416 132.93 197.925 138.31 201.801 cv
138.508 201.943 li
140.527 203.398 142.845 204.134 145.157 204.2 cv
145.155 204.2 145.154 204.2 145.152 204.2 cv
145.038 204.204 144.924 204.205 144.81 204.205 cv
270.619 150.322 mo
270.503 150.322 270.388 150.321 270.272 150.32 cv
254.621 150.134 241.989 137.388 241.989 121.693 cv
241.989 105.997 254.621 93.2511 270.272 93.0652 cv
270.388 93.0638 270.503 93.0631 270.619 93.0631 cv
270.735 93.0631 270.85 93.0638 270.965 93.0652 cv
255.314 93.2511 242.683 105.997 242.683 121.693 cv
242.683 137.388 255.314 150.134 270.965 150.32 cv
270.85 150.321 270.735 150.322 270.619 150.322 cv
f
275.096 378.937 mo
274.981 378.937 274.865 378.935 274.749 378.933 cv
272.697 378.887 270.622 378.437 268.634 377.538 cv
260.734 373.964 260.8 356.762 260.8 356.762 cv
260.551 292.655 li
216.313 262.993 li
216.4 262.89 216.484 262.791 216.564 262.697 cv
261.245 292.655 li
261.493 356.762 li
261.493 356.762 261.427 373.964 269.327 377.538 cv
271.315 378.437 273.39 378.887 275.443 378.933 cv
275.327 378.935 275.212 378.937 275.096 378.937 cv
162.054 320.743 mo
161.938 320.743 161.823 320.742 161.707 320.739 cv
159.198 320.682 156.672 320.003 154.367 318.651 cv
93.6386 283.037 li
87.9296 279.689 86.015 272.347 89.3619 266.637 cv
91.1811 263.534 li
93.3408 259.85 97.1795 257.729 101.183 257.613 cv
101.298 257.61 101.414 257.608 101.529 257.608 cv
101.645 257.608 101.76 257.61 101.876 257.613 cv
97.873 257.729 94.0337 259.85 91.8742 263.534 cv
90.0551 266.637 li
86.7081 272.347 88.6227 279.689 94.3317 283.037 cv
155.06 318.651 li
157.365 320.003 159.891 320.682 162.401 320.739 cv
162.285 320.742 162.169 320.743 162.054 320.743 cv
158.586 283.22 mo
158.036 282.938 li
213.033 174.108 li
181.072 168.679 li
181.147 168.574 li
213.726 174.108 li
158.586 283.22 li
293.401 249.535 mo
293.285 249.535 293.169 249.533 293.054 249.53 cv
289.444 249.437 285.888 247.892 283.329 244.975 cv
258.696 206.566 li
259.054 206.043 li
284.022 244.975 li
286.581 247.892 290.137 249.437 293.747 249.53 cv
293.632 249.533 293.516 249.535 293.401 249.535 cv
301.185 217.701 mo
301.059 217.442 li
332.181 203.221 li
334.558 201.308 337.39 200.339 340.222 200.266 cv
340.338 200.263 340.453 200.262 340.569 200.262 cv
340.685 200.262 340.8 200.263 340.915 200.266 cv
338.083 200.339 335.251 201.308 332.874 203.221 cv
301.185 217.701 li
145.503 204.205 mo
145.388 204.205 145.272 204.204 145.157 204.2 cv
142.845 204.134 140.527 203.398 138.508 201.943 cv
138.31 201.801 li
132.93 197.925 131.72 190.416 135.61 185.046 cv
159.963 151.429 li
163.718 146.246 169.683 143.156 176.043 143.047 cv
176.158 143.045 176.273 143.044 176.389 143.044 cv
176.504 143.044 176.62 143.045 176.736 143.047 cv
170.376 143.156 164.411 146.246 160.656 151.429 cv
136.303 185.046 li
132.413 190.416 133.623 197.925 139.003 201.801 cv
139.201 201.943 li
141.22 203.398 143.538 204.134 145.85 204.2 cv
145.848 204.2 145.847 204.2 145.845 204.2 cv
145.732 204.204 145.617 204.205 145.503 204.205 cv
271.312 150.322 mo
271.196 150.322 271.081 150.321 270.965 150.32 cv
255.314 150.134 242.683 137.388 242.683 121.693 cv
242.683 105.997 255.314 93.2511 270.965 93.0652 cv
271.081 93.0638 271.196 93.0631 271.312 93.0631 cv
271.428 93.0631 271.543 93.0638 271.659 93.0652 cv
256.007 93.2511 243.376 105.997 243.376 121.693 cv
243.376 137.388 256.007 150.134 271.659 150.32 cv
271.543 150.321 271.428 150.322 271.312 150.322 cv
.901961 .901961 .901961 rgb
f
275.789 378.937 mo
275.674 378.937 275.558 378.935 275.443 378.933 cv
273.39 378.887 271.315 378.437 269.327 377.538 cv
261.427 373.964 261.493 356.762 261.493 356.762 cv
261.245 292.655 li
216.564 262.697 li
216.653 262.594 216.738 262.496 216.82 262.404 cv
261.938 292.655 li
262.186 356.762 li
262.186 356.762 262.12 373.964 270.02 377.538 cv
272.008 378.437 274.083 378.887 276.136 378.933 cv
276.02 378.935 275.905 378.937 275.789 378.937 cv
162.747 320.743 mo
162.632 320.743 162.516 320.742 162.401 320.739 cv
159.891 320.682 157.365 320.003 155.06 318.651 cv
94.3317 283.037 li
88.6227 279.689 86.7081 272.347 90.0551 266.637 cv
91.8742 263.534 li
94.0337 259.85 97.873 257.729 101.876 257.613 cv
101.991 257.61 102.107 257.608 102.222 257.608 cv
102.338 257.608 102.453 257.61 102.569 257.613 cv
98.5657 257.729 94.7269 259.85 92.5671 263.534 cv
90.7481 266.637 li
87.4011 272.347 89.3156 279.689 95.0247 283.037 cv
155.754 318.651 li
158.058 320.003 160.584 320.682 163.094 320.739 cv
162.978 320.742 162.863 320.743 162.747 320.743 cv
159.137 283.502 mo
158.586 283.22 li
213.726 174.108 li
181.147 168.574 li
181.222 168.469 li
214.419 174.108 li
159.137 283.502 li
294.094 249.535 mo
293.978 249.535 293.862 249.533 293.747 249.53 cv
290.137 249.437 286.581 247.892 284.022 244.975 cv
259.054 206.043 li
259.411 205.521 li
284.716 244.975 li
287.274 247.892 290.83 249.437 294.44 249.53 cv
294.325 249.533 294.209 249.535 294.094 249.535 cv
301.311 217.96 mo
301.185 217.701 li
332.874 203.221 li
335.251 201.308 338.083 200.339 340.915 200.266 cv
341.031 200.263 341.146 200.262 341.262 200.262 cv
341.378 200.262 341.493 200.263 341.609 200.266 cv
338.776 200.339 335.944 201.308 333.567 203.221 cv
301.311 217.96 li
146.196 204.205 mo
146.081 204.205 145.965 204.204 145.85 204.2 cv
143.538 204.134 141.22 203.398 139.201 201.943 cv
139.003 201.801 li
133.623 197.925 132.413 190.416 136.303 185.046 cv
160.656 151.429 li
164.411 146.246 170.376 143.156 176.736 143.047 cv
176.851 143.045 176.966 143.044 177.082 143.044 cv
177.197 143.044 177.313 143.045 177.429 143.047 cv
171.07 143.156 165.104 146.246 161.349 151.429 cv
136.997 185.046 li
133.106 190.416 134.316 197.925 139.696 201.801 cv
139.894 201.943 li
141.913 203.398 144.231 204.134 146.543 204.2 cv
146.541 204.2 146.54 204.2 146.538 204.2 cv
146.424 204.204 146.311 204.205 146.196 204.205 cv
272.005 150.322 mo
271.889 150.322 271.774 150.321 271.659 150.32 cv
256.007 150.134 243.376 137.388 243.376 121.693 cv
243.376 105.997 256.007 93.2511 271.659 93.0652 cv
271.774 93.0638 271.889 93.0631 272.005 93.0631 cv
272.121 93.0631 272.236 93.0638 272.352 93.0652 cv
256.7 93.2511 244.069 105.997 244.069 121.693 cv
244.069 137.388 256.7 150.134 272.352 150.32 cv
272.236 150.321 272.121 150.322 272.005 150.322 cv
f
276.482 378.937 mo
276.367 378.937 276.251 378.935 276.136 378.933 cv
274.083 378.887 272.008 378.437 270.02 377.538 cv
262.12 373.964 262.186 356.762 262.186 356.762 cv
261.938 292.655 li
216.82 262.404 li
216.911 262.3 216.998 262.203 217.08 262.113 cv
262.631 292.655 li
262.88 356.762 li
262.88 356.762 262.813 373.964 270.713 377.538 cv
272.701 378.437 274.777 378.887 276.829 378.933 cv
276.713 378.935 276.598 378.937 276.482 378.937 cv
163.44 320.743 mo
163.325 320.743 163.209 320.742 163.094 320.739 cv
160.584 320.682 158.058 320.003 155.754 318.651 cv
95.0247 283.037 li
89.3156 279.689 87.4011 272.347 90.7481 266.637 cv
92.5671 263.534 li
94.7269 259.85 98.5657 257.729 102.569 257.613 cv
102.684 257.61 102.8 257.608 102.915 257.608 cv
103.031 257.608 103.146 257.61 103.262 257.613 cv
99.2587 257.729 95.42 259.85 93.2603 263.534 cv
91.4412 266.637 li
88.0941 272.347 90.0088 279.689 95.7178 283.037 cv
156.447 318.651 li
158.752 320.003 161.277 320.682 163.787 320.739 cv
163.671 320.742 163.556 320.743 163.44 320.743 cv
159.687 283.784 mo
159.137 283.502 li
214.419 174.108 li
181.222 168.469 li
181.296 168.364 li
215.112 174.108 li
159.687 283.784 li
294.787 249.535 mo
294.671 249.535 294.555 249.533 294.44 249.53 cv
290.83 249.437 287.274 247.892 284.716 244.975 cv
259.411 205.521 li
259.769 204.998 li
285.409 244.975 li
287.967 247.892 291.523 249.437 295.133 249.53 cv
295.018 249.533 294.902 249.535 294.787 249.535 cv
301.437 218.219 mo
301.311 217.96 li
333.567 203.221 li
335.944 201.308 338.776 200.339 341.609 200.266 cv
341.724 200.263 341.84 200.262 341.955 200.262 cv
342.071 200.262 342.186 200.263 342.302 200.266 cv
339.47 200.339 336.638 201.308 334.26 203.221 cv
301.437 218.219 li
146.889 204.205 mo
146.774 204.205 146.658 204.204 146.543 204.2 cv
144.231 204.134 141.913 203.398 139.894 201.943 cv
139.696 201.801 li
134.316 197.925 133.106 190.416 136.997 185.046 cv
161.349 151.429 li
165.104 146.246 171.07 143.156 177.429 143.047 cv
177.544 143.045 177.66 143.044 177.775 143.044 cv
177.89 143.044 178.006 143.045 178.122 143.047 cv
171.763 143.156 165.797 146.246 162.042 151.429 cv
137.69 185.046 li
133.799 190.416 135.009 197.925 140.389 201.801 cv
140.587 201.943 li
142.606 203.398 144.924 204.134 147.236 204.2 cv
147.234 204.2 147.233 204.2 147.231 204.2 cv
147.118 204.204 147.003 204.205 146.889 204.205 cv
272.698 150.322 mo
272.582 150.322 272.467 150.321 272.352 150.32 cv
256.7 150.134 244.069 137.388 244.069 121.693 cv
244.069 105.997 256.7 93.2511 272.352 93.0652 cv
272.467 93.0638 272.582 93.0631 272.698 93.0631 cv
272.814 93.0631 272.929 93.0638 273.045 93.0652 cv
257.393 93.2511 244.762 105.997 244.762 121.693 cv
244.762 137.388 257.393 150.134 273.045 150.32 cv
272.929 150.321 272.814 150.322 272.698 150.322 cv
f
277.175 378.937 mo
277.06 378.937 276.944 378.935 276.829 378.933 cv
274.777 378.887 272.701 378.437 270.713 377.538 cv
262.813 373.964 262.88 356.762 262.88 356.762 cv
262.631 292.655 li
217.08 262.113 li
217.176 262.008 217.265 261.913 217.348 261.828 cv
263.324 292.655 li
263.573 356.762 li
263.573 356.762 263.506 373.964 271.406 377.538 cv
273.394 378.437 275.47 378.887 277.522 378.933 cv
277.406 378.935 277.291 378.937 277.175 378.937 cv
164.133 320.743 mo
164.018 320.743 163.902 320.742 163.787 320.739 cv
161.277 320.682 158.752 320.003 156.447 318.651 cv
95.7178 283.037 li
90.0088 279.689 88.0941 272.347 91.4412 266.637 cv
93.2603 263.534 li
95.42 259.85 99.2587 257.729 103.262 257.613 cv
103.377 257.61 103.493 257.608 103.608 257.608 cv
103.724 257.608 103.839 257.61 103.955 257.613 cv
99.9519 257.729 96.1131 259.85 93.9534 263.534 cv
92.1343 266.637 li
88.7873 272.347 90.702 279.689 96.4109 283.037 cv
157.14 318.651 li
159.445 320.003 161.97 320.682 164.48 320.739 cv
164.364 320.742 164.249 320.743 164.133 320.743 cv
160.238 284.066 mo
159.687 283.784 li
215.112 174.108 li
181.296 168.364 li
181.371 168.259 li
215.805 174.108 li
160.238 284.066 li
295.48 249.535 mo
295.364 249.535 295.249 249.533 295.133 249.53 cv
291.523 249.437 287.967 247.892 285.409 244.975 cv
259.769 204.998 li
260.127 204.475 li
286.102 244.975 li
288.66 247.892 292.216 249.437 295.826 249.53 cv
295.711 249.533 295.595 249.535 295.48 249.535 cv
301.564 218.478 mo
301.437 218.219 li
334.26 203.221 li
336.638 201.308 339.47 200.339 342.302 200.266 cv
342.417 200.263 342.533 200.262 342.648 200.262 cv
342.764 200.262 342.879 200.263 342.995 200.266 cv
340.163 200.339 337.331 201.308 334.953 203.221 cv
301.564 218.478 li
147.583 204.205 mo
147.467 204.205 147.352 204.204 147.236 204.2 cv
144.924 204.134 142.606 203.398 140.587 201.943 cv
140.389 201.801 li
135.009 197.925 133.799 190.416 137.69 185.046 cv
162.042 151.429 li
165.797 146.246 171.763 143.156 178.122 143.047 cv
178.237 143.045 178.353 143.044 178.468 143.044 cv
178.583 143.044 178.699 143.045 178.815 143.047 cv
172.456 143.156 166.49 146.246 162.735 151.429 cv
138.383 185.046 li
134.492 190.416 135.702 197.925 141.083 201.801 cv
141.28 201.943 li
143.299 203.398 145.617 204.134 147.929 204.2 cv
147.927 204.2 147.926 204.2 147.924 204.2 cv
147.811 204.204 147.696 204.205 147.583 204.205 cv
273.391 150.322 mo
273.275 150.322 273.16 150.321 273.045 150.32 cv
257.393 150.134 244.762 137.388 244.762 121.693 cv
244.762 105.997 257.393 93.2511 273.045 93.0652 cv
273.16 93.0638 273.275 93.0631 273.391 93.0631 cv
273.507 93.0631 273.622 93.0638 273.738 93.0652 cv
258.086 93.2511 245.455 105.997 245.455 121.693 cv
245.455 137.388 258.086 150.134 273.738 150.32 cv
273.622 150.321 273.507 150.322 273.391 150.322 cv
f
277.868 378.937 mo
277.753 378.937 277.637 378.935 277.522 378.933 cv
275.47 378.887 273.394 378.437 271.406 377.538 cv
263.506 373.964 263.573 356.762 263.573 356.762 cv
263.324 292.655 li
217.348 261.828 li
217.454 261.719 217.548 261.627 217.63 261.553 cv
264.017 292.655 li
264.266 356.762 li
264.266 356.762 264.199 373.964 272.099 377.538 cv
274.087 378.437 276.163 378.887 278.215 378.933 cv
278.099 378.935 277.984 378.937 277.868 378.937 cv
164.826 320.743 mo
164.711 320.743 164.595 320.742 164.48 320.739 cv
161.97 320.682 159.445 320.003 157.14 318.651 cv
96.4109 283.037 li
90.702 279.689 88.7873 272.347 92.1343 266.637 cv
93.9534 263.534 li
96.1131 259.85 99.9519 257.729 103.955 257.613 cv
104.07 257.61 104.186 257.608 104.302 257.608 cv
104.417 257.608 104.532 257.61 104.648 257.613 cv
100.645 257.729 96.8061 259.85 94.6464 263.534 cv
92.8273 266.637 li
89.4803 272.347 91.3949 279.689 97.1039 283.037 cv
157.833 318.651 li
160.138 320.003 162.663 320.682 165.173 320.739 cv
165.057 320.742 164.942 320.743 164.826 320.743 cv
160.788 284.347 mo
160.238 284.066 li
215.805 174.108 li
181.371 168.259 li
181.445 168.154 li
216.498 174.108 li
160.788 284.347 li
296.173 249.535 mo
296.058 249.535 295.942 249.533 295.826 249.53 cv
292.216 249.437 288.66 247.892 286.102 244.975 cv
260.127 204.475 li
260.485 203.952 li
286.795 244.975 li
289.353 247.892 292.909 249.437 296.519 249.53 cv
296.404 249.533 296.288 249.535 296.173 249.535 cv
301.69 218.737 mo
301.564 218.478 li
334.953 203.221 li
337.331 201.308 340.163 200.339 342.995 200.266 cv
343.11 200.263 343.226 200.262 343.341 200.262 cv
343.457 200.262 343.572 200.263 343.688 200.266 cv
340.856 200.339 338.024 201.308 335.646 203.221 cv
301.69 218.737 li
148.276 204.205 mo
148.16 204.205 148.045 204.204 147.929 204.2 cv
145.617 204.134 143.299 203.398 141.28 201.943 cv
141.083 201.801 li
135.702 197.925 134.492 190.416 138.383 185.046 cv
162.735 151.429 li
166.49 146.246 172.456 143.156 178.815 143.047 cv
178.93 143.045 179.046 143.044 179.161 143.044 cv
179.277 143.044 179.392 143.045 179.508 143.047 cv
173.149 143.156 167.183 146.246 163.428 151.429 cv
139.076 185.046 li
135.185 190.416 136.395 197.925 141.776 201.801 cv
141.973 201.943 li
143.992 203.398 146.31 204.134 148.622 204.2 cv
148.62 204.2 148.619 204.2 148.618 204.2 cv
148.504 204.204 148.389 204.205 148.276 204.205 cv
274.084 150.322 mo
273.968 150.322 273.853 150.321 273.738 150.32 cv
258.086 150.134 245.455 137.388 245.455 121.693 cv
245.455 105.997 258.086 93.2511 273.738 93.0652 cv
273.853 93.0638 273.968 93.0631 274.084 93.0631 cv
274.2 93.0631 274.315 93.0638 274.431 93.0652 cv
258.779 93.2511 246.148 105.997 246.148 121.693 cv
246.148 137.388 258.779 150.134 274.431 150.32 cv
274.315 150.321 274.2 150.322 274.084 150.322 cv
.898039 .898039 .898039 rgb
f
278.562 378.937 mo
278.446 378.937 278.331 378.935 278.215 378.933 cv
276.163 378.887 274.087 378.437 272.099 377.538 cv
264.199 373.964 264.266 356.762 264.266 356.762 cv
264.017 292.655 li
217.63 261.553 li
217.794 261.406 217.909 261.329 217.973 261.329 cv
217.982 261.329 217.99 261.331 217.997 261.334 cv
264.71 292.655 li
264.959 356.762 li
264.959 356.762 264.892 373.964 272.793 377.538 cv
274.78 378.437 276.856 378.887 278.908 378.933 cv
278.792 378.935 278.677 378.937 278.562 378.937 cv
165.519 320.743 mo
165.404 320.743 165.288 320.742 165.173 320.739 cv
162.663 320.682 160.138 320.003 157.833 318.651 cv
97.1039 283.037 li
91.3949 279.689 89.4803 272.347 92.8273 266.637 cv
94.6464 263.534 li
96.8061 259.85 100.645 257.729 104.648 257.613 cv
104.763 257.61 104.879 257.608 104.994 257.608 cv
104.995 257.608 li
105.11 257.608 105.225 257.61 105.341 257.613 cv
101.338 257.729 97.4991 259.85 95.3395 263.534 cv
93.5204 266.637 li
90.1734 272.347 92.088 279.689 97.7971 283.037 cv
158.526 318.651 li
160.831 320.003 163.356 320.682 165.866 320.739 cv
165.751 320.742 165.635 320.743 165.519 320.743 cv
161.339 284.629 mo
160.788 284.347 li
216.498 174.108 li
181.445 168.154 li
181.52 168.049 li
217.191 174.108 li
161.339 284.629 li
296.866 249.535 mo
296.751 249.535 296.635 249.533 296.519 249.53 cv
292.909 249.437 289.353 247.892 286.795 244.975 cv
260.485 203.952 li
260.842 203.429 li
287.488 244.975 li
290.046 247.892 293.602 249.437 297.212 249.53 cv
297.097 249.533 296.981 249.535 296.866 249.535 cv
301.816 218.996 mo
301.69 218.737 li
335.646 203.221 li
338.024 201.308 340.856 200.339 343.688 200.266 cv
343.803 200.263 343.919 200.262 344.034 200.262 cv
344.15 200.262 344.265 200.263 344.381 200.266 cv
341.549 200.339 338.717 201.308 336.339 203.221 cv
301.816 218.996 li
148.969 204.205 mo
148.853 204.205 148.738 204.204 148.622 204.2 cv
146.31 204.134 143.992 203.398 141.973 201.943 cv
141.776 201.801 li
136.395 197.925 135.185 190.416 139.076 185.046 cv
163.428 151.429 li
167.183 146.246 173.149 143.156 179.508 143.047 cv
179.623 143.045 179.739 143.044 179.854 143.044 cv
179.97 143.044 180.085 143.045 180.201 143.047 cv
173.842 143.156 167.876 146.246 164.121 151.429 cv
139.769 185.046 li
135.879 190.416 137.088 197.925 142.469 201.801 cv
142.666 201.943 li
144.685 203.398 147.003 204.134 149.315 204.2 cv
149.313 204.2 149.312 204.2 149.311 204.2 cv
149.197 204.204 149.083 204.205 148.969 204.205 cv
274.777 150.322 mo
274.661 150.322 274.546 150.321 274.431 150.32 cv
258.779 150.134 246.148 137.388 246.148 121.693 cv
246.148 105.997 258.779 93.2511 274.431 93.0652 cv
274.546 93.0638 274.661 93.0631 274.777 93.0631 cv
274.893 93.0631 275.008 93.0638 275.124 93.0652 cv
259.472 93.2511 246.841 105.997 246.841 121.693 cv
246.841 137.388 259.472 150.134 275.124 150.32 cv
275.008 150.321 274.893 150.322 274.777 150.322 cv
f
279.255 378.937 mo
279.139 378.937 279.024 378.935 278.908 378.933 cv
276.856 378.887 274.78 378.437 272.793 377.538 cv
264.892 373.964 264.959 356.762 264.959 356.762 cv
264.71 292.655 li
217.997 261.334 li
217.99 261.331 217.982 261.329 217.973 261.329 cv
217.909 261.329 217.794 261.406 217.63 261.553 cv
217.548 261.627 217.454 261.719 217.348 261.828 cv
217.265 261.913 217.176 262.008 217.08 262.113 cv
216.998 262.203 216.911 262.3 216.82 262.404 cv
216.738 262.496 216.653 262.594 216.564 262.697 cv
216.484 262.791 216.4 262.89 216.313 262.993 cv
216.232 263.089 216.149 263.188 216.064 263.291 cv
215.983 263.387 215.901 263.487 215.817 263.59 cv
215.737 263.687 215.655 263.787 215.571 263.89 cv
215.492 263.988 215.41 264.088 215.327 264.191 cv
215.248 264.289 215.167 264.391 215.085 264.493 cv
215.005 264.592 214.925 264.693 214.843 264.796 cv
214.764 264.895 214.684 264.996 214.602 265.099 cv
214.524 265.199 214.444 265.3 214.363 265.403 cv
214.284 265.502 214.204 265.605 214.124 265.707 cv
214.045 265.808 213.966 265.909 213.885 266.012 cv
213.807 266.113 213.728 266.214 213.647 266.318 cv
213.569 266.418 213.49 266.52 213.41 266.623 cv
213.332 266.723 213.252 266.826 213.173 266.929 cv
213.095 267.03 213.016 267.132 212.937 267.235 cv
212.859 267.337 212.781 267.438 212.701 267.542 cv
212.623 267.644 212.545 267.745 212.466 267.849 cv
212.388 267.95 212.309 268.053 212.231 268.156 cv
212.153 268.258 212.075 268.359 211.996 268.463 cv
211.918 268.565 211.84 268.667 211.761 268.771 cv
211.684 268.872 211.606 268.975 211.527 269.078 cv
211.45 269.18 211.371 269.283 211.293 269.386 cv
211.216 269.488 211.138 269.591 211.06 269.694 cv
210.982 269.797 210.905 269.899 210.827 270.003 cv
210.75 270.104 210.671 270.208 210.594 270.311 cv
210.517 270.413 210.439 270.516 210.361 270.62 cv
210.284 270.722 210.206 270.825 210.128 270.928 cv
210.051 271.031 209.974 271.134 209.896 271.237 cv
209.819 271.34 209.742 271.443 209.664 271.546 cv
209.587 271.649 209.51 271.752 209.432 271.856 cv
209.356 271.957 209.277 272.062 209.2 272.165 cv
209.123 272.268 209.046 272.371 208.969 272.474 cv
208.892 272.577 208.815 272.68 208.737 272.784 cv
208.661 272.886 208.583 272.99 208.506 273.094 cv
208.429 273.197 208.353 273.299 208.275 273.403 cv
208.199 273.505 208.121 273.61 208.044 273.713 cv
207.967 273.816 207.891 273.919 207.813 274.023 cv
207.737 274.126 207.66 274.23 207.583 274.333 cv
207.506 274.437 207.43 274.539 207.352 274.643 cv
207.275 274.747 207.199 274.85 207.122 274.954 cv
207.045 275.056 206.968 275.16 206.891 275.264 cv
206.816 275.366 206.738 275.471 206.661 275.574 cv
206.584 275.679 206.509 275.78 206.431 275.885 cv
206.356 275.987 206.278 276.092 206.202 276.195 cv
206.125 276.299 206.049 276.402 205.972 276.506 cv
205.896 276.609 205.819 276.714 205.742 276.817 cv
205.666 276.92 205.589 277.024 205.513 277.128 cv
205.436 277.232 205.36 277.334 205.283 277.439 cv
205.207 277.542 205.131 277.646 205.054 277.749 cv
204.977 277.853 204.902 277.956 204.825 278.061 cv
204.749 278.164 204.672 278.268 204.596 278.372 cv
204.519 278.475 204.443 278.579 204.367 278.683 cv
204.291 278.786 204.214 278.89 204.138 278.994 cv
204.062 279.097 203.985 279.201 203.909 279.305 cv
203.832 279.409 203.757 279.512 203.68 279.617 cv
203.604 279.72 203.528 279.824 203.451 279.928 cv
203.375 280.031 203.299 280.135 203.223 280.239 cv
203.147 280.343 203.071 280.446 202.994 280.551 cv
202.919 280.654 202.842 280.759 202.766 280.862 cv
202.69 280.966 202.614 281.07 202.538 281.174 cv
202.461 281.278 202.386 281.381 202.309 281.486 cv
202.233 281.59 202.158 281.693 202.081 281.797 cv
202.006 281.901 201.929 282.005 201.853 282.109 cv
201.777 282.213 201.701 282.317 201.625 282.421 cv
201.55 282.524 201.472 282.63 201.397 282.733 cv
201.321 282.837 201.246 282.94 201.169 283.045 cv
201.094 283.148 201.017 283.253 200.941 283.356 cv
200.866 283.46 200.789 283.564 200.713 283.668 cv
200.638 283.772 200.562 283.876 200.486 283.98 cv
200.41 284.085 200.334 284.188 200.258 284.292 cv
200.183 284.396 200.106 284.501 200.031 284.605 cv
199.954 284.71 199.88 284.812 199.803 284.917 cv
199.727 285.02 199.651 285.125 199.576 285.229 cv
199.5 285.333 199.424 285.437 199.348 285.541 cv
199.273 285.644 199.196 285.75 199.121 285.853 cv
199.045 285.958 198.97 286.061 198.894 286.166 cv
198.817 286.27 198.743 286.373 198.666 286.478 cv
198.591 286.582 198.514 286.687 198.439 286.79 cv
198.364 286.894 198.288 286.999 198.212 287.103 cv
198.136 287.207 198.061 287.311 197.985 287.415 cv
197.909 287.519 197.834 287.623 197.758 287.728 cv
197.682 287.832 197.607 287.936 197.531 288.04 cv
197.455 288.145 197.38 288.248 197.304 288.353 cv
197.229 288.456 197.152 288.562 197.077 288.665 cv
197.001 288.77 196.926 288.873 196.85 288.978 cv
196.774 289.083 196.7 289.186 196.623 289.291 cv
196.548 289.394 196.472 289.5 196.397 289.603 cv
196.322 289.707 196.245 289.812 196.17 289.916 cv
196.094 290.021 196.02 290.123 195.943 290.229 cv
195.868 290.333 195.792 290.438 195.717 290.541 cv
195.642 290.645 195.566 290.75 195.49 290.854 cv
195.415 290.958 195.339 291.063 195.264 291.167 cv
195.188 291.271 195.113 291.376 195.037 291.48 cv
194.962 291.584 194.886 291.689 194.811 291.793 cv
194.735 291.897 194.66 292.001 194.585 292.106 cv
194.509 292.21 194.434 292.314 194.358 292.419 cv
188.679 300.272 182.995 308.211 178.605 314.365 cv
175.653 318.502 170.981 320.743 166.212 320.743 cv
166.097 320.743 165.981 320.742 165.866 320.739 cv
163.356 320.682 160.831 320.003 158.526 318.651 cv
97.7971 283.037 li
92.088 279.689 90.1734 272.347 93.5204 266.637 cv
95.3395 263.534 li
97.4991 259.85 101.338 257.729 105.341 257.613 cv
105.456 257.61 105.572 257.608 105.687 257.608 cv
105.688 257.608 105.687 257.608 105.688 257.608 cv
105.915 257.608 106.143 257.615 106.37 257.628 cv
106.592 257.641 106.814 257.66 107.035 257.685 cv
107.251 257.709 107.466 257.74 107.682 257.776 cv
107.892 257.812 108.102 257.853 108.312 257.901 cv
108.517 257.947 108.722 257.999 108.926 258.057 cv
109.127 258.113 109.326 258.175 109.525 258.243 cv
109.721 258.309 109.915 258.381 110.109 258.458 cv
110.3 258.535 110.49 258.616 110.679 258.703 cv
110.834 258.774 110.988 258.849 111.141 258.927 cv
111.234 258.975 li
111.785 259.257 li
112.335 259.539 li
112.886 259.821 li
113.437 260.103 li
113.987 260.384 li
114.538 260.666 li
115.088 260.948 li
115.639 261.23 li
116.19 261.512 li
116.74 261.794 li
117.291 262.076 li
117.841 262.358 li
118.392 262.64 li
118.943 262.922 li
119.493 263.204 li
120.044 263.486 li
120.595 263.768 li
121.145 264.049 li
121.696 264.331 li
122.246 264.613 li
122.797 264.895 li
123.347 265.177 li
123.898 265.459 li
124.449 265.741 li
124.999 266.023 li
125.55 266.305 li
126.101 266.587 li
126.651 266.869 li
127.202 267.151 li
127.752 267.432 li
128.303 267.714 li
128.854 267.996 li
129.404 268.278 li
129.955 268.56 li
130.505 268.842 li
131.056 269.124 li
131.607 269.406 li
132.157 269.688 li
132.708 269.97 li
133.258 270.252 li
133.809 270.534 li
134.36 270.815 li
134.91 271.097 li
135.461 271.379 li
136.011 271.661 li
136.562 271.943 li
137.113 272.225 li
137.663 272.507 li
138.214 272.789 li
138.764 273.071 li
139.315 273.353 li
139.866 273.635 li
140.416 273.917 li
140.967 274.198 li
141.517 274.48 li
142.068 274.762 li
142.619 275.044 li
143.169 275.326 li
143.72 275.608 li
144.27 275.89 li
144.821 276.172 li
145.372 276.454 li
145.922 276.736 li
146.473 277.018 li
147.023 277.299 li
147.574 277.581 li
148.125 277.863 li
148.675 278.145 li
149.226 278.427 li
149.776 278.709 li
150.327 278.991 li
150.878 279.273 li
151.428 279.555 li
151.979 279.837 li
152.529 280.119 li
153.08 280.401 li
153.631 280.682 li
154.181 280.964 li
154.732 281.246 li
155.282 281.528 li
155.833 281.81 li
156.384 282.092 li
156.934 282.374 li
157.485 282.656 li
158.036 282.938 li
158.586 283.22 li
159.137 283.502 li
159.687 283.784 li
160.238 284.066 li
160.788 284.347 li
161.339 284.629 li
217.191 174.108 li
181.52 168.049 li
181.445 168.154 li
181.371 168.259 li
181.296 168.364 li
181.222 168.469 li
181.147 168.574 li
181.072 168.679 li
180.998 168.785 li
180.923 168.89 li
180.849 168.995 li
180.774 169.1 li
180.7 169.205 li
180.625 169.31 li
180.551 169.415 li
180.476 169.52 li
180.401 169.625 li
180.327 169.73 li
180.252 169.835 li
180.178 169.94 li
180.103 170.045 li
180.029 170.15 li
179.954 170.255 li
179.88 170.36 li
179.805 170.465 li
179.731 170.57 li
179.656 170.676 li
179.581 170.781 li
179.507 170.886 li
179.432 170.991 li
179.358 171.096 li
179.283 171.201 li
179.209 171.306 li
179.134 171.411 li
179.06 171.516 li
178.985 171.621 li
178.91 171.726 li
178.836 171.831 li
178.761 171.936 li
178.687 172.041 li
178.612 172.146 li
178.538 172.251 li
178.463 172.356 li
178.389 172.461 li
178.314 172.567 li
178.24 172.672 li
178.165 172.777 li
178.09 172.882 li
178.016 172.987 li
177.941 173.092 li
177.867 173.197 li
177.792 173.302 li
177.718 173.407 li
177.643 173.512 li
177.569 173.617 li
177.494 173.722 li
177.419 173.827 li
177.345 173.932 li
177.27 174.037 li
176.431 175.22 li
174.023 178.613 li
171.615 182.006 li
169.208 185.399 li
166.8 188.792 li
164.392 192.185 li
161.985 195.578 li
159.577 198.971 li
159.446 199.155 li
158.976 199.818 158.451 200.418 157.882 200.954 cv
157.504 201.311 157.106 201.638 156.692 201.938 cv
156.359 202.178 156.015 202.4 155.662 202.604 cv
155.355 202.78 155.042 202.942 154.723 203.09 cv
154.435 203.224 154.142 203.346 153.845 203.456 cv
153.571 203.557 153.294 203.648 153.014 203.73 cv
152.751 203.806 152.486 203.873 152.219 203.931 cv
151.966 203.986 151.711 204.032 151.455 204.071 cv
151.211 204.108 150.964 204.137 150.718 204.159 cv
150.48 204.18 150.242 204.194 150.004 204.2 cv
149.89 204.204 149.776 204.205 149.662 204.205 cv
149.546 204.205 149.431 204.204 149.315 204.2 cv
147.003 204.134 144.685 203.398 142.666 201.943 cv
142.469 201.801 li
137.088 197.925 135.879 190.416 139.769 185.046 cv
164.121 151.429 li
167.876 146.246 173.842 143.156 180.201 143.047 cv
180.316 143.045 180.432 143.044 180.547 143.044 cv
180.778 143.044 181.01 143.048 181.242 143.056 cv
186.541 143.171 li
187.251 143.187 li
187.962 143.202 li
188.673 143.217 li
189.383 143.233 li
190.094 143.248 li
190.804 143.264 li
191.515 143.279 li
192.226 143.294 li
192.937 143.31 li
193.648 143.325 li
194.358 143.341 li
195.069 143.356 li
195.78 143.371 li
196.491 143.387 li
197.202 143.402 li
197.913 143.418 li
198.624 143.433 li
199.335 143.448 li
200.046 143.464 li
200.757 143.479 li
201.468 143.495 li
202.18 143.51 li
202.891 143.525 li
203.602 143.541 li
204.313 143.556 li
205.025 143.572 li
205.736 143.587 li
206.447 143.603 li
207.159 143.618 li
207.87 143.633 li
208.582 143.649 li
209.293 143.664 li
210.005 143.68 li
210.716 143.695 li
211.428 143.71 li
212.139 143.726 li
212.851 143.741 li
213.563 143.757 li
214.274 143.772 li
214.986 143.788 li
215.698 143.803 li
216.41 143.818 li
217.122 143.834 li
217.833 143.849 li
218.545 143.865 li
219.257 143.88 li
219.969 143.896 li
220.681 143.911 li
221.393 143.926 li
222.106 143.942 li
222.818 143.957 li
223.53 143.973 li
224.242 143.988 li
224.954 144.004 li
225.666 144.019 li
226.379 144.035 li
227.091 144.05 li
227.803 144.065 li
228.516 144.081 li
229.228 144.096 li
229.941 144.112 li
230.653 144.127 li
231.366 144.143 li
232.078 144.158 li
232.791 144.173 li
233.504 144.189 li
234.216 144.204 li
234.929 144.22 li
235.642 144.235 li
236.354 144.251 li
237.067 144.266 li
237.78 144.282 li
238.493 144.297 li
239.206 144.312 li
239.919 144.328 li
240.632 144.343 li
241.345 144.359 li
242.058 144.374 li
242.771 144.39 li
243.484 144.405 li
244.198 144.421 li
244.848 144.435 li
245.125 144.599 li
250.576 147.818 li
252.044 148.685 li
252.88 149.179 li
253.452 149.516 li
253.867 149.762 li
254.176 149.944 li
254.406 150.08 li
254.574 150.179 li
254.691 150.248 li
254.766 150.293 li
254.806 150.316 li
254.815 150.322 li
273.812 161.542 li
292.685 200.262 li
292.695 200.282 li
292.721 200.336 li
292.762 200.421 li
292.819 200.536 li
292.889 200.68 li
292.972 200.852 li
293.069 201.05 li
293.179 201.276 li
293.302 201.528 li
293.438 201.806 li
293.586 202.111 li
293.747 202.442 li
293.922 202.799 li
294.109 203.183 li
294.242 203.456 li
294.368 203.715 li
294.494 203.974 li
294.62 204.233 li
294.746 204.492 li
294.873 204.751 li
294.999 205.01 li
295.125 205.269 li
295.251 205.528 li
295.378 205.787 li
295.504 206.046 li
295.63 206.305 li
295.756 206.564 li
295.883 206.823 li
296.009 207.082 li
296.135 207.341 li
296.261 207.6 li
296.388 207.859 li
296.514 208.118 li
296.64 208.377 li
296.766 208.636 li
296.893 208.895 li
297.019 209.154 li
297.145 209.413 li
297.271 209.672 li
297.398 209.931 li
297.524 210.19 li
297.65 210.449 li
297.776 210.708 li
297.903 210.967 li
298.029 211.226 li
298.155 211.485 li
298.281 211.744 li
298.408 212.003 li
298.534 212.262 li
298.66 212.521 li
298.786 212.78 li
298.912 213.039 li
299.039 213.298 li
299.165 213.557 li
299.291 213.816 li
299.417 214.075 li
299.544 214.334 li
299.67 214.593 li
299.796 214.852 li
299.922 215.111 li
300.049 215.37 li
300.175 215.629 li
300.301 215.888 li
300.427 216.147 li
300.554 216.406 li
300.68 216.665 li
300.806 216.924 li
300.932 217.183 li
301.059 217.442 li
301.185 217.701 li
301.311 217.96 li
301.437 218.219 li
301.564 218.478 li
301.69 218.737 li
301.816 218.996 li
336.339 203.221 li
338.717 201.308 341.549 200.339 344.381 200.266 cv
344.496 200.263 344.612 200.262 344.727 200.262 cv
348.642 200.262 352.521 201.97 355.168 205.257 cv
359.804 211.019 358.893 219.448 353.132 224.085 cv
305.949 246.575 li
303.48 248.563 300.512 249.535 297.559 249.535 cv
297.444 249.535 297.328 249.533 297.212 249.53 cv
293.602 249.437 290.046 247.892 287.488 244.975 cv
260.842 203.429 li
260.485 203.952 li
260.127 204.475 li
259.769 204.998 li
259.411 205.521 li
259.054 206.043 li
258.696 206.566 li
258.338 207.089 li
257.98 207.612 li
257.622 208.135 li
257.265 208.657 li
256.907 209.18 li
256.549 209.703 li
256.191 210.226 li
255.834 210.749 li
255.476 211.271 li
255.118 211.794 li
254.76 212.317 li
254.402 212.84 li
254.045 213.363 li
253.687 213.885 li
253.329 214.408 li
252.971 214.931 li
252.614 215.454 li
252.256 215.977 li
251.898 216.499 li
251.54 217.022 li
251.183 217.545 li
250.825 218.068 li
250.467 218.591 li
250.109 219.113 li
249.752 219.636 li
249.394 220.159 li
249.036 220.682 li
248.678 221.205 li
248.32 221.727 li
247.963 222.25 li
247.605 222.773 li
247.247 223.296 li
246.889 223.819 li
246.532 224.342 li
246.174 224.864 li
245.816 225.387 li
245.458 225.91 li
245.1 226.433 li
244.743 226.956 li
244.385 227.478 li
244.027 228.001 li
243.669 228.524 li
243.312 229.047 li
242.954 229.57 li
242.596 230.092 li
242.238 230.615 li
241.881 231.138 li
241.523 231.661 li
241.485 231.716 li
241.631 231.829 li
243.004 232.89 li
244.378 233.951 li
245.751 235.012 li
247.125 236.073 li
248.498 237.134 li
249.872 238.195 li
251.245 239.256 li
252.619 240.317 li
253.992 241.378 li
255.366 242.439 li
256.74 243.5 li
258.113 244.561 li
263.135 248.44 li
263.77 248.931 li
264.135 249.212 li
264.356 249.383 li
264.484 249.482 li
264.543 249.528 li
264.549 249.532 li
292.056 270.78 li
299.839 274.421 299.708 291.472 299.708 291.472 cv
293.568 369.704 li
290.944 375.504 285.231 378.937 279.255 378.937 cv
275.47 150.322 mo
275.355 150.322 275.239 150.321 275.124 150.32 cv
259.472 150.134 246.841 137.388 246.841 121.693 cv
246.841 105.997 259.472 93.2511 275.124 93.0652 cv
275.239 93.0638 275.355 93.0631 275.47 93.0631 cv
291.282 93.0631 304.1 105.881 304.1 121.693 cv
304.1 137.504 291.282 150.322 275.47 150.322 cv
f
355.168 205.257 mo
350.529 199.495 342.101 198.585 336.339 203.221 cv
301.816 218.996 li
273.812 161.542 li
244.848 144.435 li
181.242 143.056 li
174.498 142.826 168.08 145.964 164.121 151.429 cv
139.769 185.046 li
135.878 190.416 137.088 197.925 142.469 201.801 cv
142.666 201.943 li
148.064 205.832 155.596 204.581 159.446 199.155 cv
181.52 168.049 li
217.191 174.108 li
163.339 282.629 li
111.141 258.927 li
105.486 256.032 98.5528 258.053 95.3395 263.534 cv
93.5204 266.638 li
90.1734 272.347 92.088 279.689 97.797 283.037 cv
158.526 318.651 li
165.32 322.636 174.03 320.777 178.605 314.365 cv
191.875 295.765 216.966 260.852 217.997 261.334 cv
264.71 292.654 li
264.959 356.762 li
264.959 356.762 264.892 373.964 272.793 377.538 cv
274.892 378.488 277.09 378.937 279.255 378.937 cv
285.231 378.937 290.944 375.504 293.568 369.704 cv
299.708 291.472 li
299.708 291.472 299.839 274.421 292.056 270.78 cv
241.485 231.716 li
260.842 203.429 li
287.488 244.975 li
292.219 250.369 300.361 251.074 305.949 246.575 cv
353.132 224.085 li
358.893 219.448 359.804 211.018 355.168 205.257 cv
cp
246.841 121.693 mo
246.841 105.881 259.659 93.0632 275.47 93.0632 cv
291.282 93.0632 304.1 105.881 304.1 121.693 cv
304.1 137.504 291.282 150.322 275.47 150.322 cv
259.659 150.322 246.841 137.504 246.841 121.693 cv
cp
0 0 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (\700\753\745\752\761\745\751 \705\743\756\760\756\742) ()
%%Title: (Vector Running Human.eps)
%%CreationDate: 3/1/2014 7:20 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",kBj2Oed]hWTkISrgE$cM,E-diR,f*kZ84Xjgp4X?q!=**r?8@`9iVDkZ<N-d+h1fO-A"2LkShjm1Z?G&(-'bM!hHfRYgPohB
%FM7:dElfd_H+m:qs&oC$fA4'bRepOndM15,I<Z@4#CF-Z4m_o%3iu/\^KfLf<GRq-ekY1n>3SE,C3=tYXg`'<F8/I@gHXD,[_f.A
%n"M]g"_ET5\juDQ2gtH9A:U<:3BPs/J4Bk'?iZIB]W']bVsA)[=>?iri;YP,^g5]+DJ="gO]?`(aC\IerK1SOoD$K4pn$.in<ip#
%H`lbp05U(9DrBOB)p=+g6iYAYg(-uKrB[VFBQi*:ke"u\+DZE;G&-XVW9\KGL4A@Db>L2[W=<&6fq_N7$9es^9/?D#/jAOKY6$,n
%VLP]2+8M8JP6^VB9/cd!ROn=B5<C1#jN2H9p8V5L,812>ORTXkrP6\mJ5>=+OuP^^iC14U)h^$]*60`0V'YpZooD'e$o'&5@Le>j
%BdrQLZ3X(:6\!eks,,7%ZRGb)%"DV:4UZ%bYSU$"8oJ[qr!uJYB]_aEpP5lTpSQad5e"joKH,f7SOV7`Au7fMC=R"[.'9:p7k"p`
%^!gp#;n^Wui]&KU\.sMfC3[!^q\A+dG,%BI]4(T@o9Ll;jLNWe/rc!/q^'Nj4A\5MdWL`c9Zt<^nE4f2N%l<D4dbBD^#j%8]tD9l
%A-9l4<l!0jZ]Qj?k*3CR(M-e4b5Xm-^Sn<^o"cGba1YnC7iO+HV.>iu*amBbmD_WY!f*G0J$-[?Do;EdF\\]Mdm*%XaC<e]>!ig\
%??P02br023msi$6hsmJTee#QCg?T0Zg[13M^]-/mBloBQdbCuikk&7Z)l;BNn*nAFBo\L)l*+6i6QY`@P,;K"G3?'M&DGeF9Cc<^
%/c?"U4i..6q)p9,^epPOI(J#1)7DS3-0+&XXkbD=X7a%m1>cltg9k7D^.@hOC&Wd(C=$O+mch&Eftuh767:0A.#h*B,mfg>$5HP[
%S,pFCG,(\j0)maX0-:tOo&/-=EMq@R?R-Mh:Qj$-CGuNGmG54PAoH<d.iidoXgB<`K'97WOF%**Ru&R>8Xri^Ho\a*Dq%smk%V$M
%4_rX?o$@+q.;6Y<$dGD,om0r$qH$6sfj@EN3UnBKCbu0A,F8#!Bb#Tq%I.SVQfDDSf*nibM`A?sbr,j^d_W.J#h/>/>]`j5.ik/1
%](d+@DCI$`I/P9$&?5_4>.RTgfTuI+i9aIi"U?IA+"!UQbOF-\QTMB9OONB-Z]9(:f)'U/="C,X5;$,Vpi6[%WRj6R%RM;h+sa8^
%H8RKQrN+[eoYNM_E(UYM!QN6JpohLeCcd#)BAK+34Zn6GgS]@\T=*6(9(U)Z,jj<>9S#XUg.Z5pIMHP5YOOKd[Ycp$pL[oS<hLU5
%]#ej6=kGi")\cs[S8_`XWGEYV>2?O=OaVAIRZ.@X_F3F!9S]uQ`UpjT9ddk31.Va/:.r9&X=9@Q`5/[%$q=@2*a[YanlJn999T*Q
%)V"0p%%8;%YAR+-d\2Y)A?`Jkj(]Qof$t5qL&GG\#]AXTA!:M9bJ1VKa0gB+eI-j8@?q[kD+=AA29rbDAaSHqDLG@Y=_Il:M$q14
%<5n7J.Xj6#_o&OJU"&u1m[rE;e810a5u#.'Wc:b<K?g]&&"cIpX%8-U2/%C))-K8%&Y3glX+AMpTIFU'0s;BK`;4#5'j**g:b>4@
%\[hhQX5QWaAS0(Z6ka10gnZf>qFinfB$1'jQuXRf)X)sY=.NrQB$AMY\c96'.i6hpRSm@m!(1D-g]T:)R4\/?DpQXnS(Vi$B$-9X
%"0B%BNL4g7cFZ[A>bT/2P<HArrX<!9B=14lpV6TUDAqo5j48/`"/f"GQ3mWFlo.3-(XSQHK17`rfd')A68k=%I*>d0e(V%`Dq<Y.
%UZ^QGlcfUQVboic2(%'-CD9Vb)Iq893[Z<RE,`oURRWMV,P-$p2U8_E91(P$X1X-I$[VEpl%[1GB;=i0%EuRj7J6q\FQ8g$"^D</
%_qmte*ZigH`>YNu+'6)$WI&hKC;S5?0KtE3.PTmjn:n&KDtB$-V]E4(N)''o@r#KBp2+p*rB]gSm7VpaV$=u'Dcm7@^ngEufN+\X
%9__r5P#JG"s!c<Rs,:7(f]tBKK:QIU&W?Zo2%H@W\eF<;;lTEE4Sa9IXau<nlR4k^'<`%m:,sY`!!W"^o-0+RI#Mj:J7q"d[/m#0
%_4,+do%YhF#'[An@8o=r2V@&*6`W5?)p($0,[Nik9Y<?tBh/32??:(/&Is[Tk'pPo:88DKSIOn!g#7>sp.e!Aaf3d5MUVN9NlO@f
%Mj]pXhmRfRGP\eo$FuBppr8_=c^]AP[:TK1Ho=$Vep8tXs&7jKDK]sY-J[@[b6>$UpM,]MYXjhn$-/q@hgfEFTFFh0.,QSbZ:5L[
%(Z%ilnn"`N4i7hZ"Vcb!1dc-r`en"NR<4DDUt]H:Gg51>O'6]c^`W:F-:I5NdYOlr<hZRNe$18Z`EodTMt,8=1&e\5,!#H=/#!JK
%$cf=m])@lMm4[Ber`AO]:TP+u(;Vfg!=D<l\#>*8H9G]LpC`Jo1hH6_>bD[-KB5FOEq909rbbo!kNJeY_;N=9XkaIk#@WPIMc&Q*
%0_:KJ[;Wgql0\/uQi5$nV+nANn$[!(&Ds8RZIYR=O`OBPlj=`?9nfF-^<!7;q.OOcYAQ%B/>C&$$-,NRRh2s180b!%e.to1VF72F
%DqMW0&sLSLirUR^jKFRFNL6<f;1r#7Y/(j`rVBk,=Ya]lmA-C2dRgdq.d""bRclIil#eV9["FO$Wu^S&]>0NXlLj,Tn<-./[6\Qe
%EAafICkoD"Nofq;X,aB>/C:ITl*qY^$d#+k0O0T,'AqqRA?_5mj(_QpnMTMEYqA)tCI8,mX2>Sered_*obcrXa(@Sr13h<Nqs^tS
%G`L43D9`l08u"pB/t$HZc)A%!YPfrt'[Z+L[9c/t:So,4APm5%0+,gi`IFll2]sg/'#+I=..s(fM,L,]dpo*-SF)6&-d!_%ce`>2
%Pkn,D6n-Q?WSuKhIUuoL!-;*%Mc*(^QkIe&jh<,H<6H`\7B,/I?^)aoQl7Xp&s\[LMt2)@C?CHF&%$9;M_[.6k@XUcf`)&f..s(f
%Mc->_dj&U?^*jZ4\,&hg74HZ@kuf#_?^/4Sgt:6A9VYBX+_j[W_5BA>?6N[mfgneDKSSe0LjucIj/g(VMI0K=5,qNYNha@7lZ!j)
%=-8KcBo2J'e"SMAU<Likp8>D9bd^]H$YEY5EG`_'WSlKB&"_"p[@+Taa]JpjP0U!aUY>C>2H/1=b1_eh1TK7FWi7@47t7kc_)0$2
%5Ss>o*<=BNdIih<Rk:B:>qfJPZXorW);cq>"W[;JU\>/ln0r(lV3(cup6pJaXh@d&f?m=&SiM/,:k;C,Kbp;B!@=TqGY?.bENG>j
%_nW;dr,2a&_gbbGMp`(*\@nTP?2@h8mrEQgB#.cm*o,j,ff"bG1-nc7llp<BT+?i8Q6nKDNUWas*rW*PX]aJa2Q.B0-RJ.^/Wf9d
%I$lhAkd]7qX=%9_0%Pu\n_V#`Y:H,[5>3s;lCEiNV[n%/*>WmJqNNS+CRc_Gr3bmCYb#qXN3(s%T8@F'lY%as:gc6K]Z:F?+6*DO
%Y[Mf@l:acbK/Z7eVEc(i\M@l9E$ouP7^Z01K0?q,W)E.4`PB*_DE75RnTrp4`!aUhY;nSS#R<dtQN(YB3K47Uf4<%jVVga;hsC:8
%+$9M9$"5DukJ%0]ksh6Dd_`p9@)lG"\4C7F^9\W%bg(TKB>2ePT:Pf?Zt+@B4$3&)SbZ$Gl8q*!S`"@dfpV;>1S@"KYPtbM!XddM
%d9,U9o!,.s7>XjJ=^((sDH3HWE\d!:)kAlXrcSn3AUZA:f)5q[Xj6B:2mLmq4W?Y<V)j?(/^QiU#NKQ,eC-?Ajq_jVe;2qqhksql
%6T4'I1<G`Fdp<m"=($En'sL/rVk'*Fbt]c/XRsBL8uGa+O$#"]D4Sq[c=U9nf,q!oid%t^2G*dYZWG8op<R@JB@gHJ]YKq>m6AjR
%iF(.C+Z6FA.E=<tJca1'>OY_1SJigAR($e09epR0:bn$\2l/"kVO^7G:?T"!WI%*B&)?*fLOM1`K+d(R=dM3faAn$_CFU7<bs/dI
%it^;%bPl$g%4iW+in@^KmkXd(fuD512dW4q(:irJmD@6LbA?3M[dc--GaWE]bVid>)_\OWQeBC%CuaWlYjjJ4=nMG0FO)k,THXW'
%_)'V'82kT?ihg"[^"+T+r!pn$fYf%uTLaT`=g3b)BZ$VNRj\n'A($!([$lW\>'&cUk;8(8i_GPu0+r3WMb.MH-72kTc6=u;L2`YO
%@[\k,Ga"jU?.6l`GR7MXJXHhbRj&iMn\"f=/=Aq6RRLR%f/0UG+!$m%)P,bu0<+bS#uWUlc9B'*6%Mj@Zg6sf>W`0r'\Oo(VG^#C
%XuTOY%AV"D[Gd0$P5aO<*tE6.otj27`BQ4N)p_OCIqm6sdSTlqg&QV7P"s3!?I'IU[#t.hpXuHW:hCKs1g"Ea[X\&:)-TF7O&9-u
%CIAcRBoIA%m9'T2nU%T>a=/f82n$`972g4_(3<#>&rs"Qks!*<f^`i#@iCX3S$e:hbk<b<=ombE?lu.7)eSsaZ[Iec5/qC\A%%G<
%EsH9bO"h+@(hfTPC5&0`B(jnPYg6'j[JHQIHIZ^FER'lb]<Yq0m)KfliF("Pe44BEBZ:LY4)D>4KpL(`O/m9nS$6s3U_-P#5?m4N
%;1"==rG\eRrYUCWH4c([83a8c'oCPk*a\176@K\R6YbVcc+YoWqb8"&DcEC'67_Q$f=<<X&kY&Gd5?h'e<r`9)IohLEe/GB$p$hA
%^s;^Y;+027IgDiQfV$VAi@JflUkB3RV`&u6LV;_V$PrLoD[P?k3$Etadn)b8SV7=E#?U8Og*eQ4QS[Ug?:C;:l-<Vd9lfqWe<jrj
%p.@dGdAWQ)e$NsP4&@?P8V=(nZIs67ioD(,i+UrF]m/l*DT3L^V"uTgn`/+pB=;&7cAg;=.n55\2)hl(B%Gb]R[[H$s)Zar!@;Mn
%c.rM<DWVuuZff>CcP6_<0r=#;JX4R)\X>H:1ZrB4gru;#hFq(XDh(,TX:^Y6dePiDUasr^Benr0FZPN2?EFK9BD1+TYic@"p7:i\
%^6)8=DU&V9$CE`X\.Z.CR'ZRTQN\n,-6CJ7A5(7MrP'^F`csD:>G/.Af30gL[qbU-Q'-OEl.5.E_6;regP,UBY?$ckl6tJuAmN6^
%G>C=>$F]!@csWBeBF?3E<3DrZ7Guq1+k,aH9:e?adV%S6UPkj`d`n<8L@cb^Xak=VJ(Qi^e\d#cXdCH.,p1`T/,[,fU<V+a:N3A/
%=,1[8g@Y+3+uZ"fMfH/mpTm1f5[2WOgm9W<UY8!)#NKQ+n[H))\fO_Y,u^R$N5ob*1hg@0"lqu:5L#*pTbF@Mjg[c;-kMLgCr'H^
%2cc3Nj(]4Clu*AL2,<hDg*EZ(;sY??nXllg0l89N(,KfFK!`(XXr1L1NOJl)13I'D]#=c]q+%pC%L]8lfq1sB<=r=+)J2G3-SqT4
%VA/u]9$p<[qV*N@&?Xoj<f1dlE4ot'f@Lq;M:WVWS)'9!Jc^Pm]Z<E"+6,C2dY:W^qH=iNa_o"p&3*i4gkf(#cUXhZg0ft?D&Vck
%RNo69BbZKEpXgj#,i1@Jf35@<34fG(]e<kB*%)>31Z:;2j"T`7Z,eoKK]@Qq8_:>S-=/qQ+/50>]IC.+)L%9U0,pE\V<=HoaRkG3
%5?`uES.W(E51:7akK<!;e#95$jM7iUnh"SUfUM<L.8$I"0[W;uZ7?L<?n*"2Q`TDC]MHY5X'84=M_(ngiOE(h'RnlQ`(Oqc\UGQ-
%2(b&c]5]JW>AKF^M&Ua[mN7W`P8_2D(*d=Z0uOF_WtQR#A*G=.ak4;K=+"rK(>9H-RD<ZF*0e@1'hS/G/>=RQ0=cg04n0H,ben>H
%Gu3F^g=-,]HCUK"`FB^0#Q.8h*qM^EIhMI`R_>2t!V-amTP6M&*n64.FMh)E:-,3QS,1Xm[mdbJ[FA]`ak!\%hk*N"gn[MBAgOL"
%e#1mJfeaZB1p_*abgsi"*'tt^??na$e_9tc,&^AH^c@IXOIPSq9Ll_g[=a=npUHeM4n7+XD!PRDGsF!#Pud4C+i-!=37fJ;[-ZC?
%Ru?Am<.eu#"R0f8gU<,#gPt9*8G(-H7n9aDm6/OE@du!<ce$(`Am>5rhuA#QrR8Lno".M4E.FX^q_1lRZoc%3kqAPYF-SZNF1m1*
%bBX5kjCaj-s,c_,CcBd$3R)E2eXGlg9X5E+#Q!CAN7'9>s6O,iX.Nc!B15EsYP"B-Xf,Rh4M:S^%fOf/m6ujJ%7WUTF9_VN^!gbM
%%Jj*PN4MLK7!en!huBuScf*>sGkQL+[Rr2GT>"F(`kUKUIJa`WgVE`,;NtRXbpdoa1Bn3,.8tQ&=6g<9gU5lFgPm`[ipo!(%XJeY
%,#(n6Sn9^gk*J#:UXO)hRtFR4d!tsP9aMg*^XR=l6/$=jcsL?m4!*uc<gdqC3'M]qCr'D]fZSkl!K6,2%6O;&Zc+h892[\@37N8f
%dqP*0hXn_1T4*)UdCA^fkiT5YI^Ai?=<D!`jHoE6ndI:'K',#<KYFC05%n8E>:H/=M9%g"EhUcigTgtVk_!g4eAQjZ!WF1d9((Cc
%F%^TOO0$dY7lI\Gl]3%?RAUh85Q>fRPcg0_/Kqq4_FbD%=3Ie\=t:R$6:oA6j(ka"\PN*a6%@7V;j]48C]8rlW.4@+J*kc@?e=fg
%!Q/,bHnK6ZfCj#h$2@o][dOE&Us/t%BcjkJg)bF/c!B["pc!;eAYn4Lo3GV`h_mljDe'0$lY.^o?$SU#?jF88Rs3PJPY(kM1'3=E
%I<k>JijdISXT"il+;msFPn6s,g8PT9_Y0X+)ZX45*^,H(i3L-_20Bu^.(2Cdf:t3=8=\nps/g,:VG]m_^ithl2.>noc/!10O+,Z+
%rKSo#(J'Kl>e(rDe>BGL3V?[#ghc#o"Kuu8LU>F)#N=SUogs`&;Nib/6t=&8\D!a4FKJ=:4M3H;*7Z<0qKG\l^YTQh>)@HaMN)`l
%2o#g'N$>#Yp;+L-'UF4a`r`-/N(K&sX:P2\cG]qEmiS*pbP`?ZP:/d!1rX+mIq.:S>jWO-hlb;M>0?f-h^;f\:BAT7X_.Oo?lZ9-
%rNOkaCqtr<p4V@Man)]RdZp.QVuj^\Ue+!Y<9Sbo</:+*kgRqb@P:6L8gpl5++N&3G[#&rbDnXd:b$Y*PJM.?H$]/"%ojtRUP[A?
%#`S>UMr(Es)%$Mf[>Cj&76%5'5dU;+.O4q5ASsH$m?'_V:.`-d0>u'>F&pt6*'7OPi658.M0b"u#AH:4=MfapQDLH=m=e,9kAYpr
%G.=aXa4F30VsT$r]!#GRWj#P7X6d(uHaj$4mJD6qo_Z=]",CdYmPVhrlpY:V0n,_&3leYZIb5[LqQ]Lt+ro3=@G!R+FPeR=W.2@=
%kSa=V/m..<)FE6I.\3qSc%bVi=6e?4K<ViW1TV*J]b8hn7b=H\T@fuNHOKJm@CNUBCS))PVdX;CdiEVl`poi7HXRHFT&Ei/dpBA#
%7((kK@uu`8-&Jnp>$<SYM(!5_]&SUZ*nFN>_6;9^pbQ`_Q'N+@)VQ&=>0V4mlI3RN5::THUoq*1bn=PnM\GrIkA[75[GKiO;sQ;5
%oF@(J;c9O?Q&3sM)>Lr3O%sGVPY$(1[Rs_MA@dBk1^O*u\b]DZM&P2^fbbn],;-hBiW8Ju)@a%.Md$/9P[+0)B4.Th;,DB2b''a>
%*-=gM1iJl`$$2PFQXY?,cJ+od3A_%sVisg'&S[a5%eN'n]bo1X=uNc:F_b:HUOMfDfLi>PUllUZ%+)\j>O,_1(FZ`FJE09ZY8ltG
%bRAX6fn%?&,]UIt2eq`P[JiHq]WJShY8?oMhTrEJ#\./oCbuC)j!HCWOjqqCqE`b[<Z=;44.U]"L"h9/8s$4[,cRK#@;icXV,b8p
%6u*TsNe)#QZ<^KsHsYL_)R`gh1Z&6tTUP@e:,CG2h2NB/q&/n;\?2CD!VI9%<jN/SNgg`4^t>/D1%A&flK%JT/'3BhGu.C^;%rBV
%YeCPCB?=te3E=cD@3uHh3Dom-YWEhH@6te/#ml6,dc"/FY_(c1kE!VjB?hl53_$Gk#Kj/:;fTGGB-fu%672O>g9n)GWL6/#M!T\g
%$M,TZ:>Os#*i>Ck_sa/Vno8_i;8Ys[U@6V(h:%;RnhG<"kN&EiQ/_V8CIY,7W:eI5RIkYtFnG$Ur=F:;L9?$JO8=K0\KML,BJtXZ
%b?@a2G'i?.441J!/(/-t9fghLd\C7dmHp(Dh8TV3H7^H5<K6:`0]\g2(/Aa36Y2`'0Yd6D*aK5cZ^PLn$Qg(sbHpUcSWPk!0W!"&
%:o:6]I!NoB@E>(-8L7T62-i,X+CWd'`UXsiifuK)%8T5:BU"O,Q)ZuLI&[:;q;ZW.kd&Z6l%)JSTfH73NM9r/EA'n:9>(r2S#>X9
%R;Jgs.=E2(PF(E'.;O?'OWnL$-dC6(lNEF:*LL\aX&m;`F@D?\`#Z=%p%'[Hf/mh?5!\f,Z:<GmNH1rK"Lcp(>iqnG!SMbLl2<!;
%HubF5oC3RbPm*eGIhkTicR[`gR>`ac(/O_sMO*u%h,aL+-#6:'Wjhklc=KO'!<#R@4@cak#-1biQ7lT29#Aai5`uB=D\,*lX-3,h
%n"NYmR$(#T?9-[f/^3uUF3qL73iB8<:/lE7OYR^iLB`]'R/BYD^!:0sQdTu,L!B<_-YB(;(7!K$:sW>hW?\T!?c\IY:N6rWZF6_,
%+4ki;bD';(,SZYC+SA"eNN3\m19l?6Usu2*lEhlA'!!n3>C@md6+PCSJseAk[s-87?ckW-f,l%]/(r/dXZeR#h3,jE`dQ2t;.7.S
%d/2pJGZmIOp[V9sTR[g4^L@[]64cJ?g?dsC&(:-sC5oG6?IfY>7N2`<?)e`-?JtnOWA`6Zm>p%#NFXS9@f4V*l^Ll'LqI93N*^H"
%,EeY\R/hL=,<;aiNT?(9RS[l[?',i>jQ35tAeaW$Bqcb(AZ&c$>a;%5fjpfkNSu05&u=_%]/8@-rP5CqpuuABBFZ[0>BCQ'+ce.<
%S6huB2hY)sXJ'a@\_b);^<2\XG5Y=$7&aqgG3<npLQZ?YJ$.;9:_gCKrr1C>de;fm@#H.0Em")(!HJ4pU8f^*%0IkBbH'=1Ca)bP
%Em(5,n`s(!0MU4<S0`@>9!VBK0".$)I7`+_\]XWkX&l;`[p&=1<d%]dr'd+g[/JIS[:g9/C<EUBECI24H*[mIFSi@=`,n0#I]ji&
%#P>/iMMa`;&E\0/o?QkakT">-gZgt5]9DYkQ'uRDU5CSn'j6JlP#JAs?aWP'ClRJh/+/6qF:P93D3X'u[!d=pD6ml<D;`.^7^TA-
%YO/AnUU!!UWQW_L;40oAL-9o7O"o3C$"4ceGKnCIX#nKWD=/ELUUMrM<S\tm]VHdXM=Wg\)OYJ2O3'cn].D+pZ40_sh=B<9rXlU4
%_VRjd(_Cu9UY.hLo`q]fL'cbsos*=:0;4T<\hoYo*7TFl00q[<6AJSMZm6Z<*r\3^>PKB0,?MJ4YguaBT6^g^PNHS_ej.-^<,4Fe
%4^1it:t2K>=$&AK:_!79mBUARV3`KTqq?bGT+rdAiHd:$Ls!QRp,;ZG0Gk81gMthlZ?u&h_Wna'pK)+u(SA>6G*ge3H;?3>Q;?8E
%So<FgS@cP`XHi[,JiD"6KA4RbDk9.Akri2+q0`5(>&RMU>FWo2Ib4;+gQpBnI]o=q>'JOu^6TkBXY+eoC],'p6RZP`A`m)I:A'"=
%IerF(cJ#97*c*YT4g%l0jnksDZ?@-.TKlQ6]"?0M4rmV;Ip)M0/hL*V3]ha,oYK4tj5BWMX6SMd\,O'`ruDeP4gCS#kN6rCM%fUV
%or$-$_i=6AdA<l-QG9N'So9$[>OIh2(93::LKegq)^eGjp".d(UYTAOjNBWnhHF^.?TqUW)f2%LO1*UahsOM1p<J`,eL1+Kac)n@
%rJe"Y?T[cAhN-rFA,FjR'*!EYEj0Yt/M$A*eeg_.iqqLtIC&@VT%c6rN`K12GMRTRl`V)=/Z`gEJ$ZNp%Ndf^qu$0@9"eOma%ss6
%c'+\S=gW$/XKc+'cF;otfB8.df%h_JQ[0%3LR"E_HU"_8o4ol&cWhkF=F'dTXjXB0^K>aQEoeIVq#%)4fYd]F>Ns\Im=k.C43=d7
%IGTG]4icuGm%%oLQCAg(CG<j'b=?VHMrAu?m9RdkI+Z!A[^!Mlqq^D/nF88/Fo,*Vq_?jhHsKj&g\A/B*8g`^q*&]RKdJqm*o+bD
%q%UIL?FR2?*j;3^#><GIIG<DZln>hT<Zfmnmqplapt3Jn!rV%.j[)P3)!gt+D3+ZuGeCF&I9M'.q*Lt9=PWg$F)sN)gG"9;>76K6
%D_=*$-`<$"N8?^$?"n\9op&!&WA3JC]C*_Y5cXM?8JSt8<NtX-m:30CUM'S.p$*-3G;\_OnUch<pNkr*qL,&`o'jVZc!'N6Sb:q9
%c"jS.p\gT(m`,*0p#MeAA*q='j\mR>h>;/9,WkX.d.k+rA1tT$pYJtp\#S?C*GmXJ#7jm20(,<KD4E_mTar5p@r/p-8IOSa5;$8A
%G'>"?fW*4U?HCu[qcYTQS-"=\q=VUg\$[<`8WNs[>?a*-r)Ph*4r@lNB6:<)'CfJCn(il-3e.sP]7F%.2Es+fSiYb0T2_qpcYG/X
%K@On@>?.%8%i,u446!;$?@(e7K,Y>US3B`oqEsNqClR.KcZbs]Nh4u^DcR[c/)Ret:0s/8f';3aBE$3.<EU!K7tT^6#e/saFlt^/
%K)P;cKq7d83aZ;9I-;,X%Q57c;:f2u?/1(Ph4EL`4ko>0Q27!K$N'&"1WNqm=mN2Uq/9%fQPPWNhQVh-nAPSG;`T6Y=9-u9(=i)K
%&*J62V5-_pV]XOt/=oSVEh7S1ZdWQk[l(qP>1oqP+.\,+:VYj7VmL0bY568kB%:P[_:%aU@Sb[+p3)QjXZl[6IB`^!d(!1r[GQ-W
%LM-)E5TVQoOpnpkMk*qpf"EC'WNq"oFru2,jkb<fY]CSRF1us@s&f?pm@6`nDSCQ!/1*EBnD_Wb]<uhYkWSM9>P6W1HWPK6\),`c
%h5flaIVSEAXef$l>:LGnQo%+l\[B"t51aXhXZj/U'\%WfIo'(U"_<OCDVI2nDU(EAnLg(h`j[q$k6C8e.Ms4;'(BfI/)1"9i-5..
%^MXQdT.1*'So7$SMTWE9eRoh48Fl."n6kG9])?Vn<&kd:HKho'(mtS(0%P@Aja2$he:mbg_s3HANAb9"C:C>.K26:6Mn+a?pfCt]
%H=8`^o$d1@Ns'iVrtq?Xf$n@+krSbEMc#\hU0kX%45G^Bq&MZDM`pm2kiZpl1*`2kG72h^fnWA\X"m82\/Q0H<"N!-),W+)<AP/^
%qT1C^T/WcIF_%&IG*EA6Jr5[BV(AlToBQYP=d0l5Mi,?CS%Y%cg+7AZ2<l4':U]E7'BSE'#J7$ulHL";f;FM[RoKCBf<r+5='mJK
%+M7:+rE!tk?RojR@PR^mjcAkQ#K%C8Zl%uWe%!/cW_rUgO5mCkH:4W's-/_%V@OH5Xi.0h'H%[$KDZEr)1ARaM0"<hB#O>OA8Ze-
%[A1/\SM/[qU+`I4]`+)=V9XmD6tnM*cL"]%+A/]05"n&_CcM>@.PSt3YE#nlAV331ek3pZA?##>bB9!YR6J!`q_1[2*]bNaa[@Wm
%Itm8SSZ5Z?pLn@s_0*Beb"4t6ra%KXR;'e,Va$@1nT<ee9h$%eW55dgBME"$o>,>BM40),O_qf3=k<s%<"@g"BQ($/%hHJd3,qpn
%+Y%>jSu4YShd1b6hR`BQN+1$=O-b-n!A*%-IAV>)p?qXDduEMAUUAACq2]l#[OF7l5M-olm\m_<_E0Mscs"mM*i`uJFD:`2e-YlX
%k<Gk2:UA*CgM:`rc\[XfiVpm_M\eV/eL%C?KpDU[Fa*62C[W+*gXb)4XV\</VT&*VX*(e\oPLX=If&WDq+kCs^?ogh(CqUj#E-lj
%@TqLOa/@JW_</('jWXlnq,!l8'5;*Oq6"2_WL="CY@mooelLs%Wbn.4hL"auV9ZuFqk#B@0iXf2QhN`D(#u-@j['=(?Sl'r=>$j>
%QqZ!UCn*>`2%06GH"t1b<k7rU)M^7qcQfj^rUY0[E7:s^Zat.2#MIk:`V&S=ou25r+%hnb?@TZ^l,!5^]3bc<.U15kg+9/&<)\K_
%s5W$+\[qa1e^C$V_ZMtR)M1TY)11,l3NVS]GlcA8QDpCLBh_(M*3r3Z#Jl%'*B[VG"fJ!62Lo77o,q8fE4>]9r,)f+m.DiGJ(3H+
%io"PF[ppQs<kML[^,mQUR+;'GCn=Z;>&+N8o@"e)IK.ElZhEOILs4Pi#9i`k\Tc$TJFi=/p;YeK>K]k'USE&@HmqF8b=I3Wo9Thm
%W9g("a[0-"]A`)P\b##cqF*1&Xl[PkbJKs!Y$'2hqUXrokAl^ng\Ud._<nALp(3RgF&uUc3PQ?u4T*-#IHUG&lb0\hBE#ffX/N&9
%%sKP-?QHdJP<Aj(h01gCk0?,JSI^eUXIX7>osDIQp5Ga+j_9tYG8C_-,VsLWXk,X]j"8#npOl.@Z(A%E6N_;F3Y<=c9'3bAok3UI
%E8@f9ht1i$j7);K7BF.(9"m:WI[$<:Bru5)Y4[6jrbUo:r1XG[H3XZ$@\XClC4C$bB`?R#[aeYf4oX/AHhVjFhX]@:5ng&fpeK:D
%@<H1_j4R?'H1/SYBVoA(c)o72124%W[G6Wk@je51,EYND2HR"k2r1CEHl4Fl_.=&+@cq9sfl%)%rNPo#P`!^-)b-+sFp!tV?f(on
%*\V$TI_,'D77ie^Id7_H@/e(#T^q)ph2l.Bkf'Sl[;d?*j!ct^)jp4mXQmg3gJU!_F`'>pb7+Qag\1&t^Dq^7(Ih^'D"$>/X1W@<
%V?^td7A(K#k,UH=bN@4(]:YbmVmk6+XFHd67+bWtqgcN!S\*5d@N/n*l/qNRO%iod+b"nb'0d,g4/]#BZ$.k5#J*$a8_L,U)/aoZ
%4[&q,AHgb.1;?t!YWc.$3Un"apl8#G+=c9^]sdduc+WE97J#!>s7UlOo(p2ZBk@<`@11]3h5=W4qRPGGW="Ru0TR8U[m07B5Rh7r
%OoVOa&+ZaH&+A=7fK-TlmmHaN\no(!mjqM3ccsdub*,_Re;Mefk:e^1D_!2Z%aK)eog#VHpGWm0"=L4^_t!"5XaaW'HY5$'MV`nm
%5.q[>G.,aG>k\cP9A4UaDctheSutP.,U/TKF^KS^3E^7VJ,L"%]uA,pou"*@H&^;$q$U$Cb*UDOc^1JSqgcA[YO!0!<l2'3kHs]d
%r9AC#\[gAgBEKT0]5lhJI<g,nG]4bRI8=77R7k$d+Br0D8bM4;nG_[lX,XSaN!U,fIIqE*!gWW&5)f-f%n1>oZEhX"_s];O&=oHS
%N'eHulAHd0[.WJ4C:1J0V[@H$OC)q`Wh(2XlYJD-]Apg,p3%tRa4m/tM*tj+F)SNdmu!GZ&+.O-o&bk<Q1_;[Q:H(%SQkD3M'3LX
%Xhqe/?<'e>[tgFp_neL29?$Y^rBnp8^4*#&c?::;Vs.,,dA#jNcY<'G>#2SlWUfg]i9&8sEF.<\X>$nTqW(NHjE2Pu[%p/jhe0F-
%2C`'/[l2f4pRg8eA8bPf_t-KLP0/FGCMs`mCKmjiJPmNHo'P>cQJ[CoCV8C`U92Y0@Q'eQ#;fa@QhJ^^[T2UBH7l6o>;%WF*j_cj
%:u;-F\FLd\/Jk@rfuG]Df.]_/hckGSE]@#RIiLQm<m1B"V7#Ddhp3%^*WC0ur3k/4LlQA9Fo.rni).Gh"is&J#k#/CSqUOd`SDP\
%C6(L3*EJe\mJ!Z>a'5%6o69W:JJn:Ba83dC@m<%h?N15hm//(W:b25Z5gR%M3o&]3lH*HFlp9su6<T3#r@d'"hVGd9@]akOl_&RP
%l'6>PXT1A-3ff%`n$b2MT"+#?MX;A4(`7/J9%@_CcMR')bONp)W_X_o%70FoJ_[f<^\ue\nm0q;gMXYk"8"CtidE[hrJH?JE$;V$
%P@Gg2_;%0IHRnPM=aKqXZ>6YU@#[B2?X%s6]r`p0=?D+1NJC+r>5cF$_;dK2B#S,'nJ[Nuk7g:_W2a46SASSTp"S%mHaE.LU$/?D
%Hqo1IYHWYG>;-O/p*uWUakV\]T_Dg_;0gB:;IuCO^Kb_D[N=;;<G9KhZTf@t;%"N"\$lRGS.F?hbB^Dd)Q)(ECU=#6k?$9,Faq>d
%(H\SZ"`cLarNOkIj2Y9`=EsK9j)_&L5R`'DDm?]3A8+F:U&giZYQmN`a8YYXa_EJCX1DC&o%C[`hJ.2J)0W_LdhGZ.]Qn=qhH0CI
%.*Fl);/+QI4O^g"LHS[L^U#_p0(/^P`!Y#i0WDK-DlB%MS+YZj04=&"l>:D/rF_u3o&JF&%[kcr-PuOFJT^uU86)H*Xl(MpHa?BJ
%Nl>7tBWSl$>hHa)!.FWbl*>Dl?c%,:E<hBX.d%NU`?_:p>?br]c)V2_RG5RA"c-sia2Y/SnVm[q_W1VcOb+4nM62(\pNlf@=tm-$
%2K(7P7_3K-C?qhk0E>JbXYohOFL/iVp'5i(^9fclI-L$QrT9ih&h`(RJ6)-bX$o8PEC&k9&c,'^eBp:XnDir9+s@6,+(*WkJJ-V?
%<_eBXcNJ7N61prBMr]hbAe+6Lr34-@.,tP:>AL,jfaigmNN8ss5aF.t"Bl*b@1Ktl5Y5+,=ZKShK<[Fbd+4)J3P&?8rcV9"9BG&-
%<=FgX#4e`6Y']>k7e$,rQa`JJfm'rFp8RR$RUEn4XhJtn<aWLAr@L$R2LgI-g/dUtk1[tE2kZ;=f*dnNpnJ>Gs*,#_pnV-IDu&iY
%,hLnVp#k64<djMnL"Us&]phODfEksS,<J"+[W1'ii:b0clDYm'[^nHrg^G8(Gd%KddXrWGX'>71;C8J;0GWUs@Tl"%3VMkm4Bc70
%<QQ*ZC@Yqg*AfgXW2b(1HsK?g7$ejPqVe_YHa(!9>-\[2^AmuB%:_1r:\Xm"P#l"OLKiZM%+!:Qj$">V9C9\cNs7rlE/S0oaq6XZ
%\F^8#s34fFI=0aE32^?`e[Zg%W;(4Cq7[$Gp?N:dnAANsh!8DFD)B_u<=[oj_mK<Zq:bQ`B`,h2D4;2cqV+)n=^A(8YuY4SQ&Sc.
%YP%dnLXcXSL\93:%klKaHuU+s]@Y!Pd&Kh4Uf"fI%oB(uD1[eU?E`_0G_YCaV]W,j*3Du>IfigcITi_al[229pYk9/]3Cc!e(jlt
%rp1)uBB_cYqJX3>h+uoQf^*F&*guiTr*ZA-=V'Znop>:A:"J0M]g)e6\W-P+FFfc_pL.+[q7+!-JY0)ln(]4#$8fLMSlQ?%r<L0"
%(UYWO^k/-[lYG&%$VYSdn-IXjnacLNlBgXggWFV21*Z<3AC/;o4P\O-B5<L'l?6t'SY66icKifc\)q"uEu^[_O,G$T$a^rH+CRYO
%D,c#Vpi+\X0rYod&XA2c%GL',2cDmIg3t2<g9hjqrljqFmG%BS9)H`4]rc3o?Q<;bT<$:VSQKS0j33RuY&*PjgCKV-^H%&"KNjT,
%#SSiM`cDMHLf+2ALCueOqu";$m4X1+Q@*\ZYk`<*_!5-+KXGpShlK%k#$JXMf=`EcCjrr?:>_`k%<[#PHhuj-Q,Bs)!,MC[O&Hi_
%#G#p/]3Y'/l^+Uc@)[)R']pG"DQTJb#._kuEphD"X#6\76(M?HcWiBNo3k*9_7f-b;1.P6.0D7&6cL(QY.Xbk$no56N'2\/a_U*b
%QbP]9PO@^<KtU6^R9YHh]tn]J!$qAa46!-Mm'JkIZX2f=XEK&2b=I51pY\P"iCuN^DsKdNdbVtW,7!-o-,P:\KlH,A%Yi%&E3Rl,
%&,,Off-NA2ia6NK`L<Y>NaY<^<s7u2r8?"D>+H_A5?*5&jPID(Ij!Xr]EPuTkm`+1oZh[/HX6GG2"'`Z'_X1kU0_.bHu#QU28r^!
%s$a1P$CB"MlA5t][Y+=Q[!@%YX"D=jJa]G=\C,+FpDT2UX4-mWNAn*ma.8i(XR1To/$>BL)sL)&(X7,ud(i6di&_\;*q+7SLsS7u
%-MJUb2kTfobC#ZM'[Db4<rQYE1troP&h<Co4Qn1VjZ"KHQPOqii*QCu]tHjIL.;,6^"59I%<cL$_W2K3=/`NVIUZhU7"N;oV;?+A
%5t[QGZ+q!n&,(+YM0PECCqG'5)M<@<H&+gKEZ0tJSln/[bk9]%Y(k7>dGRYbA6m1F5;S!YjTF>7Fq"Vq(_3C<b9i`W:6E(6gP"BZ
%)h`uZ_i*PuXkC;PqI-rJ.:C<A)GIBJ!."eKHc7<+\>7#Ko)ahq(LD)E3hJ',GFV/D(PSh;1bs+L@D3K@.)=S\HL:^;UnCju6a+j?
%.B*`8f2SsDNUFV>b[(n;&D#jQnG$iVr4R(+.:VELc[a@gcm_V?Z`k._Bdpk*7Ff%XqY_s]Qhn+^3(I`N&o-n,oXiaN5[9UiIJgD!
%kT#@(-mT+9<\As'M]'FIqsnr7`kORP;AU&9&l9j<ec8];ApT=f4)24cmn/JrYZQL/P760lT[KKc):cW&PHH4_9!+Q[h(K2R<pOp;
%D+Rq(L\3I)n92E9TiogfAB@\od!nE]Flt$P:pXLI[a4JL2<E4X=M1["]k4_rN0?>@"\+t0Z`]!k(s*OI(V3m0[`0&g@Rl@00X;&U
%qCZ6Y*=Q]M7]fb)%[o)e@$]=pWQ/m%#%qc41&Wl)C)eamqcl04AO[O3UEe6U(K8j8FR!4ZbHK?/*J@NTj_YK1o3-E&ORW[E]D*!U
%1tVc0]L[cV-%'F!r5X]Oc,<#lG'M.!IJC_#V`Vs!rn#q<fC;&:IK9E>k=[mRZM1&EGqlhdCfeIP2gus[(p"tWc'oui)HQY>hb-qb
%J%bk&X&J9&040TC66tl@bu]=e.73R*0/+Ptg6#P+a=i_fnTQ@URM8bB7sPOTopu(gT%raUYWK*?iBM'q;W<jDYTkUiO^#=+miLGi
%NM?_G\K\7Fn\;\VWh%;Ie=OUnF8HTb^tsb%Z(T<(]<l*1Fu^+/J/t[S[eqoDcuLb]J^8UU8[r=^E1N-ohg!B9dO00O&_LZMgHnKq
%H=]_TQ=d!VM+a,K9qT&!ls!;;1cs&u1!Har$;MYiYL=sJcdQLEq.8;R^HI^-=J]2?^MF-+-nSk!@.A<k-P!W.oG4MS>DTR4I&J',
%b-km1,@:)Sa%B)<P[.AKO52S@hC3<_VV,NuA"GS3$fQ/sRd_.,ESJ;<!k[fG2D;IKs*IR:L-=L@A^?'hj`;BP_o(OVoWB:Gd:3Os
%$(9QtF2o(CW/nnL(SCJ6&U81bG\(PFFdl\1*9#&;#GTEDl8<7ajnVa_!Z3E,I;G<Op7UOKK+'d>>d1MQ]V#CepB&XEWR*WJ[Uk3_
%3!]Ri4r0_/eWFjA%RTk=#DSJ94C:>ei/%]0BCQUnT]ZKMls\ZCUE$Ph^.n2CJ6Y3FbMKQg<jm^AUC$m1>>_:*)b0lY^qFc=%Ah+:
%N@um$id;RELO$130$G[1j2h!]flEd_%Lf0EXJCN8:Xm<&Tei4S/c2^6`q'ol"AV?)oY:X8dZT5d[[E&7TdsO7E#)s@i<,IA*2YD?
%1Mi)h@2)u_23UD<:h4:^KfKe@cn<J$!qThL/n>X*O8t'jE\/4P=_3\-/j+`X=<@Fn/%\*qFYM'#o<9deLZ*=/$Xc;/3DNtI\W?%Z
%3YL!aG$0?dk=)`.L,m.Z7H1MECu=iZNeceLQ5[gFaOQ.1+["r)_29r`$?;d*/-jl9lO4iN)MBJ&AKOcA#9S"(!1:BY"Z&hKX5K+Z
%"8oES"m?-4,MDTF/51H!S<=S4![aDP7m=(u(EUEf"?9suSE*`+.`]B?n@8X"`FDZmdJ06D\A2Nn^^@>di*bVn+$5#3qs7]V]p7ms
%I`O["%L\cZJJ359oVgqtEqt((giI:dNPtInSd"_\Nl:hr<7p`^/6ko0M]_"B[EB>,@7%gN'qW3G@I/B/B<iO3HYaLFgMpUfE8QR/
%Ko*a%M`KG"TMS\*b2V%Sn-Ce'V-_<\>`-B'DaqjP\TL@:3B4'^6[F[N?>XYILp"9),L\%fA0g)2JQA%*U;p^!#Z[HVM*/]LkD622
%E@bPrN4<?mi_#Ttb-ao_V**.YL@RG==!B/t=MD:;X-b7,9Q?>7Damu_(7$JR>X'I9?sT8]b&qdEQ##K>/!_ikE)PkV/"SDs=@QO-
%fQDIN#PeGEG4R#Gm@#4,]?u^C=C@`I_WQ2BbP!]#$fmI"[qpPIi8XQa$ZV7Q\Ek>FEhWES'4!R`%G<$_Z:j9%/s.g!6q2>+6[";k
%fk('V_TNFpdYh\5(E4O26q2J_G"-ddDrsVE-chW\pcM>uiH%qDZ$bfTZI4YBV&('o]m*S(M6-=^,G^YC+h^9EHAR%6j`pULMg@3U
%HLVTq94XibCLs<.CZS/Af?]di0L\\"jn]kZPs`5Od];rJ9.qbfPih+$n)'8<f%#^;ODQE'8@jqc7[Dac/DaV>mEaL!J)36`/%4-'
%\'.UO^S'c\D6goaOlb;,q:8Z^/XC1/rHUIUf*_D]2H[*cp8@;]I-W<7p<'eUEp^"oD0=so>^t&Yb-e_XK!k8QCor(X/)SW%C1[>Y
%)sa\0=S_Yj@I#E#[`Z(\o'NHl?rc=C<.Dl]!egLgXf5:N^a/O@<UGXMM6/1qAk5ss,Yqp4!^5uJR]N^pBV=[(6je%K/l?"/Ea>D-
%:CN'm4]Nd8jeW6I\4B>e,ZRbG8lG[gU1>0WL_Ln4bS2Ka^6Zr"6jeR'YDErq7WOf.1<"frC"d8f"lO.kXsm=X$$d<4$5ERN1SkH&
%.j<B=;M>_P<2man%pc3NWq$5V-<7)(A4P%F8/9-]?^3+F#QgJ7;T4>RVtI)`($7;PW!&b,d%ZDO$CVZ^EF#O$&uEE'KF5dZ7i*Wb
%p9g(r.bs\Z6`@e*@3c6pT`T'%#V_*3_/BmLRS`OI19R5].Qdua?)U"Yfnr`0X:e5bYl\Kg`aaf>.$dKP`!V,GUPT`\WF3RW.kn(,
%`\k$<:n\Mj=Fn>Bjd9K\j=G$f\lA4)?G_pV0I+-sBMuf<.Er:#6Kq`BW\Ej%L/\b\1mq5F-CCu.'cVL)'.P[S!R=20VuXUr$_M0#
%"ePQC/ltcG0J=YL*1RqE8:gF>L4h!RGT#lAX@*Yr)(H7&Yj]aaQq.pY4eC\H,RUVUa-7tRH4a/Z<2/;k'[/E[MSZ5jU8Y$RJig>N
%L6f4,YRK<NV[;.P#gY<b%N:`AG>okgX$S:R)VgN()VgOS.GU]21q:^QFh#Il;rF7s5D=H]Tc2^[s*Zg2mN<-b\Dn99-JY$LBAa8l
%/LLXE6o30)*?aRW)7W'2*M*@Wc<UnI:q%Roi/UH_R;`DEg@n:N1KZ`1$?oUIbVS/ePL+upLNkZ7%MeMV[_k3`fFHg"Y[(@[L@*@&
%N+LYejP!G`%_P0'Rr%932V9WeDQoZlI[9B<$;@nG@/3-!]8QW`Z5jk%h(7<sk/jp";$dTaII)?Fm6Xnm[_o0R/=l/jdVT],Mm?!'
%e_(EQ+Tdkp@-l>$dFf!CP&[&[?6h'Z[So5Xm5TXuNU=.XR'SPaL[MR<c?ADVf0Ht;]aWV'_$_oKG1=HX*UPOOUiIDfk@@>%BF"4I
%iAkT71pJmE]3rhX-JH:re'ZI6.DCX^=9^ZBd12'9-BX=3)`9Sqm286M5W_r`MpX-sPjg$RUSeIQRB,]X_#SgA;`(elBFriHg.?]*
%.b^(6)VUCQ.GEh+'Xl&9RV\n5BkWRmYG0idW.oI\S/6,XmB?dGmV-?i)9uqL.RcEmAiX6'g:<jo@%a%ug8?[P%M]U'g0K".YDIFm
%.5Gafb[H&X9]/Lq%SP*QJdgDEBC5s)^O=g?MU=%#F#-6HbX[_q@3+_X!*gQ3*9uJph%I5M9$*ka'Z8bHrK4mK4.oU#k\G,Bc'?[7
%QND@I452XNNr<kk#2EYJ!tn0[gd/+O#^?[1).pks[c7i5+])`3/:F-Ir.OGYG*Jc,SJ0IO[R75&=>:9PYj/1f"mn#@/`E^C7ip)*
%Ld?4CdsbLnG(G:FJfRmC`FoY)!'@88gE\l7S=-K%R#]C6%BopFGm<VscI9RhdmpndfWc&gL'Dhb"PX8?YX>l[Y-"B<N!^).UPX.*
%1-l]C_PRd:'^[SDAGPM,a8I;;#O]I&c!(YF!mRO"iXWs2.;0(E*MB^.JdL7AQ3!*W\cZ8Tg+kGI/f<jJ.c!CEo/+$k+I,`H-3?D0
%ggOsO-nTSQ-VkDe6g\0=gE<11cX@%7;5$?[WT'I)8#NtH@)-&39\CKMUp*!7;.k5\1Bm2<oi&A5g1e?.\3cR%#J=6KDnmCCG$fk`
%9P?Fm)VgHe1]]GC#P]P$KKCm71!pKU[qYS,6T^5[1Vh:m3\&dmE1$`M#>;B4Z6O=%IjZPS2#C1V6Z74X!Hq9p?!9ZXfXXXg9>Jhm
%h?PO_EUST;'C<5,S1N9C.\=q.&,Y&'E*_+6?uR.KM,3[jiAqN>g/\O43Te<jYQn8HQ2s'\M+e.9oTPbr*Oc-,Bc>W@7"B-9*K$a-
%1pV2GnMIO=FW%M[[!RTiKC#8^fEU%qp3S.?EPIt//-G9u<fYIKR#Q[[Bl*O+LVdF\V=P/)o>&asn%gEY89*&1%c(O'b[<Mr[S+bd
%1b)&Tf@UT!S^Z_S`cc$^:&?asgUY3XHFnrr__KgSg:0kJX0N`M"FAY@Z<`QHVQ_)Mn)ZB*fFE%6)7Bp22K(F\"-EX?+B,^1W5JE8
%gC6W3?oq%_WO]p@FKN>hHhoR-44Kjf\]T*SqH:7ZH(qPa'e!F#Hi--=Hi-]O]?EiV].?flHX*nAm:l5,[V+?oZ(7XbQc!ti4Itk!
%b6*sq*2fOIFrq6f1MfQ>ZOGRhK=78'40r$!h!&'CTfZlICNO4!IqR1Ml6[#]<4[_Pm^W\\@1c&R:Sk[B4bN0qB@6gN7X$pTn4r3X
%3b;\<F;MBV6[(gdaXZ+T/7H,&kg&;4;!AH3XWU8\iEI5V*F'cmh)QL?)KZe&XfTnj(;@sL])1,U.bt-dJWlqBTQ=e!mS%M'VfZQ2
%]6(VOFd\Mg]3hG?8Djuk,kW&ZmP*eA<up]Ob*\fP4$]4"NXg9gj^C4*K1K0\E2RdrghiQG^'T!qM]B53,1,9YPM[!6gsN9D1N7R.
%83I'!<5^m>mZ7sI^*_WDDIhZ8h/'>9\:^WBJ\-t4PmM[&"?P=h),a_<E/0L+A`+'Ib3(h@EVE2kE6gd!+7:9*3KN,O":BGgma4r:
%mbHBl%8o6+<1f_mCpuo)2C[EYMrLa\C\gH:Hh'#TH^pM@pUF%`n$6sPhkLscHoILonJsmXA6a5,*1R0NhJo.9c;9+:7RnP,(@Qk&
%'JT#/(i>XRGR"^^JSjruO2#?98E2d`6DdHW%k9<]-NuWQ>s+\Z4ODF%!=tI)>h\=s!H1KJ?OD&9*$&&sK]eBN?rmX&7-DlGiL)>V
%U6tFfjF*a9*Yo0ZiR\VOI.Csg8O:"M^$QbpLI!0b/e.>)=l^Jp$.!ElgR,fc,op>=4DlL.s,BWq=T'jdq?c*_lmPXS]HFRqKQiL\
%N^7n<Q:asZNsBma2[I`C+%[hB2MO-);T@Iih`)P7*UHupbBP)tb_[g<SiABF`l">=BhM$/4K\]*nWYTO&<AW'CO>;(m\[NAiUL;@
%E/j?N%("t4KP(e?8!EG4cJqU8_^l'M_S[da"fr@YpNoFlCP7IS@F9@T7X1S[8)%8ei<(p>I#[W%jD'tnhQrk<FEFPr*`P6f><!P[
%EK-0ZY7b.E"Jq@P-Dj64T"mpJ-eA)?i01&Fi3Dhk\a>3L3oEl?F$1Q50I[t^nBhmOnBo]!n8W%hi0-KM^rM^=!2$V@"am2H.c:>G
%Q?91U#S6bE\!TI+iR@cs8pEAtnP-k&*<MZ2)W>+mP>?^#pcsYZp'`!od6<X]Ggs98>(uHtkbAbs0Llt57j:hql%GBn`!P=t!LWGK
%U">rIn/Zi*QL8-!hh=dXMtrC$H8NGO^3bt]LsC3L0"/;V"-eB@*U%k]YciZfhh?mb.q?<2ic8=f9*sNbfh+U^#/"`:je/Z%k?&O/
%n/XR6Oe*@<hhC^\N;3t-,d(j/GEE!1c?D;uTcu>/F)ou7!"[W!6-fNPJEIc"#6i.*!7*f+#W9EX2DWrk#2hKn*u".fErum@$mfMO
%n;rYJKGU5^D5u>MJ:VP[*h$i;F,,d#-;BmBnT_9,#(VGQ&!+8TM0KOoKp[F9GiG-I8&o<VcN`A2&c5M)LrZ8sOZ?WWBOM&_ir-sg
%91(hNaH4m`00&@[(l/EVODBZ-k4iI]-A^!".\H5p&V1c0eL,iWSajhNK^k.rj_Bap6G4r1_,AYt:R[NfpuI:OpuJEsGaXu:ppa.k
%nT!Y)`[<?/)4tWC_0CK(L@G9SQ-OWEke>/`/r*,14KpQE19U=9BKn0gNuLXNZ"u1enK9M&%rr0B\\:c?MD5\kA\:90GQ[J"mK@e>
%iphBF#ntB)F^14%**r>EKCN=qfG67[O8:k<4_O9^hkM'l0O>%>6p*#eJBf&A`&"qKV]d+mRMgnd(A$250gWI3hWp2ZGeD-1qq&cB
%kB-Gb@m'01R=6qW*aOD2BJ'Msi;r)Z23%)H@_g/"Sf;Q'^g;&S<r`b*-7<XNn9>jFqtqo$*E6u?%Ic!q/>`O+YqQZMB)j!FqQtEF
%^uJAO]+0',M+eZR2Pnk'O,`^(^bZmN'C_Xul[TKg'<VEY/IX!/G[."=#4SRR\N8YWSB)8m!>"eH&K/@dp3D`#4:\9Q"*cN(9Ya<i
%0*UiA3@Q^_^r',Z5mHhgm[4Q0glUPCi!i;<!'I@I8;W,e1S+Vpnl,WP(E0iX:hH,b1oT+7e`g@S;T`UcnjMSdqD@;\S=.B@.au>J
%XI=b8V#Dh"1C_n(%O3-fSIE.el'e%"*N(o7';]rOUQ>o@OWglaGChX<SnNAXEM,+Wn?A:JaMBr7:WGO.^h,(QOWglGWpg%,"ds`C
%CYfP#^:Vf%<;Fh@+Nnt;\L-4IkVuc-4-/fs`I.EV:Pd,:k-GKREKtNrmgT*Ij?#n1`j:&ZDWE;)RBSN^gZWsOjZE(Y/K+VMFE!<:
%cLJPJjZ?e'o!3XUF@rY+*M"ah*?#lXnX.FBH*'U"4!"_j3oA?bf%'TaiGhL#hh=QYV8d_d5B0TbI)g(G_)/la87$%YVfZ2(43eqm
%_&^5D^#Zn-b',rud.,E._q[3?cE3&s$slcQps,N^7b]gMgd)5i)q]g*F3%3IK0*B_bbCXgd^N(B4%IbWBkS#$h_,0#YcbLHrslVG
%5eAuog&85DOq*_>*STM85*;!k"/pUQ_r?60O3#Vf1Y<t"oJ@^Q\pS28"qg6*W[geL2B0@9<4%hnjf)ohSnMe5Su-1^1K2XA(TOf)
%Y+3N*W!+[*NM^H,G<i@lY/tj[X"T.GG+@R!6^4mI:-r'KmED=S@'H2IZu9EXSM;=[`caHWPFaNZgC`!lD8LH]2>'S!G._2@fGV+&
%K)/&O41F9.i/$c,AH/KF([/qQ*jH'b!6[0;(NS%PE$p-WQ0glu'r&Sdf*`&&#'[ZGbB:=9ltgRT*IbpHKC'.,a&UfQf.($4A\3Sd
%Q]B@7]I`*d,>/4.J/uh^kUpi)0obU[TVg,m7hGGBh9jK1c<XG_$Z]i\nEreJCeVK_bL[8-d0DVWSKg;a#]AWBpQ@,Gm@?_3erPZ3
%mPs";4*.2r\qYE"-T&KR'QPaAB-#2m41Y-NiZ/"934?YIcD9_Io,S'(Wr<ppEH%_KVbVIPd&r@#GX3+L:3bRd+lR5K*kL2d)=O:!
%Cg]#)TQS42`\Zi`VBMOP]&feC*k,5Qg;Yia0/&-[LhA>W$DrX*E,#O8@@/'lGc3b##O@1ASgK8K\oWke+JgZ`\j8fA#7H7MLkf-l
%l\LUn(l46EWed"0.>X#meI`m):-j9UJe[aCVAb8'dc3nd4@%K-eV(9a2ZPMlG\M\`+1O0,)W:!<m:tp6#8T&b_)1r4l$g7iG6ai)
%)gl9$*t@_`o,Rr&k]'>1U]MUYAi[!uGU<MM`.7"dqXaMDi8Gh-,JjFCC?A4'ZRX$Dh,XhXqj*76G[)h<`efFfh?oJ9d+]a3G[d5(
%GSf2X[3J_b?4m(g`/#5:(Sr8r\!5s1V1s4AUo/QsGUD5sA&JJo$#CO>"6;_/7D,9;'Z@nb,d2@pnGut(#u&:t<2;[]'_0hddT\q%
%]T8sB_F-NS,tm,/(%EE$C&R7Oa))p/HP.R[VE*WRLrXUg6$R"R_B:sRgrg>%qn@4U$A2>L6RF*A)Ao:JCP9`D6djjj,s:C%JUXp3
%#"Jlrci>_<689/C*:F+n-K'=EULdTDF4/Sq^r*t?)W>+.1$O7a&Y@,&$l\(,4OgYo`&#p*%)NsNasXjF0j"bp*bt/M%,mDJ$K7[q
%#2pG4-K.h.iu6lJQ-or14OFG,4A?,(B;Q8I(2=Ig<_afcdXm_QRAO_Pa8;fA%cOsr3RMf9jSJQYSV*;_a5_6maUfKoS^HBcf"[Op
%]Kdu2L[\0NJX#Ys'iS?NL%'=3J=D54LcE+?GX/1r<PnWq*N0UBEBd*@])&KA5);t0<Pf-u2$biu6VP@<2olQ%Y2:.Na,id)8U.m%
%bHlkgDWNA,Gp"r\]BGBA,s6C>8U(S&TG!hK`d92o!Tph[,s8)H@\*#PFNJXAA%$q[G^819,J6,Ted:e8.ZQjj!"W9hKZEsW6&+k_
%De]16KZB&oXqTZPKVh4`9W.4G3/@..(E<,!ljVkCTRc?]([,jV&t[8H#o_dmlB%V]4K;q\(C^SA+\UH54A=iFiGhJI*5Zd?1C6hh
%&:C&<4RrVR#`g\T!gE+M@?5%,cgXIu-Tj'*h=d*&),-#44<WL;$.$^tfHbk:1a+tBIq\&#8`t*DYGNqA%J<e@\OoRG:^NaVd0Q@,
%9aIA%V@YpD<%!&u3K<N*$WOt^:"9N1(U'6F&fram`Wq)-ibaqD[`3PQ$8H%YiVC#O;nud'(q"N&o%YUB9GR,C^I#rhd3+Kb[nN8V
%T&N7#)W^G2"aS\bOCr[IgjhMJ_O!]Q%jFY#KflL]*Z1!Jb<a./"uULhX,JDJF[p"*O.8Qo`]Fkk/he0(f5UCrAotQ@)2S%W!j?J/
%dpUfe&kr\lnZ%;\<5a-NR:dW`Zr35C0WBl+a9/T&Ge>.p5*dYW3K[$'4L1'=hDN6Hf-P^FUkjf`k`5-`\o_E`So_IBX8lSJGX!Y8
%@3DYq*^&:&,.l:]]:d\anm,@XJTm3CIKo8XMYC6t^4W*-i/[\L>'-1Dh"bo2cUif%nDugb"R^NE7?J)h\2/Dafml0YB\Ol1]8_U-
%gn6_YBu8&HSIp*Hco(&/TH>aEl&J%@FL[7M%8;C9]!</l#8PS.KI1)OSE1T(#>IsKH\PAmE!Nf#$7+E#>VG+=+$WHGNopH^ZU$q$
%^jQF@"kQ)i8/7$HBTJ`%BTJabBU>,9BTEPOd2l@a6$qC;PjE!D%Bsp<m%f4RUHuDM@t7j>N`3`R-R!),!fmC9RTOd]i&,"D@O)<<
%11O9]`'2X/'(:*L(,Mo7Lc?='\`4Q).PW%Sq1!'Wa*:FhY>JS/Ijro&qN>\`WC/tH5T!?J3ND1l)Pp>n?b./P;M`C?7)q=lDDS%e
%qKN=u1V&MHL)_F3V2t-MA&lUmlor"FX'mLBP(g)oWH>Bq*$\-'7LO6A1JB*K*DjXQ+r5hEF9X+]!Hefl`461sFL?3R"6ti8g(g]1
%]P_4KWK`1Sg@\Gfh/Kn?V%U#X/B`iIM*p4SNY/*#T*DZEFKWN#7DA0rfH"2t7[-N7dQ%NaR;bm/$dr6Q[L:^9Y!QRXM!2K/@6<0X
%[Mbp)Xq',sPY-2cH]Al<&dLu4>LV5Bj2%W*V39Vi4Pu)qM'jsn18@h.AHu,[;Rh'Sj8c'm*J:a[7[-O/I4h9@BQWEW5hD7g!`_33
%8nAc:,O"Q)T+Khp,&f=CXRX1Faj>-fi_$1lk<WM(*L/X^d@IWlNUFn%NUFp;PjWO')Vntu.c&Rr.<LUiOODs$VabmCPj7DX>r]Pn
%GF[a<UcZOFd-4:;&5B_\S9]kWGl-CCclF@oAN"/539ib$GDb=SdiE?/0SAd1'.,E.cJW99."58dG8=>1.c%YJ&$OD%8(TK[cD.^Z
%Q0psu#2Q+CLe2f!q\d!*-!Zb44-OGIV)sG.@p-B9Ir^hBFK\K84-OZVFLhk6@92VF@h36p`s_J'm3XN^1VjC%3d)"jRG>YSq2REA
%FM<[sZAm.R3Y9m<c6D(6iB,*b6EJIV]KG7fp^U=P/KUJO\CncB^:TN;eG)f'FM?cT$?X#BI[ZP\4.Zs:SaR8&g>ol-JJ(qre&<KV
%jL^34R'6,;_8Gg`^4Ua$iOb*D"EX@`\XVP>7RHT=^.S\bL$oj__)M1M;6G2!mfJQV[)i%+b\C9Ah_UqJk;t)uD@lDF:k3<pnBk0g
%nBBA.D$NoX4cSr+R2fa9^loP1`f*T`BRimMVLX`u;YV:LC%>P1:#gS"IhhHB6T)a@^!siV)2U'kCp'>3i^PpsF&N??B-:g18<3fq
%RP?&W._]J`0dACsKc?C6,O&BcD8qN&Y6l=i%It4XajVAn2_?RF"*mY.bRMXO.$@[8Gog+=.HFo,qTOa6M>g&[Da]TG6CpZEN$l)V
%2/FQ+X@Tf3*V'o^c&<SJUiO!,(m&sG^Q$$k5$m6.*?Ps9#E_f-$@09n@B4r(h#MLP!_;6-)+teVn1k,t)E<m4atm%Qa'2/e&NCDa
%$g<[Sa*`EHnMM,-1eqoH(mpX+DG87fFB-OpF$)$pU^nZ$#=dcF*#WA.R`DJ.(+g\nnq,VV6$ZSN/44^!j'@t,ni2JZ^8m8UC0J-8
%]%m.$*D=$3MNK1Vd#g:-1(]$<Gp]^M)itjGf+(o&QorhdP2iF#iVlSNfsT)OOUaf52$o?&&@`K:&ma=A9+)d);;a>WF<o`5PNnc+
%GbI4G+Q;A-o*OA3TGg+@(KV@a*[Vmf$1!7?SgK-2'*/j(+K8p+4UpoUfeWo[jdSLL_FIB1_FIC#_T/&nLlVqo&KfOt+ad2fPjk)q
%)MApTh+8hRXCU)Z%)U2DD@5@e$m`/J6dZH$>!0eNoZY[E*.n4s1NXmrd`]9o"J%$0&-h)RTgp=ia<BSi'?5juN>OKs=Xsh-Q2k50
%JLTM3*0XsPN^Re2O.3C!;*tlDfTCb*e(**5W.dmJ&=r;)aNY,7M6pltCChO3%bX>D809)V`U8cniA'IL;klk2,n%shP$qrloLQVA
%@l[$N8/ZtDN?3rNjJ@K?%!]F],`LrLFBDp^oQYJgF92R6S6XfI^`sS>B(qjVKXLT;5.]e>>!/I>#pXmEP2)i,K:%%!Af)G6(beaD
%+,TkL</cQU9'7(:kKM?Je^4I[0]P[_,uE>*%(nB1bbTVV,9u4M:H+%[dg$qc#4r6CNUL+A@+,+:DTud4@.Y<D*7'QckthXa1O^V+
%GHbm8IO)M;H`e,Kd\?e[7f5fii[<b5.#:Bb7r_R.`7mj7GQmUAWU^X>_+O>GiWW.0a<3ZlRNNYdY=0PK\#4M#(@be2BS\$!8je!s
%6pl@m<(4ID9LHHD<(D=82[/_CrDUXI)QFr%YGF8t`'Z%+:IdNBo>!aV\$N^9GT/lZ;1n>J?l?mm)uq>knOs/=0b>F\+%Qqr,<P.G
%a"%tg%9<lMj-^^R0Mn"7,$mZ\TSe!i!ZqmAIf+L="nBHe:8:b+UO0Rh,$qj7R#&dAc^9NdHam4sF1FP8`+&e_+H(L/=e6ho`e^`X
%ijk!NV'B:PhaBR1+j^eh@94n6a'Ac/A.W[G/^)E`T#j._'_+K]`YSgKFud036RT`3iJ#d$;Sp<VO!q%B*cDVc)8\2"F!fjcmt^.\
%pEP6g&Y@G8KZ=tkRtPF7a<<[P!hJftY"%W.7g$ZR&0<J9\J`8Z:?LeoLI%)3fF5X7bfC@P`LDH>KSL&Y+abCpPOR!09HcMeEAIpi
%K8IZ)KXWZTSa]Ae&j@Id##lfQNrbX\nE=jfJYtB@Vb\&CF%8SV:01M>WN"'QHPE/*,s:Hig+H+t5i[4h0ZAC/PCiP=6kf$pAguWd
%l6gu*[Su3JhFmOd+HdQR9>3A8jguVRG#S02LEU7@8Xp1D1P84BS[i;9OlR>]+QGS:LLQPe6kXnt!mPpY#'C80]&T=]_(p*KEmm\#
%42qa@PUM^YgF`RV,^B(FRrf(M8+0#Il#'!]dOO'Ui2KR!EJI!ZK]mNuE,OeJ9gG%a4Tk-Ig+-dROnA2+D!^tb^n!tZjXT&RA#jSp
%?&lH5E?t)N%-L)"8K!%DN?_#]j9$]g,]4,(f1`a\FB#@%*F[$s8<WW9?LA\UQZm=h^uOouQWO@^`\da7QU0CETd5cSS6jjA"!2;U
%QI4[]c&S*&&0@c`KT`\kSJFh\r4Y"CGP$(Q*%g#@?#G/%6>3i6>mpi&3!S?0%"hq!T$+ai)W=O>@p19P*%33+ILhr41-D@%GeE$K
%R@tm3$>=1/P,*=.9FE/'G.T!+:m)m=E&4Z&i`/2\2aJ\$'*hfC#p4qV:C*RY<A*7ph+`?WGXejQ-K:eu$0(1qQn#^&&=ff4f$n9C
%D,1O?6[Fu6l\pmr(m'fMVNd,t;^`_(W`)*aS4<=Q"Y/VnVJ;>3(mr0n4=i'm"U=%!GdeCXS5)Jr:m-'\cBoJA&fJs"2k;W6J1s>^
%;HuB:$mg`_(;@!^bR4K6L3XVH,F0TEM4oji#3K&&=tIM&1^$b$@oOeuLa@n<8IdOc8Rc@<8)K1o#Bcp#AORnM3f3'ja!G5b_'B,o
%P3X'[a/D@k&P^]o3.S:6@fgt8b,4UFdq&n_N@*lsbfkkiM3hncD1jC#JI'b-2!Om"A'X+G-#Q,77)A$6h$oqHk]CN[KCbTQg_J*r
%dFB2"o.Z*0G`ml,LM?9(U%>e?NHgTlDkC@o@=k*")DXV)Hrl4RM>K'Bkm1),!e^*K?F1_rYg[D?r`EH@aHgeTJU&l-R2#7;fHnad
%P)*(_X4b9NUY"76QkqLlRtc31D%;MLOuQ1(jdH2X>RG4\`figfJm2D@8[R:o7uo#hOkbn?P.9<l,:FCrO!:d)R!4`"nHn>P<fNcb
%)gToj99RD"=GM:p1k@d&PZ">:L4XKZ/EFWJd3+M!g=%1:4OG:D4B3OX1J8m`'WOMaY+,RhU]i4.1JK_LcXJI_Kfjm<]/o"mNr(0a
%\]B*Hi4XN]N$aC;QC>;fH-"ga6lMiAH9oP\;FE1Y;]nl`S[\lL]QIZ&U;9Y\FPU2U4Lt^.b$?CeDjLJ>'#nEh-J+&$M=*rqAba(d
%2<:f[@`HT89Nc*q8U?(J@9&(FL(a%#LlqdEb7-4gLCQ709&f54&c4o7ON1E@H'T@HOtL"X^,Ie.H,^R?2jc]PUnir>TSA\)?a1J9
%*lE<YL=[\C2>PsK'Cq[9:`rP48rG-TA0cA6*V+GE/@:e-31h0`M^]N'GkbadPb_As#MG2K@#isoOCRnmFtMblDU!FgH#&j"JNQ[P
%c\+Ei1:k-6Mf_#@0ld`T+cj'dPCYjQ,B>Q$8'T9.+cgODZnd``.:EE#,QAsM#rq'.;1(SAnkAo.WK<I\@4C8cMWSM;*je';32]+b
%h^QWgaEpLSGQmY!X7@DEZutF[56SZM5"#/,WBtl="U=(VXa8[MA[?fBe<X"(PUU`f5CK8'5'`Sp50cis]I_R.]W@Viq4n0CjYKV2
%.$*O3T(IUi0[Ejo"dHs=F,t);,rm!)A2''A'&<uY&^nN).#FEbjBScr*olRC*6^qC#ZAlFO=)(?GY`jZR)eDJJVeX\)PoFDTYnAM
%<i082^1t^(I.Sa3(%Z<b7]g*jH`i3Nkp^(NT$clmFNi4i>SH]GL+"`1O4S)k(A#u1>fAh7//@cJL$k?HbX5r8bYq1:%J.^-2Ijtk
%SL#ooo8HG)29b)8$C.;m*Y8"4M0X@U8&m``'K\A<SOh@00^n!%9Fg3=oI!KjO$V**&S[WAl)j/1k'844<R*[j:5^Yp5%0m149Ed:
%Zlh2J\JsN_Y2+TH]>;AX%+'&56,<Q7OS>5%d%bb"BTXT\Uh!^g"8#8VMpt"Q)S3uj4V6G./4hQ/!\L]')Y"Tp,"qbHf$0"%M&S)^
%:f%B[7M<,YaHA/^UPJuk8"e2EeHjSjUI@k&7UF"[l(b-_l02cE.`*nqS/Hba_s^FO[Nq,;W72jeoSEqOoP"[/3&:a1;40K.j/Qg`
%O6WohhIrk-H+]?c1[9@<_=+bPP.69bKJ)2)4CUdG`'\Z3a@)?4Y_A)T=VA3-kUh9FkOFq`0dB=PW.&e>ZD<HQUd^TV.DSdbo8N+.
%)joecYd'#UXu$D_b]@mt1EoJdVihc3OX2_YY,/gQS"_=BJJq])kCK+JI343^V0Cn_Pc)^8bb.)4+A3Qf-1N$(O1c_Nb%'0.27Oo;
%_Jn&`P+I[4R7;-e]Nc*en]*%1J`\&H]QH#a4<q/rOS>LDU$Ie1:JBMN]HG7=L%/Jk*QM\QQS,9fj+S4]d3YJD_I_lS<d`LL^!jl0
%4Jr?n1*4Gs)2nfGj^]4Sh0@Nt@Q_)+Hc7lHGS+*rR_%8]OY7bQ&^S"c7@-E',qD?-I"=cti#06$7K^;bOkDS,iuX;#7$f/@,Au@S
%FXb&().&IM,R?!7,hh^QXbE+[Yl,p)"U<+*U.Z]dUBmqNh;_W-$/ID!b,7=rq"dC&H7upVq'g`\d%0#qWH&p[_c^:]n&!Z8f18?Q
%e+"JB1%65I<Uh[t;t(hEWq/BVSAP#r"Y&=b9f;^kV'D5EGD=N6KY_jMnP/&UO@,o8*@ABGbik3\B?rMHe)25-[M`A6!q#eqF@iFE
%Hukn!G@l1+hO/JL<;DRRfT$PL&tO]N=CVZpR1-0Y!$:/W3C\*^GR/B@Lb=NM$KUMq;S]'Z\qYF_a#(\,3Y^Z"$niLF2-lg44*7qD
%?P5#61;g3u?Z@?0,UI]U.i>Pc9oO9>@m_\ia1F4CQfU<<Ql9<eIJ%1\GT8ihLbFSu?bR61"MCB_;Sp?,#fu17+hWjPEm+NIFBm%t
%!0^N3+g_65JVPU,Aq3I#kH!d7!@Hd):J45+4M;qE$S[G4E<7B#UdOC"6$VO*n(OW=0:\L4-8Fj\i+n[UE61^f-:'b?/4g47@m"'M
%Em+NInC/]/1Bm=ha2\TBM1GhAcq"W:(p?"T"&-9?kgU"pM8k8<BE9GCghYMhCG9ipGKg,O!XI!V0SrJiYujrI#8f.$%5=3&WY(J>
%0[)[WT&($NTmZE1TtI$8<%@!t?mau4\)SCg8WhFLT01LLT0,gs+(qHJ?5@9R?<0gpI+!V2nsQ@iPfLtJ?4Q)-n*?4YC!LhCe(I9H
%np"Bra\X#rbqkU)3!!??nec2(k>4>L:lnQrj#q)]Y;Sg/1+A8=Cj_H;(d6#C.IT][TLsM*g)Yh:d;,"Hb59RX[75G(_7]CX0eq#=
%Q$>@Pl+X<WGmm1'S!_7SJEC0t'=jX6R-..VR!6n_.>rK>0ba.<P:R17a\+U'bQH342[ArE:60PAUGjOK0lQ*a@8+ng90#&qn[-s"
%1%.Q2Ne2NucX8Mq`u@K6#4isrBas<oV\c4GR)aUm&tKs'.@lKES48'iH/)rR]ZL`ed.gkd4MHEq1,7*d:^%="Gf.VK?ljGH?cP:C
%0@7hW4K#Mn*V17h']rdEoWSbd0ku<DA"H7f0a7.cL*=nu:\u^X?;S[)`Y?rOc][5V$0<tAb,7A;Nk7%-3I)4+P`MC_Pc(ulWqZd,
%/Yh`JPS\#9W0,5u5,E/cVb].l-Vm[`a-eB@NsjJe+'244I+/4_njZP8b2YX%Ad4YkOF%o,!JRtW"X)iI1m//#M.%'G1WUgSg,258
%@,qZ@j.D?V4<UuT=9]7MhFn;4M'8Js4pp??3ehM>e6kZ`*b6,6UMs]Tj8I%=9GigtE,GfHKSRs%PuPbuQL:b=-7PCX*N2g^l)iEf
%<?:WEm*,qp):3e;@6bmkPJtchA9ccdp5_lqO3u[/29mI!1ImE\$,,ZI85UkuEHj#ZcD6D!TZ3Bn?c8@1SeKh"ap6=pdWN^-=/Met
%RWS%H:M>;+SKPM2@oAms(aG%2K)8`E8Z974#A0W#HiYe3i5;A'TJ^7X?J)\?-r24:-KTr``A8Xo0^\PfkS!></M^%+DM:'am21p$
%JZAsC_uYu4'+Dr<H0*_04P(I30k=gR2N@7:"lpPP-HXR^E6LS20#]n00=t-C"Ko]f!t/F]M.r%fJ^=Knd^G'mY[B^[$HfAX5.^`^
%:d0N3&X91P.M1_+[IIk%an0:6H$Y7BMJoG`%(p4L?3i-aNDueWSat/AKC[DgQ1?[dL%95W3p#DE.?mV3OA\9k<.jaHqEnt]#Ln'[
%D.$\)J5\F'-R35r8N^$t\/CD;1%"aJTLfQ#6*L5C5qf$qd6R.Eq#UZjN;00!T"CR+BG1'jkq]gSH4266HQ)+E7@8ZJ_`-7<TLncW
%@Tgu4q7`DaoAmln7[g,s:D6hfcFXefbmZHIi2p;&>96QZHo%8n`X.U;,8840TOb3[R\U</^)C`!3o#lAUK#Cr2Nqp0RZt&ae52@n
%]/X<Cj(0QGKUS\]K]p^]8pU'NFBsOinpY9[H%pNabj2G&XB5ig):/c9[:#1pF_8Xp_,nE5NYuUFSd)QPFN!4/))VXkgmPEp,M&YX
%a_V(Ld[s&V]HBqg,eWV//Kr-'OQK5/GVh3m1YO,10s]&;POR)"pY]_@B2Z9@&WbY7N$,)C*ohJAR6>g(GA<Pn-LkPuX+rJBOc,Sn
%G`;@Ykg:_kbJhZ7f!%+XCC5<XKTB1?DdY&en35J7OWI<%NR&/"H(#9chdG[dK]am?#k+I5a#(Ys.]!_@H(km7H(#:.a\3ql/6"!E
%>WIN-8IJG5B:>h4*q->E3J83OY7hsi3AUsPqFQG2G\oYYF-?=B1PEf)!No"=MSI2P#TlJb8-r'XTQJ'2eH'7p?Jq]B8U(Xnjf*nD
%,&:"$]R1*J7X-;,bE>JB(7e;QKI?M:POR"+`$E!gpZ(Lka%O#q6[7`2?Le+d$T)5eK^TS:ERbf@$gC3W&>%":;**Zi':=HN?j.J-
%PF$:/KP.f;S3qNe-c[RmRG?Un$1H$G`@-E&dG5e5n8qF,'0_5Z*/3n^^V.*lTk-702"(nM&,YL>"OkCkR9B@5I3mo3GXbDsl#&sE
%$pqXMO>Sjb7b3Og^[HIno':^FD=ANP%9PO^<pmA2<NW[oWQ^<W-f-N:dW/DGJ\@ZXnMkbS&<@8ChPpn\O\(A<QSILi'B6A;m''b#
%iXn'sK_T)TBLR=?-QaKQ77QN,4Q^/b,9C+mmgk5Xm8CkI_^M'a=/\pTJU"+,3.8+*oWSepE%sJ4pg>28+<IWi)^E'kJ,D_4_5V>q
%52aK;&`8U0W'7ZK]fa7#n8ngUiVc5)Ltu7sF/XLoIuP#rkNKe[37ru[nYV1f5<6T-9*4jR^4g`pY@c0VRQMcndS7H"KH&i-Zm-ij
%HSgd$'MksJ9AX0>#+g@H\k+E`:_O]Z/6XCVUhcSn2i2l:>cO9Hc_f3El`H)c3nI#3s"1C/hKqc&hKpd?@';^Q9jl<7iI1LPF$pl3
%VL;D%A4CVse\k\(X=D*/N+1\,%6;i8oORQIG%9k+0mGpijL2!-mFYQV,+NaH_4FIZRrL'dHVfd=%Rj8n;[m1`p'r%o&^bC'OPS*"
%PjGM?1/;HIA599GI#]d#ZZhWM<HXG[=FM#C:>XPXr>)iV&'K@)^$-"9IR_h5)eng3+YCr?htr6"U5IT6\nEioiqm[tK##'Gag8dr
%=VI;7mK)9f2,7VDjq^O>HV:gd-c$A_d7nS825-1Qo)43=Kl(peLS;"n'!q)cFp5^/f<ami*t%h#pOcJ<nX^*!M&G0t2En-\EfCP]
%UQsFum!^&)0&Rtm@oeq`nC8J(CkV7%6MNaU#iC]N!Ih[-!IgWo#5EKC$h;8k$KR]>5S<'q*%qZ[>lqK$*YFN=NK]DP'\,1"WdUp9
%B?\70d*t$hk.QuMQuBG`S?IYhi]O#Xb^$^/X;7?d&"h@:M=\Fg>b$S]kn<#%Eg3/q'6m3q3SJ3sl_L&`YF[/ZQoFco+Z)HtDA;1X
%iXG@C4dld^i(/WnR"r>V:n]Cs0[d+oHuH^QNDVe"dGR-CEmee.]5hpLj;a]1O.qJOdR"1>e%q\I(1qdoo[S!=2pf$?P/Es%+>Gl(
%ZaDV;kN)M3QJ0hK#q+T+6A'KdG\/.>hKl)`EtTL^Wn'E=HX.?2f,Amd*I6%8SWbH;%Ik%UQcRQT>l1AC8LlF)e2d>bAo!#dR'5bA
%_B[Z8pYjM#0d_$<,5ur5h]qtCdiJs=i1EQ_ai@Y)XIKFQ>L8ZYi-Df<:;ioVU3kr[`!`QYJbXa*1kp6sNm@sikNG;rqH-3QI!_Fu
%nQ%<M&8uV=6MqfH`6ZgOnQpRL,Mq=@&O0$-6i9(HL%s[p$1TEM%0tm"aPMacO'd-4`7L(\`1'-a5Wmb2PQUGp"b[DB0CId2`-4eh
%6G*Vt)"FQ@aGTa34$eaK#c6O@ptAf#46!pa%j=,r%SJnCS&_Bb`*9se,2SMO)"Ha;3tRHfh0^E\qAljd*k&k3,2RCc-fS!PiPC-U
%n^Wn%46!NOoI/]n<'Z8KNgr2jiVj=EG_?MWA?:Tj^8JXUs7EHK$h</L(#q"-/OI[;YC3:S+o_Gj)J0lW-n[PYj57hSh*d3HCSB%0
%:]77aLpttjipegN'_*KX%u;lNP1pNY\IHmGZ-nF5i_`_j&&_seQ5K/U*2lW<L92ODHpB":#K#4iX,&Fc$tr/DB8(2Y2qaZErr(MR
%3<16%7dIn5Lqfi[INnb6eRugqMd`6sUO@Mgjl@?9&9!sLMt!P^pk\DO/!\ppk4>O"7t6L0iofMlr&E?Kq!k6(GWWADnalYpif=Hn
%`1q;E&`oh1,CCZ>&>-N;DF;(U6W?)AQpX`9P5qrp%LMZ%"[&fT[$lnGQ'9:mE(.T2]GmM73=3*)C\^5C4#Z$u]"BI>On.q?Kh;'h
%]C?0cH`O!&n>L!m^bdd[pnmjrr7t:>Pk!EFj>#[lWnTp&C&PAq81-49CI^SLA:3Xpju_TDaqO:K#Eod%'\9W@dRi%)m*a#+P&he\
%Pt.[7L`9ShnP_`e5"R-,9"esR_L"p;!k\\laZ>iPU._mi0?rqU*8Bu9.bkd.=GS$1nCBif$K'`2VH>3u]oK1XQ4$/bn,R0[Uo!nP
%HQ_S4%=>$#6F[3g`C1(7q!*RY"F*V`$<\bH/]EqCf`-eCSO?i(0'Lq*DsC9/:7<r3OED1Mn51t$:&)`Z8^,/KWtbp2pCO_"ODgR_
%F0OpKO:Tu7m#Wld4KOY5UD*4Lb&YN]S8i7=YkdS9I@JJuVnD2uDij\o@D!+'`/c-[L`c*,L`^8!N:3[Z1L@5J(gl7k(F,?Y,Hg>E
%`k)InA%Vt5<',pjH7c.f"JKU1m3J-#hZr-Q'T8u^7!;""_RJ^R6MT,`BI@dq>PYfP^3'>+7(b/U(ZHTU'#6`q[NsEq!5<aESHX7K
%Wu(>%@\RC(A\d>L;&rfE&m`bXJXP^7mpq/)E+D:1^;JcmGOM>U)MnH$EA[2\U8k*Higk0W_=!k!D)j]9Ysi&2A&.!8D`SOQq3Q:;
%_DfY]h["`+;B/,QiP)E3$+bi'P6FO!<P=U[O)=8J'_0`A+D#rBOh?n1OiajKN%]Hm[7nTL9Pq;%s*i9,WQ"Xib.8dUYJ-6(N(:[a
%WHSt;oeL/gI'Kh6`;&K#2I\dHS[3Vid:Vp/lCCU\5ZR7uee[Wsmj)r3@j(7$A$.ca:1>u-\Q(p4h_hNonR:_D-fY_<I:djT#h/eP
%B@]3p=mGM%phb+.hRZnYn:iVLWfeoAIRd-PRn?QNdhj4IO27CWI\_tniuOQXj36'^fBLW!S_#<LIqNs1j581t7:nZ2jc;12q=d=:
%8"opYek%!q*'uD;X7g(NJUFl:FG>21c1O!;S,A,$T2:+/Lij=S)(Rs"b2_(f2X;VDhHdE@.1\g9YtcK).:-JS1m+qbhcZI>_YQ^X
%8PGG/XNYqq7a_Og(Z1fod(^[5B%4U430GF4kb/470otm`O`iN7hl\B]8Q=78r[hWo`3O/+=+eeLH2,-meP;jqaST3Mk,Z29LA?G`
%0r1?C)_J%X0onkF,OK#m\,RZ>A9iZ7q,Zl.>%O%rg.BB4ln2bm>8q_1RXC`XO)EM#bK*4d3aO_-73k<OTR:Hi,YKiFY`T@e9^sg"
%=]NjX,^V4$@j;l*Vf3Kpi#?d',Z4R>7oraYA2=,JZ!Hs/Psm,Z=MG(qP*t\(UjR(UTKN&_(8cJL9)4J;6E>$$5/:9<PXcPcH;K'N
%DNo'OV:mA*6;bm8P1PN\Qr*<PIZ>!&kNE!G3#I5'hc)o1-b"YU?GQ^AEN'(ee?2Ep,WK.G-Li@)c_!hha_%6/KC]X'`e3lUF?;Gm
%=28lr*Wj(LJb*/FYW-Rl-g!O+"fcSa7[ks!7tttAOEJk+I6"fYhE1<7kBkr0idBs0C>sVhU2o*h7[3M`]&ka1X^"pf%lmKfcD/7b
%St(#%D4n*,7A+QYfEqEKA/+[5.Nm*a:7VLZ!WD^UJA,.TQpHcqbeg#CGcrOZ]cMqpO'$C0d,08cZ[k<Q5N_S=oZc*>0^,bebm3I7
%Yr[NOI",kmUqMXGO.T9Xc=<@2OOYIi:mppZ8)MJbl;@fEI.M)ci]LgcR5t:r9s/7Fc53r]''Cu:D]^rGdW9@KeqD8;:H_9cEB]lZ
%NQmZqlXIRojubc$(Wd(^5gdRAPOf-^c^94F#Ork&0:(k#R.$d`o@Df>k;Rd.@F)CXlB`O8jL-b'l.!+Zn?3G@r#B"0*sZ$BSo;c=
%+"'RGmoQ`'?7pB@4;<.6%7Qe:8R!+$-aAAC)Rtdu(*?EFUtmTt8>:dc0HB4HfE/(A-dBCBe3"W<rDtaM\c@W3P;$8<2@srD=<4tl
%^=%*eoG-?%HpP?9Qm\#tFD!=(RS)2@LF;5H+Q/Q:L&'437Mta,B.d1[(9?(&oqXIpC8.:f;.gj4OTY2gM<)8@aa)BE`*GP%rb@$_
%*c97W0i,B[?oLlaDOl^V`Seb#O1hMR;'++!HOliuZaBIdo!+PB.-7M;OseD]4-Os\4jB:MRO?K,elmSPjdY'o9)4oB(<XB&:,Pi$
%lc;2&8mZ8\NF_f<9;O!!;(Kl>Hu&]6&t(,0[cG"&!^6C.<#(T[R%?/j:Z@jaB,cCCHU3^]-]r)lJsn'N3De6gC#4M4k".,bn!e+t
%fp$FA-F9fjpF?O5];]oXrD:ZJd%@iE#3g'%&0'l9^O0)1cd>=1CNR*3*7hW(oAhXJ,I`ZYV]pc-NsOtHkRMo'fEV3OT$7"MC)c@!
%q(L#8(FkrYSe=J^cOf,:iOfQWM"Am+0]N"'a/>n^&sRhd0i-Mp;S1IABbJ-Mc'.V&c?npjkDK@s3+%[S)l.*O0i'!%\;SETk=sL7
%0Fr_5&G%.[QEDRs8Q4l"5G!RSoSI=YT!Sff66>ko<:aY*C0`ECJtaZLGnNQ:FX0IPa?uQSG4VM0@uNO?!Vtm7W#bK^C=5e$QjRMB
%IeN(IOG=#;dStMA*Ed*36Jg!t@sgWc))>!>Mj@nuN(:OjP'O>UA%-IM2'N[.k"0ZOIA3Uj5`')3&2?@NIs!MB@XBG60i(8c>ntAG
%81hEtq-m8?AUNT"5=!kV-K;;W:m6Hq(TGL6*DDcJ7Y&gf$7!@(cs5*`M);!-U"<iK;`.?[I?=W"-h/.f&t(+eO#JYAWc71$H4g[.
%h9`b&rnn<_SieIp)=JC$@7GHV/:Z#pNc&rWVPW#2?8%;M@W#7k])+=!Vu%Ccl+TV'h8d?fme35EG<`Kpmdp>mh2_pi\ta@)I@tr3
%&(;O`nA9:Vi5e3.eER:8]<SmfFGD1c*H['dYC<-kpCf*hS,J3-*_^f(FGJE/;7]+Ap$?d]^(T5cm]CbjmVR&P,.aZnW@#3c(mOHb
%*[RsCN8t*0<iW3FLR[L)]L*K;::tqrq2Y479gL,_Dkq'<Gd!0_?JdhdpQ;RaSV-A!.E;.6ma]1p9R#Q,;VX-]&m=Je76+%c"H.2q
%HgL?nNU@)bR"OfT1<KjXh^>Ya5YQCfXj2$,rGbDN\(<@jnJfVEGO2LR>;^BHYdOsO_Y$g<[kg/gj[D]),\CNsdiC"D_[!d)E$'0T
%hr!O_]pnokTK@6%O4)jj_`#(n^n>s1E)tSCmV#5FR-o6gj<rao8pu?[2j=mpn's1L(%6Qmin^&.mbigKmb0I6^A;D2F1<g9gC.iS
%fO#lApGoh[4q>$kICq!2I[hAY^0e\dGe$cT4Nb!g-mu92p,nUWA?@rO2S_i_M@[MSoVcdCGYWHE!FMr`+9N\DZ!3KW&bGBVb"7tm
%a@6q=F`\^Q033WVHuE:Sf(kp6!cS/]QX2P[VN%`O"F*Va,8EN#QFK\;cTPQe!H6gR<DF=1fbNVEp!Tk7SBNDV'c@nc+Lts0nf;ii
%@962f!NA\cS4%AAF,=qc$jDb)5FZdJ`)d$[,Q?p:eJ[nu`On`%)%kS<Un!B>YK9Y][k!S]&eJpk.48Ih?IgE*).0K.LGHTs4f"$T
%iNC&mpR)m0`j[XF=ut^64/*ePVL+_r;N(&Gf"G91hkUMbhh[a7K_!*?Sd"`9RcA4ODd]Oo-ZKC'7T(pI92O_\1ARn!-dA&U8NHT!
%gH?UlA,ZYH-mu:IibAYU]MuHdh6ecp-ftq?IDe6oa>Km.FdB4'q)LJbD_3ScI(rHl([r$u0tAO(NDH>kVL0Htb4j:Pq/NWuo&EH4
%o&Jdhb0MS?PWpd#-so+RMCALFp'CeG93L'fD_[AAB)mWp<TPJ3XkAoj4aO1]TH_,3UrpgR1&"T7&]@b'%mdq,,g&\pWEUf45oqAP
%3tgV&))rdXrVBdDYYcI:n+DNr$t"&F#!<:bQFfoCah.1m&a$`ohpa\iXCbP8P6a&,>HF#+ZG<9/LGud3ek)p^G]rE6K-+k?lQf.k
%.>i8rK`u"XSF&?BkY]IOe2iHMJZ\qioZ5.55sSd.rI"cr7VRld-S85$a?!J*q)MS*?V6WrWHAhj@]f/*KDthUh*qg!la'@;8aOUT
%g=8(?FcULUhUJMDS8U<T;9lWu;8j6^'>C>HSB"gngoE`/d=#i^]]YP_C%2*@QaIFf+_X'?>p8ihe2j!kIsP3E)cg-QS]&jS-K[F,
%DaCIgfQ$GU6/m85P1Bg518OI[kClsoi;AR@0F%CQ3W]1!SY3GMQNI"eo*P8;a[2Z0)&7^ONY(F;kRMo'(kLQ$PX.N/D?KjMJd)#2
%;@2uo@uVQqD`MYJoMF4Sbgg/H$@2j)XiWPT*h5DPCL@R,#O%l=.j%%6<<Wd&k'pjeUNE.Wkj.uP7jE3(_^C^mcp)qI8>,_&4:M(5
%1gVBQk8pMW5]96\$@:#7;:%7;T#[M5b2!a'`UAp0oM>`51]#b1cZdaF>Qsc=]ho47(:/VLN!2<,=3JkiqM_Q:&"mhV4'']EhqVP2
%&&"%J#5Zd6EsVCR._Zbl:S7,mT[*nZ*2#g8d;sj;I3RE_`1XS/lO<X%5<K8EGTC_Vi2?3$kcrT[*M>p\J@e+`4Rk63I<3('JKCXW
%kl<jnBTt%YTo;(f"SD)m%a[-K(Oc@4]:so6r!>q\mn$t-kj=:,d";A\!'M562?nTs>5?;9"'2$SO*OM?S8W#A<mLHeNUnG0^glXV
%^7Fl*<YN%rcJ+"ehr%id`;)DS_)r7:EIPR"Eo'TP38^oIkIb%LE?<*#q8f:Xn(h)a!r^r'E#\$`s$@4D^RS9t,X<C<qa>k=A7Is>
%Q!mq_Sj[S^Q,u2R3[f#E_JpHsGbDcS9tI"3FX:0\II=/Q%J=r6d%dQ6*_\uudKA#fqVjQo7Jb_Z7Yp]YHuQ*XHs%aaYLZZG[VZ@$
%In+P?UjVILkDSmZb.)ZkjHFO:O\\;+'Um)j?!=JU-We(.7JUP3A'.0.PZ0i'BSsLD7X7Ds'_5S'UQBCO;GC,qmcPjfHmrkMC1Ve#
%jr_flX@eD:]jgWF"nD%k;c5$=]o;$9Q5IVta'K]&C;0OV85(QYIP1Y,G/PWp<E)/=I8MYG(;r/tOg?eA7LWSH299la>UV%[IrBCn
%:P-kDX1ZFT$G9s!H@je(GSh<u6se8l-)mFDe('BRKRb&u.6e]"JEe)4^EIVQ`hUS%<5aj68U,mr#i4rjg4aoBGYISIDrWXQ_M%A&
%6MNaU#X8g-&UqAA'7QJ,7egs($h/J5_Y<1q:cmR.P)+;n^:Oqoj#[;flE/0?<)gFrCm]h&*S,b<!_W(RBo5%D/6XP*pM/2$\@3#<
%5RF?I'r2MuiKUnpK"EZ>2n266FGYP]UFB8A:kJ,cS+%u?>OFO4..>`n7@<KiJl;nc61Jh,#:74sf%3t/Ds+riLWQ[b%SA7l8@sNF
%H#PT[:r5:.JnET$ZX@uRNfKZ_n#0hZn6UHGFiHL`0gcSd=3H!Kpg/;]%eJLc`MB.Xf(PUJPV7V]CT=%\_pnO3.,^$>5mmDB&edIe
%OdQ`sk;KbR-K3i2#OSriA4VcEWJ1*PV05EA?[OT7&<B9"V$]gF1V-OOq2T'&O[Fr.mVO2e,OILlJeC(5.B.pIik\>(Pc0EE2^p0H
%eap\7n`@;M6&GRknIsuqZ#r@H9s=I!H(ic$aM2(ml4\GbQp7ll`o%sqg3f<^C572[cO'FAcieW`8.jqG#XNp"mZ@0q&`imb$1d]K
%2TUpe=HM/#,flaD2&q^-5Lki4o(\>[KmZ$5?F0GA(%URT;%C[b)\>1uhD4=0o%dBO+E&#DL-2IjZ9[9R1*2b6.1`O[gaQV,6BEVa
%NHpo^EO9$rb1@]:hC*<AlUlHK)I^dX$gsZMMKeY`q<E1F:3j>Oo1=5R3a\,$=lUrF)s++>UismjPN`\%]=<A>D_4%0bejO3W,!=F
%><ZH/qX4'oI-M__2U&X:RDYE$O>17ZoU4!Zq%pS2>/iZSNRECRG:@;$&7aQXX>B!KIr5n]m<+A5r/r,?Hss@/a*]VFgkL)18MfM6
%cA7@'X"oQiq0`"gm[-LG_<V3c>A4?)nR7[nQu?#!U6mSt`S3-9H"%`TiI4FWq00top-H\\3YPQ24GkT!>CL&\i70b?J"phs0TR:H
%m8hNYd1,_*&]%uF;Eb0\43=7'H(.Oq)uOK)0L&&Dk5A*qjMr2hjSd"TaNq2"PWpda0TSQO7jXD(8_bU)k%!#[D4%fja>')AWT!r)
%a:5>OTEg#hPu(ZO`MF2>,[Ipd@$0;n:aDaQm<Q,&,^hJ@$]uJSo"8*R>OBVMNV'J7kY]e&p.IgMjq2A1IAr&kPi:o,,7=9V%J1M0
%W8;A8U9p4i77<AJD\s@T'D/i5T'r=*l.SRjn)$6FO^c\PM]WO.]"28c;6HdeMtG9hVPl/^&OWKen#/i&8h='4)?f_>S&;26TJ;9O
%MmYet&`n@;n$fDC8j$S:Z"&DTBiYgWY\*2e8DbtbR7M8",8$auM,iDLa$(I,C;0OV8@fb:b!SH,K7L\GAO/Rg^%e!\NsSu5&LG/h
%,dgIiI.5is_E<\V0/ZTRo:[Yq@8SF`U9klOObki_!)?4PpaT!'8<aY:OLFSA+,]kcq#a]j.A&D6Vb[%sl,63i4ut-RZelX-\s8<n
%O""DJRI\V7IVb8;,=;2i\gTcQ[W-c/.<F?AN@<]1I]'h`-;hLml`V@%fHfl8$0@X'fcW%jWJ<6u<`)#E@!%=kUjTH(J4t4kaJ*u/
%O`=65'?W6YcUN0oAV@.L7t10JpsP^DPOZ@*g_c*#dj?82N'=3\-;)M2+#6^MQGcNF8kbS1WXO/O_PrBtTQE-VVE@',92(QR%`+8S
%3?\p4>M`)=<g5nlnc]73'.%C.Y$4SaDCsL8PcJH[?p*_BW_V^h7(A7?H),'/=V0IA%=THA>c^HReY:#nU+FC@jXp<%IC5LH#!B>\
%D`(D+U\2]n[k?tlU;Yn^M=oeR.:^h<o">e'duCI(He(hA^)'c%A`8"/(!QeBJmM/?PdlF[lra<qXC2S>^:D+?#`f,PX<L7n>n$8%
%L,'dLMC;=@EEsia6uoq%#Bn,=GY,b7M?2P?+H5d;f#@E23p%gM%p474na@s3cfEJbr].FKkNHHh27hT5*G\aJ$0CJ?Q5c;c;82rF
%+NBJY*V"TS%IrI!)=cb22TX4n?][LT;]oGqI6deNlkLE/pm"&Nq<$QN5ou<gQ\m2BkaIQ3b(<rh-f_7-WAERmGM68WG8jKs`96h.
%76J'o`C,RRY-'&9O@RQB-j4h.>jA":ps.'G0`K'+^%+Q4H0c=nb[[ed<+X':3ca<)>LdUP&H@4=ks0X,7tTei4?22@)5YkpN%CL8
%q"JGGUVt>[P):Z3(@2d>X(u?\4>mS+DTqmfpK(G;=*ou;nej#j&jcLdOcIR4/R$A[LWf]A).gKfW7\bE.$#D2UbYR;dHiJpc<I(:
%7%AbB7ZgP;HQD9HieKq(]#"1\WbT\<SU*Fu49b>004u'`Z-EV)UU5WJTJFZKa][^&)KZe.6q3#?jQ1tbidA\8TJF[1[&>IL`;65(
%P[WU"M\!oXZPh[h;hhTn.j(9OLVgou%oY="EF*n_RIfl8i:=E@ddt`]7\!h\)s<]YWcl[S=HrEEi\f^XAlH&m56cr8@rQF:*/QZD
%n#2cN1KuM;V`t]9?70_6eZ>P+`Qn;-1?VLu>n+8_hVoabkFkq8#Np[&G&SMZ!)97G-"$PbH/DA"S2VB$Eul&!p#%sJPEkad90F6W
%/JI!,K*;#`O6i<JoO9#kh`YFCTW^@*kWN]L6!oWnJCP!O(%gu1AHb5SDX.UT:I*f'?c,=*Y;k5BqGN6'hRj!pqUrK%JGr"g^(6ki
%(.Di^j!ReCoOrMP'_G_/_k9NHR.N9/lLUPUo_8)'V[oG=ed[9uO#:W85]<4E)>(I(3skQQ3Wd!kLD:"V2VJW_,moH4A^EdpI4ON^
%9,7[&c"isYoU):_#6"Ef\\_'+s8G+jd,UJD5(NXojoKda'Jb;)p,'#`oO`VPcpMX*e45Ap\bREk,ml06Cjq!8!7j(oJ"^jU#CX"=
%@Kh0%SY3ISQTN%BOc+SObu_[J@"u,oH3b@kI@#GC&F/HB@f8:=`qo5&bkc="`;4od46u!+M=i:R5,Ru@n"dBcW6a902c5VeqV^7u
%TY?Yl5"^pJKRBN.>/rm?4b@8(8@H>S]TS?(Pu-P:K_Me/on7au&>?nRFtq[#rS?(Z)sfA@,"bIdk)_Hg&scgAdBdMID"^Ot9$Ec`
%Y=s;u30uZTWtk8aPL@$Z2/uO.@(<D&.62C/>@rr6>(&lqSWlpf_8KB/\sn#&PL;Su]9@:.nm&OT`]0iDke5Q8p.3NBWmJJ*8cPN5
%kg_^dqeAjf$26#^E`0Un?@.Pj.FD2NRY*$VS)$YnHaJJBgfriHBO@C:"k.1HP$Vn[NVrQj577:Bo"-BUDc\,3-1[GYV*M7T+-<L#
%b)BJ,,:OqQ-TARJm'.l/*#nNhIKu-953>=7.A_;))G)B_Se!bQ.89pm;G-;k\:6ePh[Q_Mm"]_4_Hr)lRJ#f1BZaG<VXmBUP\YBH
%hE#'4&;Nk1m.lj9oe"Te^.kY;@+P&a@=96R=mlT"#bQ%XX</h!Z$p#q@f:;G_YWQn;$?b4*AnO^]c5r:p<C?,K)LVJgf-lP<1Cp]
%@K3Y&\rR:?KZbF%;T@;bn.G#FnV:LZ8nn][r9f2>.5?tZO+)_0E@&MS4mYp0`0;*e5<1T"_R/XrH7&!@1QWNC.Il^^]JAhnj$Yb'
%<\*O]#OGY&@\uQPB,aF+"86Dte18lNm89]7P&gip>LO36lo[^6;nC@a=&Z9)Sce[?KjUjW6rB,tHmn>cM57"rIj<X0i]#L[<:$QP
%dK7LTkP!!ZD5=&1JGGTsO'UqIC.]>llrITJ>:Xkp;e!KgAPlAqHX.6;QUKZB62P7M)o[6-M)+Hq;X@&HKmTmaDH0V=p!KmVb',[F
%FrK>R\C?LW&!(d32'k#>g7r\X`uM(YVSnXm"B&0-=aqes;\jGkM4,%r1%&HmgrEiD?+<\WcZ;,5!Ng;0rk_(>G]0/:&)PX[aa7fY
%.D2j.<o.>l=,HZ0Y9MiL&`Wa/?+_6a,Mr<e1@N9*D7lKBY]tY&lHXaDpj+PTo=gNGH&j%n@GY5@jPW1Yqnp6sYcTDDZ,^BhaNT!U
%qW\=BGH&F<^"K-IpF%R@#OeA&Gn/]K5P=BU%t0F.]_?;-bkjHt2%f:e%qQFChs44tHTI#S^08!/k.T=>.dnN<HBe0n$^R"NSt<[f
%^,k*UmpA2'OY$+<k,c3SYlXBD[eLiTO(_)^JbR]HbJ\`q>C?0ln\4\91W4XDhI57Ws1.O0%t3lPnNJ-jUV'*$fdA<=iD?jbM0L,E
%-Tgq6p.+>lqdcm?hW(MuRJ5?d]9W,h.kZO$Ns:r;o"MYgJU!5RUic)IPI60kO&gqm"7L$<&)P&sJM-Y(hUe,)hSZ\h..9<WCu`33
%ifs2a?.X`'BP5tbpWq@9&)Nr*qTShM$gZ+8CAGllq`_U]4uWO'7!%?CK?)$`C%FbWZ.aF%f>p_a27dHc%^sdAhbmVG-Ut3+B>:cZ
%/sBCuEpf[%audM:=,HUX$fj4s>NeITPmFudc_7@l"7]Fh!VVn^TcgZ_0sk.bPmK8:6E3Ye7Zj]+ROIDgIC5Md7=FLiZGHD$9>h;4
%[C>d*eG"ttKR2Q9P-5LjG^RS6)'2R(@FE%5f@3l)Xh7__Q.CemMQ[X]TQT<k:=;N.p?]Lc/)1DW$4\KJZDel;BV@&OLY.-7@V;%R
%`VF7fA'V"/NL`(jPg,ci$/rWg\k8(3o!"DMm7sIX`7nQ.kpkRdk-@7>;SJs%f6>.7ogloUes<uTjkh^K*0bA]CrCG<j$uLs]hK.r
%/#sHIn*`WS"nJcbdT%KnkrQ7lcktir_86&NP-,GTZ<Q/kn^nULWiJN3d\/gKba>EA8eWaTdT'aBIpJkN6mI5^J8`g&WNHk>G2;Gp
%"+KIs-f>M5I08sT.YA3"erX3\Q"tIChKi]"m"T*>MMcXPn482lF/d*6mj!GZ5.V:i%^mO0]I?3sSD4>EGm+THa/'.(S**EVj9nq5
%9d&p$\./!E2Gma+@d^4qXqHQ!`!M/\d`!ih<LU<KC"617^AUY*q0GP>I'jIX%!a+9hiC)F$E?0AjF(IH;'*lX>F^rqIA\)8Xb>lQ
%]D!l!>EV'6552DsVS&>W1^U'`SZbR7&W\?Lg(0hpP[&NV:i\YpKKRC8Sm>Nf"4EW+>)@9i-]5:ZbQ`?Z<j#2iKCc$gC+?>RE5Cg)
%R.El'N44n_=Gm#Gq?Jl?.]p(&EZo..7;?`eC$#6VPgEB5M&*GK/qcfW46'@UA[LUd,d#!c:!h_mA?Tc8qAQ<O[s;G!6DL>p3AKeB
%_oX1+7!=ct"c2iM8%M](RDICBUm3X[\ESu\&&30_BdN>4b+mD-a7Q?$6@HgnM[Tm%GV[qVH[+P%8h1kAHRc/9X>Os-2GY4h#(%NE
%B@st+;fhX0D6<%5f[%qOHg?bBYcfXNY^_uj"FHV5&a\Zd_1%F4YkNb^m/9Wrp>b3lfZu'MYWjb*@#qVFp]:*U8ITtDbd51#jE/0Y
%Q2^LYH_@qiY_Qj6*jCF2YC(kK2]OC$j(=r@S7nXm"82nf6jN(PTh5Ibe5q>,HZ/1:Y^]^u]k\:trojIN%JH+S0!P*"&qtb?c?ftH
%X7nbc?h0o%JT+EeZY6/qZM"b$X]0k"ESD2F^87p82pDB>IQ%*DY_Pb3I"6XOn?TpFpoa@CrS>*3Cp;7!P)!KG5&.9Z@A!D/B7p/8
%#gEBsPU/Htm,(IA4,IBaNS4^4fVc9\_VSV>YfACgqRp@em5eX9Z]KGqZoCcghd";hYX_ho3ae#*>%6-Z/)gF-p<@/6"T+'c`"0(j
%G<B7DlU"M%([`)q"p+_qfO0d=(K2))m*XIIBD,oJkpPg.@XS@P([CWSm$juX(&!&tK7,1:nJ&URO'pkLHJ*(EI9O&IqQCK_r>]+I
%*s^P.5Mf@JmjCW0moQa2?7qLNO5ecmk"=EpM0<fD]S/VH[tr-LY(VK`WUL+^NbUA&q'+uHh\)'X9?!/&PAj+'1j9Xj/)eNB=#`cY
%XbL+Qhn$O<OT+Lf_aSmYr2[_@[ZeG7DBdNl*mH%[QhqqMALK^FKMcXh3H\D(/,0j'V=ijuiiXi2(*:S^PP)1.X"W&!MW<RLPqV*[
%.h-[QA'_-2]@'si]=W)@rEQFB"up3XHqR&ePmF\JHYfcRn?4`Y]pJ@>lW];.Y,p2?S_TJf,<DUf9(\R[/gAMc/5_>:/#+t;Do2?_
%rS35%GTD(S/<PlHl&eFW$i+YRqY!I-/uke&Z6BNo=5jU-iI[`:HF^DU^2_=.QtTb#7\n)5:fMWbdZO*KCuUgM<S`oe?7=m;bdAg^
%D5`64To-Gp4#&@$+OlaOHJM^WA[3\e5,8++6Kn#eCK7S/au)4WDlkd=L;-gU-GLSo)=otRj7oE"1[=jnTY?I^2U@"mW#os#W#mCr
%Tmg=a6N(o'K)4VD;hXu`\EU_]p$S$uBQ*DRPuf0l*fA)j!Gh;X1%+!>BI^2BNF,Y1A\p::A\ie3+UIMnLON4Xj-6aA\;-O<8rS+(
%+E"]E#jThHH_`Qb@pY3Fqa:A*@#=>7Z*-<qKP:CQ:/:bQ'nsD#/;mWKUZNMo#=g9*A3GTbAN*^p,tHYuQ9!o3@^(Ns-jDD.]'Wn_
%XC$B?#O>4n<E4$nd"58P0^Fk:)5=@lA\8EDV-!=$l91/$#0UaUe>Z^HrTH@e6);QHo;t30GI6"NUnmHci<f?"&'sD=ICYN(^+mA9
%nu>3^eH1.cO^8aK(LPoJcst=?WPR$*P:e^pk5GZCl)W"bG1'm_k#P(u4Ts_8%@.bTDJHCD0h#X?:$[XH"T":"0j%m$-69)YAVaY/
%kNhchDkInMI09,oG;[[@;uI;e*J9RHk`cs=nuY#%j\*idH(.P@jlZnHIZEi\pOa(>rCr^Nj5`,@Nsf'OfBX^%UB!2#j'eU:M&D?r
%GZMi9+hV$82]\Y+*o/ct626*CQQHM5@@'.ebJ=7m.ARgMW8P`%i#=S1%_tG('aaB?0+&$Tm4=qt/lPWX);6=rb(-s#G6PWlOtbfg
%-2.H0Y%M.Xqa\@$^-XrL:V_=7q>rd`:27*OnF+1]D$FWM37MQ;3nVtpZgm5:4$;MX$__%qjTFA?Dg!eH8+0!TiP"qg*lbeqNu@Ds
%:NSM-j-QsX)^nNG"-E$Orp]7Y@_?1uLdJA&PdR61\!Ji+nJccWmtHNXhM^X^edJh;V]"r*B#Ff?-q]@%hD$TTN-B@k]KY8e\bBaW
%4&V-Nj+HmY>53XB'"E%`ot7O=mnh"M`B1g',8c=SLR%DdVNlVir;bA\]VCq3RuJP559A;K0t?be4p:<GFH7O6*?TFYc"B4og,Jl[
%#k<>'0#!C!D1!FDWdOQ)g\<rb@.@O+PPC0Tf14Y^\BR>`G9s]F>N6_C6qMK9^6j^Rq$nM+V=)L\E3&D!/($?Hh@0\tn)fVh-nHhU
%g7b[&'.6l#41s[CdOIms#]=kt]t]Wf]m"E>^=OF<-GGh487!0;cQQ0"([JuZHq1_c'7$GIjsi-?YMe'SQ^i_YH=$GCGSCYUKR[sJ
%POR\:6?j:e&E-.NcUIV8bf,5g(.r2U,>#5)]Fq9p:iAY4=7@p'/Ta\Wb%e'-8R>QWa$Y2Q?3p_62%O-8@k!jH?3q!H@gbF\5da8G
%Q-!?&nk.(@UQg&bbGSKG[4%+*6).?3C^TGSPV4Y#&BZr8Q/3rs0JP('YJg1r^,McK[X`tP/()/;><[5Q_kR"+][EkhKkBl:l:GJ)
%k2C;.,-OBJ(UFl4kM'sh:<k'np>T[/-a5dT4u`8\46DIG30j)`FO1p(_@dIY4_+6]&a1s[Mp2"ZrB`EfpCZA3+'kE*a4`43hNBQW
%:Q7'cc[Y,j>UY.EjkWr(Q-`<[.gkKG-+AH>+9tC'Q,QFUa&F*L`2NB%a=jXB+JU!/ZDdIhA7*hi"np4)Zb[[t)aWkV&COYm]>D:(
%PM(Q$0*XAfA*^M$^Ck6S:JlTf0)4D<9$;#uIq?9=((%>(9QKF%XJkh%iibcFThh+9ejDPZ1+"C7Tn:J"^X=SiipO!t@3/Z;[BgpV
%eSjtZ]'Ebu=0<%+"84-hWp6cU/AVZYR.eVN]H<hqZdec0p8o/#..)q8W$g<N-^2=9rUd+f$52a2bH,lnLc&mFIq?!QmGtH=(T87q
%!W,d8Y02KHX#KLW?]]3)^Ciu4+ZogQ8Zp#+iN%O#p#)i7>D;ahHL2:0gT`Pa,:Qe`YkW9ulE>S/UT0uJhr"/sr^u7o5CrECTT-S%
%?O=BWSO#Nu?*??RLS'$IrW(M.5bCl,A#)W8qFCLLCNP`rRV(u\04!]fTWad-3'O+k(C+`/83]Ugdegj=e;lP"eG"%=83bFMOoDje
%+anVG\Jb;Y2p9IMK3h,e#1>I1_MIi]@oS(,38LkY/C>Km!piPUC/sXpqV7S6D59+Me0Cc==)D]VKTYDuQ%G>PPTBCpOq/hC6jGu$
%`t7GJ6:`T27$@alla'-#RI)9)`3dY5b+pteS4Y=_8pqf;Q\XlTMSug;5<.(<-g>&KDS*j8W\nHs53$#pYsc.IPpD.A2$^b3EjYlf
%TSHDBer:We&_),ZY,V+))s/77V'1U?fN8[,>L]&4AehuZM"0m2Y]!NDin;c.!Vr'IkpVb$[dE.[`!/rXiil,M3c\>kes@;)",/U5
%F]bBDoR<a1$Dn/;fIY*R_%G1*C%Xt^*L6jnq+(ugHq/(',KbX:9c]P`h\`X[/0>P)Wl#JB&m$?6,r4W36OlcdUnTh";([#7DR4Qs
%h<X(uNO^(?bt_Mlk'T&>^2Y32lg)C_3P'4E`QXi*W@6pa_e[29RnXLXk6Q'VN\8V<K+[;F9pP<nDB%d%q(L#8(J:2fX_[dKq0HW7
%I-O&/NUmo-3B3'Ds*/K(P\p`hTbp<*k@*ps+#r0N#*\XrO^cV2Y+Qi+LDo>H[Xjb0+jRR2/0rMf]-$-^Ds+KK5$U6a9q8C5.d&sC
%6oeVU)]s,B-,*A>&'n*RcD)MkSt,PVoUYT=8n&0gF^i(lU6mmU!F^F8!:?/o^-P=40^mCVi]NA\$ZeM,22uY5B&q0]M\n85S'Q9o
%khg;8Pk5"Kc$G4#kclg)dVQ"'4+mOs:JCo(]oGC>?Vt7YA&I[t5`]-V1?e*p;UAK(0aR!4=%3ke0gEhiqY-b+o:(:0^!m/VR&%2%
%TXTtb5S)C3B$c=)0XcPh`,Q-1\?O]gH8nPN#(;l!q?d"N=5O"+.O,"Q[e9A<Z(.R&o[YpA7l]:FC!XKglIR'#$F`P:Dr].=rniS'
%I;CWe*+i^YGWTO83%]`05PH2hEfgKM<,rd4=@0^O)At*2R;Odj%It8\;1g1Sl8>WY&r<\V%@64:I36'ZLm/'#=<cWHe#&,*UH!B;
%AK&#r/7G3VC3=*8m1-JJG\"b)SRF8Pq;-<U#k8FO3N9kN@$7*P@0oe@p=[h]I->8hN-O,4!r-AM]je4Q-='=JYUBi"Bp'/!YeWE6
%_:$I_ibkuJh_)K[C.CB)XC#G@FJlrmYZqW&(ZLAIYoq!B]j3]U*m'fd)(`$t[=n=7nTV1i;94*2p7:_*AhmK&+'p`(3("`+c'K>"
%@8jMe81@ne84*.HYM2A=R`Djp;r6$<eFjh1nfa+@k,WEUK^16Wq0",@=JGB.]a@/QF:G3aYUl042)8:nMfRbq;'$ZBNuBRsamfjU
%Yfu6-<J.+S()hm8OX;1KLU^3qh+\<D-l-n:K2B8i?['X'9Dt[a!NaV3J#>uVVt8!YpQhU:jk&^l]X?&?nI=_fgf#R^j]`oHNm4E[
%c(+5I6M`mWZec5$Z$s>7Z[SG"HJuGeH+<HDL%R='j9F&\(:'Ui<H8K?[foBa>akt<j<GM"/fZcL-Ic,hmo4q93W,Hn**[de5(\2S
%YmB^R<JMJDTqATaFbW%a<-Mj)qm(0n4j6\f'p_Bt$;D8$0_9U3T1+)`SSFt)`2q&\bI#<\'3/JoXN"<UQI`)eLr-Ga4ZH=c-gtJS
%-JY@mA#/3GmMcW_$;2)ke0kYs<u^K5bLHuBi#Z@t9,3a@9sV>@`I5)e+Pc/".5tXF53MPD+]hQD2Iu>9;HUXAbkY.j-(8nAW!Z0'
%ea-=GhHT;h;HRD+k0\.L]dsQZb<mksJbsW9kpspGW1GJ+L/UWOM:*bY%hS,*J97gli>m=t.ue4Lh"X@GL\83X_@d:uY=B=nfi4uO
%Yf'G7##\Q42'3I_8XV8-'UIC%nRr]c4q-E9U4%^&.LYV]=l4aXHBM(gd2J^D"86eX_VR=e$LDQL$@>J>.`!1tW_BXh,6[m(\mR`4
%7^2VGA_<'-gL*7L@);iP<.[8J?+!?5daItGm-u;R$N&VM"88\_%gVHPl?^5eH@^1R*X9CU!VY>dY[DD'.#'nM$-E;GQ]rPifO9gD
%i[uo(YeU(`OC7OjIi.lj1j1(qLE=D]fXE4Vlogt/@:-,o+2crMHr&C-^JT1,6TeIGfR(f$%JK1(!rM>q.>E7&=^c5t"+pL<#Wc?8
%d*qFcm&L;T)>;/%bRFC&gXHf$]l8a8Nu7H4YeU(RB7kUtB]ah.lB(Q;qfe$7[h?U83k7'5Ma'E4p@^7r4aotj@?4-l6YM3n6=JNA
%4RQ,"2ch^Flqr@VfP^1GBb/*&/ITH$f[k3eY^[_qh<i%_Y:1Kr2g?k>4b[^g^7$WK@1OT+4^a>bLQ,`7VQYHc?BOmup:9-On$'!]
%A?<$(UDrRC721MqmbX.I^A;D21VkZqgSATAo3W^Fq`25q57Y+=52T=JmjCW0moQa2?7pAU4VW<--%)Whq_Rih(lS*aCZID->KB52
%PmFk^8,\]\FhSB9-2[g5rKUEPEN?i0@3Wu;Vd(<4r^qDjbGG3\)d]&70j3QN#MR0(I>,2I^@VUp$N&]>M-qEP+FCpGf`UI^IjG`:
%%Bg1e=QGqI/";h"C*l)IG?+07U'@ua%*ATtZs@^/qkQAI2T!12s5*cfkU5"mpSj"adesB^^N)19?*LMe3/2kJXkX6V#d`01Cp6G!
%YE?R4K_0eo^qL!?7FI:Qqs\cW7"".d=/$J0WP9'D27o+fp+>*'@/iDTeR*$o,CcO9OASemABr4u;`/QUg>[E9_0p*]r0>?<Elipk
%^3G@=i4`ANSdkG_2s&mT_EG>_P56\kLX^57=(X7fWkZtu$^LXT=P;RJq(&L[j$[g?h&*UV#k#=nFiXG7edpQ.d/!t8'-rCRHg>=J
%,u\T$o%lEBmN@:1madOMbk9&8j3t$L\F1Yoq`_T157Y-\^:u&EI[o+]qg&1!p;_jom@,Is&a_C8H<"YI::ZAX(,o*C-16A_Wkf=L
%IZbU#Z,^CG#aP+c-8emh&A;FJBO;367!h^g-eKZ!qc8=qdYbZZCsh,6;ASUBJ@a9=M4CHDWkf<K?LRZq?k:I\P+0G2P=h58\8-[7
%/=Y2bMSTp6M0b)r&k/I9A5H%P6cNAFArlMBB/`qY)nDJJYXD>`QEjWa)c0X[p'2V:`rVVY/5`EX[31ESA8OdZIBccINV$oB>L[(q
%U#\NMbD,*78e0&=2Cqo&7&3=O>&,^aUb?m1&a>L%FQ^N?MMJ)h/0B4E("0j(IhC*fS(9"P)gA3s-gn%)"a[72<-;[c8SYiQ5Htb:
%@D98DNA(m$9MpQk16KT3D,K.@Wp6h,=sMqcYf)_(MWD"C`g[)$eV+D7q(tdK$hDX9e8LEb<df`#e'PSC+E+s[&'3)E$$g<c.?M%0
%$%`#dDV63%e#=AYCLi4u)VlS*#:%=EHSX[&WGR`hkJ&-h>UVlZordfejI;$En-dPLq,5WAGng#1$@,!\3?Sj=5Wg/"KjXWUq5uSW
%O>h:r5sC\g8Kj_2:NSiC/uh=$O1m@paLAL6//"Da\J%7mok=%'H"=JC$@0fC;91]^e&RQZ3o:VA`UAs1o$@m/'Cq`c^-fV[g=cc,
%il3F%HrEhGM%+,^Dp:RlaMT>G5!ZhbGZc2.Tpl5]pY5?V2&kVK?H'gDYOArD1#ui:lthd(cRBiq7oduY5lQ1ch*qfulfcWUDuHY,
%OLNgrjRG$hf!*eJ]+2n,SA9,Ik\qG+*]Zr]Q;(LFdSVlUWEE]OUNths!V.gI#NX)&Tc?-Q-;coKO7+hQj?7p-K06LMRS"(oFu^\+
%p4nnVT;S3.6N1BC2^!%NW#bHRo[aHG5.X%o<5SAC]#0RW?a3kh;_`\E[I<mo&Yf1C?'HE9gF,;C<&*hh8!raHY[^ulPq\9)f<"D_
%:ghctG9s]I6R-g:D=Nda5Sb9XV!^i?3aM$RK^Q]tOW!`rRpE$ZGVJg9jK:=V'N<jV8a<Is?Fs4@1ZkAc0>"h/3V'=e=Ia<Cl]6)#
%pN7\*5<Y6*SF8o$'D&a^Pq_CG+/ePLAd,s/Y-ad+7GO.Ce\XZKd$)opj\`L,n*8&^fu[f()s&4l8kmg#mPieKQ)ck-id<Pn1$9V`
%Wc1.ph`%Mb+2n+m(!q:>%tbp3j@JRYB"cbETDnf$pBsi@-(<7c0+eCO(8XIMQ-%ak<rm`U2)TsA?:X9Q9-L(sH$fq'P0i?lDhu>Z
%;(4)G!$u/!I<O"iTY>`O['78Il^a%.mgmZSDo?s<#0!?T$AF,AW[kDI<)m4<b(W1Ib4fC;N-ZllWgG<AoAX3`@X[[9f,aNO;a4-/
%nEMgph]LJ;os)>Zg8hc)ND@u-0?p'Hn)N+:IY<#@n]6LGe#A+"ha[hBI<;03*,J"@GZ.*134TLko*Q8uO%U5;2c#ebeA&4.31?Y0
%qUjP3-*",dD'+\9.tQr`an3*bXns5^*YG`WlH0@<n+I%MS&'kFs)M2kQ.TaDjcG#,FE?+:]rqbZkg:'jKeY[QhpM1Y<co^7-$X@#
%"aWg^-ZruO4eIC!Du)Fn=#R,Q'm1gs&3dR8d^M?E-n"?>Ik/.BdV:_hY-*-qG.V[-B0Ei1#>nR6l%%9KZSgrS4Y!)(W[eZ[YYl$E
%4`WJK&CqesGLkq`aePr`f#jRd?YUa,jnj8pXsu7q93UX0U9$"k-RnB)*D'On9cBKn$gZ!,"SFE_B]o=[7WhI`HMkcm&C_M'gFUia
%c#K_oda$cKFlb]R1E18dpXNPf7!docB2r"W%4NZ)='C]qWO`^8NHC;oZIGI67]\9)QH^@b^pot%=PliV$he.6l8R9%YeIsMKZV!6
%hV-\ao4EtWelsY!@=>3&ang5G6EIXf'sW4J&F8NCc?_\lZ/4B&=[,Z!A,X&l`VSUmM=i9F4k"=Ui!qc*ZTd;;SqZjf^TX4$Lpb8r
%`K`]2ctFuk(RC/aX=mW)cE*'oEj/Ya"t=.IY`TII=)8HhXG;uh''l1(3$d(%f,nW'4^'lYlZ3SGDlgEqG@eIcP7[&dC#hI^^0K"+
%qYmbgXG:jN/*g,0<*u^sc0S!K)6C#;&p5ME7IebgH4q=clH7WnFKcfUnQXP/LacG&=]o*[]6geHoG0;'lUrnn+kCuKR9BR^C!Xfq
%N4@*JHMggm_>4sajf"eDf%6HqJ+r+RYo^+/E%HH18QfD@qnW&;9"L#T0]Z2F4dI,Y?p3e<ik]q7e#7R"dKCB$$1#hE,HPg^7Qac`
%K511sq@]R/hK-arejCFDPk?t/HjAubp96=<l]BUlefV^(bkh&MP5;iJRbAjbT;*@kCF4j%:oRHO`YQejg?q8u8_(Q:^IF%PF*,9E
%*c,?bGZ/1eTA7H_Gm0-!a/'F7;>rUm/N`8k/2XUBGIP_3['tk56$rADj$A$Z&MKDOig[B0AAZ%%r7VD2GLOCF]t'r[@L61LBPOfj
%R@"&1E=\+UhCY&Gd^KD>LAST,r__J&Z*CWK?[<9QBO@r2(<]g,5)I_%=G&f74fWr7p=?WEG3U"rF@QPs`d5s/hcX=W7BB9EfZEt&
%Wj:Jd#K6Jl'6LH"<D_o^l\bq3RJ"YUX;$f9i\ab&]iXh[l7IZ_*m8/tf#_FtIY$J!WCJUFCFI&q`sO])`tG/#q1(u5==bPA04PBe
%Eur(>hS$b&)p)s2qR/qPNQPsn)5sTD^:9Or0]0NBRP9d?>+mr>^*C,%m@;58c-;J7kE1;E,p1A,m#HGP4Dle.WGaqHCr8A7%Rhq7
%kim+%:Y"EM?'&u':Hp:XT^!J\O#;\YH)o\#aSXn+4>K>2hX@5nI=B+Zbj`KP5kE+I^>lstM",P.0n(*YA,LRMB)FVK@_?'`Nd/95
%,!=#[X%Fq:T84:T/48Vb\W-+IDcp$'X8*T.]Y@*IF]cM.@;Q5emtd<EKe.6t=tN)8-EREEapd7M[Xf3lWPfF'@,5;#kjD*\NUGFc
%D(;eY##d]2`Ft=jI=2mf/\di%QEg*.'#qP_jA]UA;"5Jm@YlLd)bbFj_`]uB-7@a1K$1dEdcraM0!Tdi'&5UW"!742/J:^c*:+<]
%fb/Dsh<d7VpY$Rr1Z"7nGpgFTo=U7*pY'D-PjcRPf+[%Wc6TZB5J)-&U_6>1:p#Y3!l!A_Ujt,L.#/Y3brd2/05^'h9ZFP2C%KE6
%^E9c9I.\MB4,,#BYJ-f8O@Lk'*RRtG%;A<lp3hY&h''iuQbF'mOW+1s`"KUN.B:<!!?,kn:66"Dhr,c9A\EEH(fA"2QUi[Tc,K&Y
%_YNVIh)R^loTSkOYWd+l<2=RPkL%9J;2aNS*I('FY_NdM)^k)gPb%H3\kr2rW\Wf8Lk*4#m\$c=1hs`NEIOM5`qaoZ$hVJn$L*Hr
%8J12ogkHZ"oIc@QdPq3CM"Tn?</W%0r[jV"@K3"lV>:bIig82)M'S%'ZOjr0;FtP/mRJjpYgHPr44>6[Wj#\YDq)r8Z<3h=TR11)
%p(7<O[90.p!k0/S*`s4]/<apfWl6`_9hm:+%2HWR3+2c8lsd59cju/<aU*;RRG2Va[(;6ZShjd3>X,X6*ZIjG/=,]cfI`Di-0V!b
%bi6*8/.kpe1(_EQZhN*kO6bc-,=#d$r+7!>-AuHArp"%!`"093C9`G'mlD*G?`_t``3d!CmUWRj5H($i@en[BaC8k@?g7k+g=K<S
%@Ym.pn5+NJ]G6QAoN5r5[9-Tq;G`9_`@NU(`=h'lB&6qX<Y!R8W'`\q/'Xo:K"g*(,aLugIiabT<YNMFjpdci\=eC<hhLWCJf_lH
%XcgWnjOH1S+5q)nd%cSK4[;5%2paLi>OA(::JoJKSjtS_Ro'd]k6QWfN\8]Q@hIr'/J[o,C)cC"q(L):(J:>jfk^EaqKccY4au@T
%6#VmK"8&I#4?sEN[fc7V%AX*u;#.L0T^S>%"a\Wg1$DJ9:_1o?On0QcLR@?Md+>ua,g^nI*sI(2k!Yk\*lB>Of,>CrSkPlOYL\r!
%6'#d<Wh>.8-nFLYRTiS7HXcg]qJ+bM$hP<,4$d5WU7aHo!J,^."!+%QB]o*jo[SQ9%!j18('a_ip,!,&YMWd8>7?oc?i-p;"+C&1
%G^6NDhD_;<oN7YJ#O&:X4+f`iB.&8e?H8_Z08YkSEF)GP&'uP]:`8op;;VHOl;@feIIfL6!^.lER6gk%:J&`>"1Eh]I"Pac?1Ph-
%GJ>Dc*n#bdUq_9MfLC0Ca!p7]_er*C"D-i:Uq`h-IZj[1en<Fg'ihZ4o[VBKQ1TKHP2=o*m[u5hk=;2c'JJe_1nRP1>Q&>j83]T\
%l,UUue;lP"eG"#/deE@j8M:lPUdnj;;2lmo'3F3rD!FX'NV!u6;2o-E+erd'_<D_qbSt4"MJ=]ejVLm+M%knH87Um6.FM>Xk.GT^
%=MdRl5(L@jU"KEolO1T>oEfqqe8^4BVNb(jM1,cfjCaV31>F=t'%80p/!Jh[Eei`bQ+j_@/?N2Z'9-QjRIJ:hS>:oTmb'I`<jk;j
%Ylt@GO/3HNP#Qb:*:*i-Wu:+&I;sT"TLV-'%)jE#oAX$ON&EQSYll&IAlsBSQopZD=hPf2D(h*1H7\T.Bnqs;@;5Rho!O-!P^fm>
%*gEj>Cqt/8UW/YsJE%nA,eM<&h\?IlSV?Vd,fVs@?r]@UTW2'a$g+KIiRopbIS9*Y,L0dhkY[D;h-!$,QJ#fKlEN2+66hO;1?[+\
%*m8<p3:U+F@aN@.6Mdj4h+9h9ooo"QYeEF"pk1i/7i2&u*m6E%8T2j0GD<jkM0o1(p$En]N_QGrPMQNIoKKd+hN,$`I_6nHI[o'q
%qK_oFoZ)(]kc6(&&a3TO?JuLC]2`_N]u<TCAVhOVD5slEVX(!,9/Od$C:l9jhfEV`([p6OQnLoM_L/Up$]KAlD$O'DU'.R0bSKAi
%?+=kq%Ob="+H%[,NP\.YeI/?-@;O/I<0in-)-@dJ\7ptT.BDqQQ_cS,$KA@-0G'8Wa[pdAR-Q@`Za,RQRH'[<31@?.;2s&!\1HHS
%Ye)Gf/'s<%C`4/J)"Vt?i3&Sgp)_0J@N"_UkASl>W6<Uua#on_;K(;qQJmGRl;Erp*\TCNb7[u9]8r?Of#4+aQIqtSO8*T6HefpB
%0:COEj"-WnBpA8W8lRSM9nb69(?r*\\CG/)oglR'/DnjqP1,6Z`Q`<hH>&r:0r9XTr)&el0rsTEH]ugXR9Z'O`@#\/<YNN1b7\B=
%/nH0Rho#B'80=_2INuN;lSIe_[:StG,fncUMNWFJ:=<>_9d+qE=\4ZW?7"$06:Emn@t7*7"rHOEObiZ/N_K:hB'Y0:o]P2YlQjoR
%j>DB/I;KLY*l%9?UbC>@O<,/9i?19K>n>B$0;(1$B(DuE87/o<b5G12qVq7<OT(g=HCTRX%jP*.8WO:*>8Iq:5@djXdFX4GJ+jd<
%OhQ)bn4n:*,#Qe?.d8jAeao#hoYp9]Sb0,sQBUs4R(ecuh+^FIgcNKNY;Iip9lE:mT3X_fl#64fq`t!m;.V(;E]#Y:^@WI(7!c&p
%@F?BV]Sk&(8bnT`,Q5f0K.W9."\JM4rOXnoqhRg^%G[BD\N`35o_(<i]ife?P9)f'f0O`$&IO^CKlWNC^:B/Q8<7eeFH@Pb["h56
%eqN&bl/,;%+FSS9H2U#)Qc99piELPkoU\"MOl!0Z8pZ;ulToj(5AX$i3-FnXoEVY862J)Vh^lrQ6/P0kd$L4-%eErXF)eqjA]M.c
%E.Z?6g:lU^7L8[.FKp97Ch*Eg;e<Y7*3m4b_9RA;<+8#U?B9M\OK"D`&mOYsU/^tsnWG-m#"$="4dI45\^b2HG1fqWB(ZFth<M75
%-H7:ZHIGBH`tH,1HE"pt)B(,6=4ju71)mI4qpKG9II@&`PkMf"'@B#93;,ggUprYMZ,FT&pr]t!9Wm3/H`QlUO/4`%WoC:"W"gA1
%P8!\p_<pKP<jrZaO6+RLfMl\lP*I@89D9Fm*m<(RFO@f@j-]P6GB.?M2cT^=`tIQG)=ea66a,KHg:&K?7o&NZHS"&c.=OEMJgH;;
%RX-Mn<O5n$EW?%5+2N@gHoLaSnlT'")0ZG6fQB82ko7e9-l95*8KGo_M6nUR/I:^$=%WkeCTHO$`:r?H2hF29Kp$a5!V>VX)aZ9O
%Wd65@]26UZM'[S[aCEoI)CHS!Cr3]S6"&TPY<2*+[=5u!OnFk0:TGX_fNU.YoiSBE$%)!8\PjL)\Zi!lI.b[s,+3Fe=qq+V^5iQd
%qriY137q^8HrGdu34TLlo*Q9"O%U5?2c#bag:r-?G7iQ@:2Zi?`D"ckM26M]lELJmF#keKO=bXTa3m)!8Ni@MAFES2g/m;FdCtpF
%*m9)Pm9;`>a=*'-_qnIM)siJiRD?P0p/O8AYk*1YT*]ii&>Vo>9;H71_efSgYI3UnfY9omO!VA]\Rg_.?e\,G*3_rn,r`A1g7r]K
%ff/6_ot>."GM'g8&B&)CZ@gt[ZPnK,fV@s#kST=P-*%+kfH\[Nmm402Q6X/\*\DbtH7UY2>]u/S5,iSSh.$cDQdjMpM6=5:AOKs6
%lrITJ>An`V=CT1fS74m5HX.6;f0o#BOZS'Ge4+H8C2AM!lq<k&H`T@_oiPBhd\S#.GP&/+4G<UsmPi!G]J;o=QH2I/8NiBYN2l0J
%`0-nNjKZY7rf6'ECo34+O!SsY>gYgHO2Lk+E1a#9I`&ialPmKlf&(FbSa?sCcd@Srl_u>CDte>4^>Kd]E,X2T_YkGtgs=@gpO4g5
%]tZ#VI[o2Jqfr>QpW',u\5*mZpji6B'&t%Jo;oGTh?SjUO.-+G^cc(2'_g6iZD;$N4`#T/"7Eeh@,]sQ;N,r:E9%,q&,(nkgd=lF
%(JZ,`hNitNqt=IE^5dA4K_sC(g)KIBnU<"V4fq+lhlL**j5.q-:YZc$;0La46C:R(Ha<L.qpqe*hWJO1qj&>C^%i-DpXU^6a#tF&
%i</M;`Kq>6`HT'5mT]-`Zf++@C*(BC!W3f/Thg(pgd_K^'_gfdlR@BHm\*apNde9p[<H9=fDYp/EM)W@N-kJe*lWQ<0#]tgND!m=
%_irOdpK2d\"8=3<M?iQ(=%eL!^u53BqrWa5K_tKed![!pq\J4CHfu9/inh#`2Vaci:3$;3`'f?=Hh9\,N;I7FlNciRBRRmKXgfB5
%n!b3"Q1o]Kj*bVEEd6e#`I5Q0Alk`&`+n3/?R%Z#fBC*M37ru_rgl`/5;f0`5Q@;JEhPmJPeUff>/h!$*Z6Q7_&aO5/V=4&e7a]c
%]<sV"g:-6CUEt)O/1I!$O!r_Y7a$aiGUB2^)l:Vu#'8phL'(@L;5#;!Mn@SW^cqT-EFXFaXalZ/^"!e$54t:$Z+`Vu-V`/VSm'"0
%LKUcL7D4uaMU9fJGSMfo7=jktUn"BuH_U@'4j#bP?"d@AM(1hbT_gu;F9fGUAi0p$Ui1uH-9^E_8VNK*EZ"Ed&\qQQoNoq_TLVC1
%mQsQo:A:#sTd;nj4$G.$7!i*Q0Z'L''"+[bo!.WN76obs6Qjb1lUY]'H"<.,DZZ>0C:->,Sf@.N6V/:>_7]RPPk+M&YK%'ROO"P#
%)E5GDjKU?PeRs_TUoK<Y@SYGufb3"m6<1<KpH5a@nIR_E#0o<nF$0UKrYaSE*UuKt57rC,l5PP?fB#."U\2#rTB-u^LpuN841o!p
%]CqbbYC>1!9n"(S9dOD!*tcNedDbm#Y`8259c<N^j>P**.p.lt/la%O4D0No?_H(f!dT"5D326:M>Ab8F\bH,AV"O\bfZ$&BqQKO
%=Tm*GqCHWuL6_u5<ZjbgDbj?)AO$UsV*7Nt(3cb2U:dZ<2pB/CFfE\Bi);)iZ\8.iID60]QL7M4cTSOd0lL+'UmSXF?h%8C,#Ku_
%=lOgeeB4NQP$?]hj\`pXG+iIV88XM!*#.Nt6%kP93d>hAj_>Mk31m9=;*"[KcL/o%jDK]V5[Q*GIKTPt$[NNZ`ELt/kY!G<ck7F,
%%98+JO8\oSB_dZ(]9<s$`UsWIoF4UAG_!M]YmE3PhZ@p71jdHJZ<En3!6-Uh0>=`[W(2<#Y6KgUW(sp'B_d\NieH\,p=0ms"FDCe
%B,+So,H7Jkp1@?*Td:HmcUC1D>!/@7@/p5_eS*Y6"$L>dp=BKF4Jh]im"JQ6@:(RtgL+s7*Aq$'d0Y/8XXUJmm5\VT:-f3[2P22G
%cOkd-*8P&l#:%muRkj?Na_e8S=0Q(^>UmQ27Bka$4]i75p@t%?$N',G(r78is-Gbum=rdhlsFX4?F%G^jK)8&*/=,o_&b?\b,g(d
%T6.l_@%6A14lfS)@%[;,OC7N/J-bl;8u+Ck,1o+CUqOV$1>W3.Sm0(92m(j?fU)Iq@Ga<B*VM0!Woa^S`g\et<lZp-Fp@>L:85+K
%]I5q;Zuka;c0ArBcp<#W`c#uE+M;(_Au0qKIIBW%]/QeDBV0WK&(;R#ji4Z'IH%T\r]uM*TKOchdR!d)Tkq1Ne)!.!'CE&)Eu1[d
%]oHffT2JS@QW\(2e%V3BDPK?g3L+<>AOejrNs__.clP!NaL"Gf_s<sY/C<dWI77`,6$or=I\;*\;/,Ln^nNt+E_0r*/XRn-Zq!&C
%hRtAe?9`.R+R9uR%g[e)mB+e762N[RdCpC5G_T.6ccu:N=.QE&DpdG(<Vsf9)Bmh\d7*qPY`8A:9pPF$EZ=E/'eJ&\QV+VT-1%C%
%9*ctkZT_\JQePV\5ndfmipPC]S66@qU66Q>eY>`01]"KiV!l<U7=*ESOjXm)bh,m/M>_V(_(b-t2p]+a&m=h75$Y$VMnkc=l1,k^
%4e;rP\];#_p%;)(qU./mPkE#,oeGd7qH#7]n/c.<=uMW1[ZgBUYJ.?WP`&WcOkt2c^;R%Q2s\<*qUI$:YTAKpkl^70`L!"cGe6R?
%bDbptBu52"lQOi+3-eS/ihO)#gafA@PnBZdV'S1P>+ZC=4k?Q7Q'RL(GpfF7G&-I?8ZYF#8Kp<H8X)l/7/Bm(GOs@o7oF)$<ss:B
%^5J)e\=l2Zhn3os8<5Ei2X4_JE<Vk_^::#&5`\7K99#7Ve>d8j1^-5nULgPjRqs<4U^fhPQIq$KO!0_$$j#]]I3%nT8brNjT1PX_
%g0/[J(J?qmdeD-\H>BUm,Q)st]@h*MIDn<%lr#[4;sdfgCP55C7jjbg_)B`&2eCEuP9\NM/(dEHQV+&DZ$03C-&`Q&,,8_^]4,Yf
%]gYWEBSiC/aD/'bX0(AcBj[qZ+jo/bIR/sZ-n;oF(>:_'`;sM$)D/5SDC+[BqpGpdMtXkMgh;c9e>>].j>N95Y9$X96l);'RI=[n
%9XSN!&F>;mk)L.&'EF%1!O2o%\@aK9#Y-N/6p2f8R8PY7b7Srnja3*I3iX4nkfJ:3dF,]5]?tYA$!jJ_DH7q1Qep\l;3).23st7W
%,3)fY]rjjs?`^RsOhR-o)_LU-q9"U\O.GH,NKt++VbN/:(qlY_rdArR#NtCfRIlU>dS0W<:@ClVS$0O^Ei0HPo[T9d$hT7120E)3
%X42>d"SBZZndt&TbM[QlA)cXB8g/WQMJ==u[&R,sQDg\=HJ-j_ab]OG?_XnqYEs?qbEcRch(_.,oontPXM2OHJ1EP'UV6VgIPV0U
%jj?qhnGPPP?10/*YE_415+=#qq*$!en"Vu+rEpT+a."jGa2r1_*uD.(YLb4^0:j`&1EJ0+(kXO!ol@uqGL-r]JQ;q:\oM>(>!dl3
%h!27'WS\;E9td7X`ck?Q7H&S"O#ekteS`@mb]h.-_X=eLDLUX6JnP\Y!ZC!E5Y+J;QKXgr%=]/O/_?P`QH?QneS//[/6>T^(Z2H,
%_S:"<:.m:TUldr')%S0;gSL3:`%_mH#322BW-60j_^VS7dZb!Ke8k6g*JfJY>idmM/%EN!#iFth2Sqs@XC9%K'_J?RdNciFe.SD'
%j$(_Aq"O*aDO"DBNI"*[>/$bmh*oP4liq$a=s@;(Z:HRR]e0TOF%].$qG`_`U>Rjl<,>Q/8ki2VHlp':+NgH=.B(b%!g/V@QM@',
%!CrB0qmi`l$opj-X4.bJ)Xek&Pcl79e.VZI&+@ub+W!R^M*<SqC*:mTiIG4,Dj]2IK`3+FB@+E^<VqFjXmM1?Rk_F(^7"5##CX]_
%6''])-.(COMEjBr#kW1[JUSSt5jrWkT_FZ)5X-l/JR5OD5`Zi9oE"SAA-P2GjHW"A$u"3d1H2(l*i*NUl/<UQ#O*E(4(e%tp^S)(
%bpC?)8!-);dR-[f;$nL1lr4LX^@W]pOks:B.Hu2C-R+!+;/@G)D,EmnaWsLTC>J`RoI0[?8pWIXnj.S$lIM0kStj#`^8=AqIrMo]
%o^sh'HFFq,ksqMq62LGkkElV@X$r;AoZ5Z99_sEc2+i1uk$c\B'U_O"qLiK+rVMg5fJ;\gSWjZ5j/;nsUpn)+9`!D6SO@dN*KqO/
%V8B%KIbT:4*eB!eUc1HEP.nN$@4/`g-9XutL,iFLdK`1m5ENV/q]J&akj8K:92,ZUTjYr0qKDN7ZAnL<3b0PM*W.$Cr1t3l*]^L]
%>X(f0+R9uB\(o2&qJ+-lMY]Lt!0*jbM'2fsrn[!4XN+"Q0<4[oec+'#,D>nR\kq:F[?5pN-'<YJ)Nhb+s,ME9:guS&]o,q76:Tp/
%QGr^Q"`kXK&M.X2[;=u<<3%<;s0$BXdt<NHXd3Sl$Ym(;-:TRt[</A^=Y4WGhR?Z?Tr5/QG/\msC9rKgg/j"JmN]:CWRVV19i"fj
%-2K!JrPMBWbB#&3j`C*R&uN@qjf6`M[D03=gn9F('<C5CTlPD=:JTW]&,5Eo9.Sp+]@O9"*)<l,W56"td9=-W@+SSb?D.c$`?<46
%DnW\Co,_V8(MPJ+FL=g<NVBQAo-j'C-4^T2hk"K4>2nRX[A_Xhg:\0nc0cj2IB=Xum,,ir3FH4[fRW4j8)5gU#mY+\/@&H`ca\$;
%JUNH@:60>2h$_*rlp]C?qJ*]g2V,WM`R.@;@R!ET/CEQ6#*i@-F/peS@:3ao[7'$PF-G+ZR79rIQDbpJ;hKV7$Xe2*%s@gRrP>P\
%TLT:?qiN"B59(,(f'!7M2:gPC?b5#g38ZK*EdU@,)"`5E5i5(Ud/1X;dZ6=ude@h;5X3SEJc</U!IaW7.0BI+g,gP\^&-nLcs*G:
%V3]BuN5l,4\oTt`[6tPmGcB3@`.!b>/Wk]`Y9onq7NMVZ[9keD*m*/O76iG,=.:eeqnd=44Hr[O8hH1MPhI:g`.Ygce1t0m4%V"Y
%D)/=Nkfka3:=.UU6u$H']7NR*!W!^($KVCR"O2(u>$C.pKjtLN-<<bRhcs$[QL6lfXd6"`khnR.j-Nq$&Q?1LbTgs\B#/l"4Sa\V
%d.,o+YmBo<[DW=3m9g^jECQ9u/b*do;6?/QW2g^?o0t(`U/-<7==pkm/d^[tZ]B_6AlBVeI(L'B=$^*MCR`:ggmPWT/Zg)Y<ib?Z
%kK!/BM"AS[E!1J(TW;6JdGlrDC:,VT<`Q1HW[Fr7]Ca1::Pl0=bsZS][7'\\HQ%(W5M%U)0%AcW?GE1?M"M5,#IH<Fe>'j.3D_q1
%-gIh;-DS;PXJj/ZY7g,;3^p!>,D>nR\kkU$7]?&?A^pHqgJC,\J"ckO:dR<[?fMC@\*IJPj(D[4p#UW4e>).j*2j+@l[a@!#NC;\
%R/Q:Te9BZ`7(l6i)"jg_-jT%p$#_kf/7GMMK_j8$L4jkk#/mHi7^o99p$(`bCdNRA,iKd:SkGfVYL]b8;3-mtEh^;CI6slfOKb7R
%pE]DPoo5mA"\1XO?X$R\S+2#*5MLj7e78*C`"/g@VUpFrm$li>osqQ6+k4!=CZuFA7Xal"cU.U/h@bQI7Qh*Bnq$X]EI)5!>(_#g
%rR7C/KR.tcUE71Fbc&RjgNB/1iIo(H8$UjGW,JhN+Om/;.35A-,`Q$Mi`gF<S=ol[+:cmk'I%ukrO[YB:_3<;UT!qbYmpA<P#Klj
%dcuC0oKmAQqCq=0'D2U85,01PgL6bhR2B.*ha]WTQTu+;N%XP/3+)WqUM8^'lS5.Ye;jVSr>8e4+%P$M5Mf7'mq5+cn#*pa?ETJ_
%O1NrE>"e(hg8O&uUjos`DBlj699,Aj'TLGD<tABlX]eB)cp!)fLn!5#[6t?kVQG0r8WhR:o#u9Vee2"%.q)N+\*c->TLY0X.iT8f
%+7B<-SF;H/M">g$@rIl-P5@UM9?`h5XNYtf[:9,)Xm[Q>95ENe7;I0UW"^;PP8!PL_kl1)BsemgpKH.*_hltX2*&($f@!Y(]@V)r
%$!j()"utcCh4)#4kUT:)a_R:VphSru"<T3/>=m]b-.CaBl[?ii#r:SC?;%Zn[OrduHE9lBH7^6)n"'[T0-8l!qNf/+N2,5Ba/DA8
%I;4<a2d^uC,[OOqe3d(Ra_P&HCX=h>@+B%h"nh8_jL)oBjVg*F4gp$,H7dP4n\3Oh=Y7Rk?;'lB<:X4%73=2.VDjF'GV)cYk^E_%
%IFl:&W#tm4M>@<Wha%/;aRcP[aXic.[ToR@p"!N7G&UXZq[r*Z&TZsbN%3W,qE?+-n"Yg7j'Whna."jOa2tG"Xt,lp4"jTIJ(2TW
%AD6H&XEVG7@XYV>M0^`cD_G,(Q9]RalEs"^D/2bbYXdn.WRhd))#:asp=8q*[')?ef+Lt"X(,er6Vqn_VS+Vm2qgV(FfX+,.8?M9
%f+PZ$DuI"]O$*//?;&M4N3A1egc.U5QFGECMUrKgM!I7Q/0Q8Yq3.$:n2/Uq*lT)E0".hj7h`-RMK3GCZ).=-G-U.D(clVslDGj^
%MfL,E"_$12Ber`)IBbp1%JOQ%>?#EQ_;mplb8[FoQ"TeD`1Ei89D%_^IO!#4@^d!A^A9@'hS7!T1saTVQ3I$UThaRfS\L3a;ttEl
%<G5`eFgGbBFiU=f9.NWG<,DAjAo#UX['/nK,MFA2\u=6oh&`bq@`rM<<>A_I]hr\\>@LGO,)\$I,:?e#m)-?3JS6-[#'SBX:5/X9
%qgUo*/@5fAQNV`(9c_9UT;.VCemD?XhnjH?ra!,IlS5N9rj6Ho=?f<"f)*:>p&:i4qJgNplfT!6efU5NX@N6T#M:u]G[.JnD`fQ:
%MpJU5p8Ii&&(h!7ja]LY"7ZK[ZQ";qp>'qs?uIeLL-;OqncAX^iT1Z0*VN#RmTQptqn"Kl$233hLgaX[a!ZIekgA`#He9:0>@HuW
%,msN]NVaRd<qgsX^A*+CY_S5mT<S&PPR73mUTD8F\:ofKho_^u2sC@ZhO92eY_R6]I"6XOkd&(>ptkasII6uK2V?&Vc,6d3J02].
%mLu3%p&RIJ"84-<H4JTB5P4j.ZF>;O%/]&1:P-9nN+%d>d\F$2XHrRjAS+(^3K71&Pt*r=O0YR+YT=Ic`2lHr_tsQ%>Ik<q^DQ1K
%%q`NRb(]NX0-k,B-^.9U^C(i;jHT?+LM&5,Aj*^L<b?cK')Tds7FjD*J&CC'@Gab=Xg%8h)sllZ'JEOSq[r0N<\M&nc0&('cMne+
%f[%qKqf/jZnG/pgHTsNBID:@Sp2[,om-u_lBo6U(o!T5bPV$/n\'a%6-Yg%Wgthgt/+$QT%]^nG"'Mal<j$GAeM:VYT#ka37]B"e
%8$,'UX(?r7Vl8,Yai.]GYXd!OWuDi@95b36Yj[RD#kkMnZjHFP-$%odO5&m@Y_QAaWn$[Kb$VDW>"c%C<m)G)TloEo%bN#fhXf9A
%gm@?`]p?2)@j_L#:fV%=/j7k#QE,#hU4"i;1$rCX9'WfP\Ad<7UHO3Z2%/fbU5*HDLiOcEjc)sk6se%u,#33(/Q&3@eS>K?Rb^Y*
%qeQ`!ZdA]"J;Vsaf^$UoBrPX-95jU=U&lD?a/)X9/P;%-8-8_Kjokd7os/94I^:@a)t;a'b%5MpI!iJ%]p;2\C6s5uWu4sgCM=-1
%6=*<dm4\Jc:>hU7::unFNcA&$!C%#(ljiq:Z6-kHZ1XO[\+Q(Ei`j0EoieNG8UP<^\YC-*\p\M[X'bQ@.$!WbWlW!E,6Id,\q!!T
%[K4.X-hDeWg;a#8repNkKbEimQn[$*q0jj!>ZH%;VR_]\(-OZ5llg'olEpbsD$-;QO%gte;96C?'J4&W<P_qQ7H&YN!"n[*G<iZ.
%3qoI[9Dl`?i,%pi8nDFb]$tMPm&'*IQ%c<kqZ&5%,ON1+fCF2L\V+CPS*!bTj_]^dijD0^U0cie"RK>5ERtA@8E.d0[^9M([$rXS
%9\_7rg1cT`m35"RlN&;:cIS\Aor*SEC:6P#P#[5jl]Jq""SL<nju:ef?IkmM0@o9W:g^CmB$9qdX0J\X&e/WYjbTYFg3ocq0/8XC
%&j%ue#8YgU3;-f.l<C&Y)mdW0HE2aG"/:mkq"eTb*pX<t4R/,pndi$eW_gF@$'$EpAEeIe>f%MaRIq=JDCW*5@O#5*[`"X6$G4q'
%OEX>!1VUDr5oAMXYD_qs[+A*n+/o#?j)=9:)<7jL]o"Dnk[_>Kg*F[nn#mt>*g=7L%7ZsaD2d@A2V;oB46-9I)rpgB1?6ESD2b+M
%^DMH*W%brq?\0,%E#$Ull8KqD^A8X8N(:keV-6M'3ou"an,6lJaiaBVZ>(u74^85MnYVKo`b.(U.H<3BMDPVEWPpfacB'Y#fQ;jQ
%q<Kl.2:TIBkm[E@<giMLGJBC5mEf$'a_U;@Pk$+_-ft6':6^Nn:h$cP_7[XmM_2&iA#/AuaOcSCCl/"Yk7Otq#nQ;R[Tn5J#Nd0J
%^K#*,asDs#/*?_@c+n_;HLmR7o1uRS@E]shg_fXfcZ_:k-cB[.bbIWV*LM>+/Y:3^R(%P5N;;%sRtQ'6*Fg-TV50J3[=,j'CNgQV
%iQ8'PGpG=S.RgT,,]t:fbg%Db*c2@i"8%[?[fc9aqcJloXP$T<JA+-C61:4P)sEuWdgE)Z/`-ST1e'#)qE2Ia)sDuWT0[rMGKi*c
%SaI$6cd@aD[I+1<Y<99W-g.O;oj`0T"aZY0V&f2LKKqal([/oU#k\+n8pW_4NV)fL(?plQ-.8Oqp,Vj3$Uf@&[)BD!W8oss(,@m@
%%m=Db8.SHSF]uY7@9L]GH8tlW#L[h^_'2$a;RC_59q\:W9C0-W"boSZMcD+PVnOK'dX+%u-%0_,7&5<Y31EHG"'8=\Sl_Y^0@m^q
%8T3_*ij?()?<NeampCP$SPr4.:K?:Ds5*'0qLIY(POp/$-,"R7M"J#lkTE#\T[F(n(Q0n%l&iY^8SVB>r@:lEmmTBuH3BE6kM]Mf
%G*6%c%jEjq^Hob@CG`o,a3$5Sb%8#Qmj,<Z5#&OTC0BnG,dk!Y1.nB5*dt'L](tX',3`f@=pogK\[/NS\>;K!hn4-$BTIFB-E/<0
%1p2BCg(tQ*'(&OdGcB2uRU9'kQDS*3,dhIMqqeu7dN2_M,4g,nhK4L2qqN3rMtU^3lmM02Apo=*2g1<FmYdn^/+3;u`4\%^gng>*
%p[32h_EB5lU$T:u3RtIrIZ>!-kNKe]37ru_nYV9BEH6a0IK_h$j\cEZW;!GE[=jWn1+q&;HF]%.(,@n?QI%F"F]sCH;6+9%_Q_==
%N-`FeJk@U&k2;N#QL9q\W?p&^.B(`/g[/%hY,j9^C,T2ooX3Xe4o,?5VGbTjc3ILKQ8f9@'X:bY$1B.IHqM^7@G%&P:8O8c(&s0@
%dTUoRO]pTXCkO%$EmYqK\@cT/Xd"J'W88V4E#[>&HSfHOFn`o2#J8Q-2%Ep!08;H`II8]ERJ+_\]S"SF=k<L?qqMR+PkLq:Up[k;
%)*;Oahp8L^7CAFp=DQ_^PkNXF-)H%'6PJ1g:XF41hF*#9ls]ggcJcj?^C)K/^A@9=rIc;tYJ._RYX_fsWRhd;Ug?)6YV-u`D(hKe
%C+WjMFB,01^>u4rbA)?'eQSDsTomp3eXfH(XKU^uXX3ttI1='i/qMheh[T:Co`q]bZ9GZY&h^<J]im#>kX<+lg"`]q-$?hlTY@it
%1FN$p.PpAeLnMJCm\ol4D5\Opb,?C0\"S7W_*\*?WIk!+8Q1<=QU<4Y!dg9X&ac';@2nSckT60r/HP1!eS5C47_TD6,m%_?\o::.
%*W??=g#tf50C_%\lB0:2e7sioYX\!aOZ;e:LP:)BTn6H"OkFhMlnN-+,dju`=VjX]+5>gTWF[s+S4YAO'EDnU%bsQE'bthD,E[#?
%*ffBkCFuZS@q=j5e2J1AmAS(N;\H4/HOk;%j_>\p:_27SV-6NF(9BD^;;^_'2UmNN]iW`.I6h/"C+VT19NoWo)R5LWnpXC5:nF@`
%D2>4"`224J`1Y/Z&;=Z"=*%qE[k.6Y><lPu,b2'KWn%f7S+Q264a]8D[$LJFHpL#f7tFPt[W!ojMkmb66c!na46\JDF&aNK*qo*)
%>0@8^lE,44'N7CPUV\AUZ[48KIeGdZf+Rs77pB-?>M]=j3+"DV,Hp3cX)EOF>21(]XkiqAqDl-L^7"S--b]HcM=f&](_Z(M6:I]B
%,=MAg3mg&#7\oc;<RUcdD5<e*YXj7K.Zkd;Yiu8SCWoIur5pORhP)>%ku%C$%ap!Ym3"RI"%c(&HGB<-o\Fku88i)h-9ZgOocQDF
%3R:!;\>gSoII=.',/(Gg;UW&%JT.<soJeb&^0OT5mjTQ?qJ)Su)"f9WQ9?4'kG@u52l_#d#Ln+'qMtFK1dZW-iD.n;%n9"$W=K:-
%ZXN&_IDN)W#Llf_/Ml[3qLqcg^\8T/Nd@np@FSKuR8KURXCjp!qfQ.I8VKXAenTk8s#uS4:1D^_>DT3LTg(UFp%C.14aoo6<KE][
%q`m:G$C+EuIDp7VlDo7M#k]TBH4JG7Ng:RU2ra-F:g_qYW(.n,f7#F=91oNT+_'BbS(?'02Ui[G'_N#J+&dKQ9J8k`S+?E4qL_kA
%;309kD4nTieXat$$$p-@libAhg(f)?HHbmH[Y*G6;e644*$N\Td09AdYRU6b9c<T`j9YC,!B]K?3XPC+p+C*gKT76510_J/FiE-j
%H,NB?:u:Y+Jc*+c<jO)O(tOt6+ciRiC(]s)D2$/E9diGB9AGlm50T<hj]"*AU*ct"bm*3$?PRI;&'+oRZR&M;][mf_*]*I[B$84M
%h8sL/[%9t.O>jeAROrGWs5%4n1hJU&>Mc;!*pJjro+8i']@t\j35Vi,HpJY+8$uhJIG$8N>IsN9='NtATo8J*X!Yp>hW(.MO/1$Y
%e<X4E>,qKiq:b.[Pk)4-;Hr#/I@\lRn#,p:<l^.?ogqm.Q5N?EWbP0DqHCC_o;..gE5&ccs3`ogg0[n2([S_qnE-ciMhH=&!I[V'
%e<]kngqFo(04$^lTWbV_g(N;,Mr4m5fFUZT[`%?q_NB?Na_F\\V.ge#Y-u8hhK-boo^?$M!jh+aijo=[I948QW#l*<M>Dj-$h`EU
%jtD5[Va(4S+27aM%tFNI[t"8;0E3)'5QBgu^AR)Bq=C6XnDiuPr;=>-rGV_pLVN[-5Q(;g^\dDjs8Hs:qA3N<(OOF,p<D4ef73dT
%+8W&;"9-Wmro/@(p>tJPq"!bNj(El3o3_LbO8o0606lFlq^;F=M_Fgklb,Bor;,m=Q`'J]mJXDqqjRP10<,!Oni&R7oUciLTAP-I
%IJQb'0>0ULmI`F:5OUfYJ"0">kKE2a=+@"F_--GTa2@M>I(Yf!bPLlrgOK7oleh[-0CnlHIe?e2COc/hcYrgCO2(SBDu]Wg5Q/3D
%f*D<?LYr-j7iT;ia8b>.6WmIUQhNRjs7cB\@.77trV\_C`F$J8^AR9:Dge7-q<S(QX8hn&J,SKdJ+6V?k'coPq""#`rp>.4k'd&T
%RpTq1\um^$`;fZ+5Q0q%rZD$p2'_neT.qp2GJFOsGK5(-5@77>d-<^S][1pL(H^aQ!5HLf\As**:Z?kPs7CfUA,l2_^:sNC0E:58
%Faa)AcecG7hu@PNnS_?bs*mcuigaJ2J"'pFgD&]*VAM//fUr->T>174SgrXr`h"^<rT5@&pYl-jpj`>*:OW:kpR?ZW,N+"5TDT8q
%mPdB,8+Q7YrqOMUa6.RA-hR5VJFT90Cqu<bGWNL(nF?=)YN+(Fi]Y7Vc\Qf??h'A*s7OFq"NGr^PN)P]+.j8bs63;e^]*hMnU=f:
%Sf$q>5<^m[nW-J*GPigQ2no16a!\nhr0*]mn#:\^HJjs8qX`bGfDg^UaSRE9I"qFkq%WAhJ&ua7pVBXTP.^hk?h#ZJ^cjnUI/I@D
%4MgF]l%t!&i6sIc-iE5.K"(["cP>s6dussq5Q0:+)3fC$h##I]Fk1bdpY4U*n6c4fgHYTHXKm<TO2(XCJ,&Th++O4KT7?b$+9(6t
%X"V6fdguKRk<Jt1LG/]&pOE)gN8Pf&J+29<s7&=g9?$o;7h!<Y~>
%AI9_PrivateDataEnd
